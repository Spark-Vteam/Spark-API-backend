{"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/app.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":51}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":45}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":59}},"8":{"start":{"line":11,"column":13},"end":{"line":11,"column":37}},"9":{"start":{"line":12,"column":13},"end":{"line":12,"column":28}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":36}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":52}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":16}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"15":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":47}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"18":{"start":{"line":22,"column":0},"end":{"line":22,"column":62}},"19":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"20":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}},"21":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}},"22":{"start":{"line":26,"column":15},"end":{"line":28,"column":2}},"23":{"start":{"line":27,"column":4},"end":{"line":27,"column":62}},"24":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":39},"end":{"line":26,"column":40}},"loc":{"start":{"line":26,"column":45},"end":{"line":28,"column":1}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":37}},"type":"binary-expr","locations":[{"start":{"line":11,"column":13},"end":{"line":11,"column":29}},{"start":{"line":11,"column":33},"end":{"line":11,"column":37}}],"line":11},"4":{"loc":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"type":"if","locations":[{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},{"start":{"line":18,"column":0},"end":{"line":20,"column":1}}],"line":18}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":3,"1":1},"b":{"0":[1,1,1],"1":[0,3],"2":[3,3],"3":[1,0],"4":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/app.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/app.ts"],"names":[],"mappings":";;;;;AAAA,sDAAgF;AAChF,8DAAqC;AACrC,oDAA4B;AAG5B,8CAA0D;AAC1D,4DAA6E;AAC7E,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE7B,MAAM,GAAG,GAAgB,IAAA,iBAAO,GAAE,CAAC;AACnC,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAErD,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAG5B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;IAEjC,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,UAAU,CAAC,CAAC,CAAC;CAC/B;AAED,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEnD,GAAG,CAAC,GAAG,CAAC,4BAAoB,CAAC,CAAC;AAE9B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;AAEpC,GAAG,CAAC,GAAG,CAAC,2BAAY,CAAC,CAAC;AAEtB,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACxC,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import express, { Application, Request, Response, NextFunction } from 'express';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\n\n// Middleware\nimport { logIncomingToConsole } from './middleware/index';\nimport { invalidPathHandler, errorHandler } from './middleware/errorHandler';\nconst port = process.env.PORT || 4000;\n\nconst cors = require('cors');\n\nconst app: Application = express();\nconst httpServer = require('http').createServer(app);\n\napp.use(cors());\napp.options('*', cors());\n\napp.disable('x-powered-by');\n\n// don't show the log when it is test\nif (process.env.NODE_ENV !== 'test') {\n    // use morgan to log at command line\n    app.use(morgan('combined')); // 'combined' outputs the Apache style LOGs\n}\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(logIncomingToConsole);\n\napp.use('/', require('./versions'));\n\napp.use(errorHandler);\n\nconst server = httpServer.listen(port, () => {\n    console.log('Spark api listening on port ' + port + '\\n');\n});\n\nexport default server;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ccffca9adee9ac57dabb281558a8be9c44f95e50","contentHash":"c82d7c667d696ea62e4a15ac14b4a89b0c94cbf00b41ff87cb22b5c69793b45e"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":64}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":11}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}}},"fnMap":{"0":{"name":"logIncomingToConsole","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":29}},"loc":{"start":{"line":4,"column":46},"end":{"line":7,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":13,"3":13,"4":1},"f":{"0":13},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts"],"names":[],"mappings":"AAGA,YAAY,CAAC;;;AAYb,SAAgB,oBAAoB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;IAChF,OAAO,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;IAC5D,IAAI,EAAE,CAAC;AACX,CAAC;AAHD,oDAGC","sourcesContent":["/**\n * General middleware.\n */\n'use strict';\nimport express, { Application, Request, Response, NextFunction } from 'express';\n/**\n * Log incoming requests to console to see who accesses the server\n * on what route.\n *\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nexport function logIncomingToConsole(req: Request, res: Response, next: NextFunction) {\n    console.info(`Got request on ${req.path} (${req.method}).`);\n    next();\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2270f1da1ca4ea7aa4e62b82970c7ca04a735593","contentHash":"84672698a0572c69027141306b670641b012a58b4b5b732b0fc4136d1b2a0c28"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/errorHandler.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/errorHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":81}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":19}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":31}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"6":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":60}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":65}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":63}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":30},"end":{"line":9,"column":5}},"line":5},"1":{"name":"errorHandler","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":21}},"loc":{"start":{"line":12,"column":45},"end":{"line":17,"column":1}},"line":12},"2":{"name":"invalidPathHandler","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":27}},"loc":{"start":{"line":19,"column":45},"end":{"line":21,"column":1}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":1,"6":11,"7":0,"8":11,"9":1,"10":0,"11":1},"f":{"0":0,"1":11,"2":0},"b":{"0":[0,11]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/errorHandler.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/errorHandler.ts"],"names":[],"mappings":";;;AAMA,MAAa,WAAY,SAAQ,KAAK;IAIlC,YAAY,OAAgB,EAAE,GAAW;QACrC,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;CACJ;AATD,kCASC;AAUD,SAAgB,YAAY,CAAC,KAAU,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB;IAIpF,IAAI,KAAK,YAAY,WAAW,EAAE;QAC9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KACvD;IACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;AACjE,CAAC;AARD,oCAQC;AAWD,SAAgB,kBAAkB,CAAC,GAAY,EAAE,GAAa,EAAE,KAAmB;IAC/E,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;AAC/D,CAAC;AAFD,gDAEC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\n\n/**\n * Represents an error\n * @constructor\n */\nexport class CustomError extends Error {\n    success: boolean;\n    msg: string;\n\n    constructor(success: boolean, msg: string) {\n        super(msg);\n        this.success = success;\n        this.msg = msg;\n    }\n}\n/**\n * Error handling Middleware function for logging 500 error message\n *\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Promise}\n */\nexport function errorHandler(error: any, req: Request, res: Response, next: NextFunction) {\n    // console.log('ERRORHANDLER');\n    // console.log(error);\n\n    if (error instanceof CustomError) {\n        return res.status(400).json({ status: 400, error });\n    }\n    return res.status(500).json({ status: 500, msg: { error } });\n}\n\n/**\n * Fallback Middleware function for returning 404 error for undefined paths\n *\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nexport function invalidPathHandler(req: Request, res: Response, _next: NextFunction): void {\n    res.status(404).send({ error: true, msg: 'invalid path' });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4693ab366dc5e6f47cf90fd0d6a20a4371e0aa1c","contentHash":"72e7c24cbe9ccfc790aebc4720ca5dc6769c2ba1422279f704b3c89f9f8177bc"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/index.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/index.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/index.ts"],"names":[],"mappings":";;AAAA,qCAA0E;AAC1E,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACnC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAEnC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import express, { Application, Request, Response, Router } from 'express';\nconst router = Router();\n\nrouter.use('/v1', require('./v1'));\nrouter.use('/v2', require('./v2'));\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a6ee0f65eaf7f1b01ce9648e0d1450185158ee3f","contentHash":"b6c8efc10995b29a6be12bef716788f837f280f842483875615cf2c0a40e59a2"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/index.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":46}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":45}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"16":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/index.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/index.ts"],"names":[],"mappings":";;AAAA,qCAA0E;AAC1E,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAOxB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC7C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC7C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAC9C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC7C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC7C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC7C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;AAEhD,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import express, { Application, Request, Response, Router } from 'express';\nconst router = Router();\n\n/**\n * v1 ROUTE\n * /v1/:\n * Below endpoints are included in version 1\n */\nrouter.use('/', require('./routes/main'));\nrouter.use('/', require('./routes/station'));\nrouter.use('/', require('./routes/user'));\nrouter.use('/', require('./routes/bike'));\nrouter.use('/', require('./routes/rent'));\nrouter.use('/', require('./routes/admin'));\nrouter.use('/', require('./routes/auth'));\nrouter.use('/', require('./routes/charger'));\nrouter.use('/', require('./routes/geofence'));\nrouter.use('/', require('./routes/invoice'));\nrouter.use('/', require('./routes/pricing'));\nrouter.use('/', require('./routes/apiKeys'));\nrouter.use('/', require('./routes/creditcard'));\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ecff953c7dd0c9334dd869794212dab7351e8604","contentHash":"8e9a28d168651c3148004c594e87f66f0b97546b9a05a20621c19ceb140fa1e8"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/main.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/main.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":11,"column":3}},"5":{"start":{"line":7,"column":17},"end":{"line":9,"column":5}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":19}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":16},"end":{"line":6,"column":17}},"loc":{"start":{"line":6,"column":30},"end":{"line":11,"column":1}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/main.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/main.ts"],"names":[],"mappings":";;AAAA,qCAAoD;AACpD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AACxB,MAAM,QAAQ,GAAG,kBAAkB,CAAC;AAcpC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5C,MAAM,IAAI,GAAG;QACT,KAAK,EAAE,mBAAmB,QAAQ,EAAE;KACvC,CAAC;IACF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { Request, Response, Router } from 'express';\nconst router = Router();\nconst sitename = 'Spark API | Main';\n\n/**\n * Main ROUTE\n * /:\n *   get:\n *     summary: Display\n *     description: Render welcome page\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/', (req: Request, res: Response) => {\n    const data = {\n        title: `Welcome to the  ${sitename}`,\n    };\n    res.send(data);\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8497ae0607c54085f40990fc1f7dafc197a2d94d","contentHash":"812581f7e2e356c88a9522b2ae82d1556dfa030bceeabdf97565d85f784c0d8f"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/station.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/station.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":69}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":66}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":47},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":22},"end":{"line":27,"column":35}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":75}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":35,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":77},"end":{"line":18,"column":78}},"loc":{"start":{"line":18,"column":90},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":27},"end":{"line":26,"column":28}},"loc":{"start":{"line":26,"column":47},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":81},"end":{"line":26,"column":82}},"loc":{"start":{"line":26,"column":94},"end":{"line":34,"column":1}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/station.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/station.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAkE;AAElE,sEAAmD;AACnD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAcxB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,IAAI;QACA,OAAO,MAAM,iBAAY,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACxD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAChC,IAAI;QACA,OAAO,MAAM,iBAAY,CAAC,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACjE;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport stationModel from '../../../models/station';\nconst router = Router();\n\n/**\n * Stations ROUTE\n *  /station:\n *   get:\n *     summary: List of stations\n *     description: Render  page\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/station', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await stationModel.showAllStations(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Stations ROUTE\n *  /station/:id:\n *   get:\n *     summary: One station\n *     description: Render station by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/station/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const stationId = req.params.id;\n    try {\n        return await stationModel.getOneStation(stationId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"afe575472c69afcdc40014662b0f1d3771945c3e","contentHash":"153be4b56d02a792dfd276f611bf25877e42eba693189af3d3b038a7c06678e6"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":21},"end":{"line":49,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":50}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":70}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":47,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":46,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":49}},"29":{"start":{"line":38,"column":30},"end":{"line":38,"column":62}},"30":{"start":{"line":39,"column":16},"end":{"line":39,"column":70}},"31":{"start":{"line":42,"column":16},"end":{"line":42,"column":28}},"32":{"start":{"line":45,"column":16},"end":{"line":45,"column":31}},"33":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllStations","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":45}},"loc":{"start":{"line":17,"column":57},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"getOneStation","decl":{"start":{"line":33,"column":28},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":64},"end":{"line":48,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":47,"column":9}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,kDAAgC;AAEhC,MAAM,YAAY,GAAG;IAMjB,eAAe,EAAE,SAAe,eAAe,CAAC,GAAa,EAAE,IAAkB;;YAC7E,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,sBAAsB,CAAC;gBAEnC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACzD;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,aAAa,EAAE,SAAe,aAAa,CAAC,SAAiB,EAAE,GAAa,EAAE,IAAkB;;YAC5F,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,qBAAqB,CAAC;gBAElC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEjF,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACzD;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst stationModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllStations: async function showAllStations(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_stations();`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show one station\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneStation: async function getOneStation(stationId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_station(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [stationId]);\n\n            return res.send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default stationModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"db468afa235a0de6fa6ef43ae0d8a14b23530eb3","contentHash":"9c3534ae094b3f8ea213663b9ec3cd4c40da6c5f54cf80ded9fded52fa9fd18e"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":17,"column":17},"end":{"line":30,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":28,"column":11}},"19":{"start":{"line":21,"column":12},"end":{"line":26,"column":15}},"20":{"start":{"line":27,"column":12},"end":{"line":27,"column":22}},"21":{"start":{"line":31,"column":0},"end":{"line":31,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"getDb","decl":{"start":{"line":18,"column":20},"end":{"line":18,"column":25}},"loc":{"start":{"line":18,"column":28},"end":{"line":29,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":28,"column":9}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":11,"2":0,"3":11,"4":0,"5":0,"6":0,"7":11,"8":11,"9":11,"10":11,"11":11,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":11,"19":11,"20":0,"21":1},"f":{"0":11,"1":11,"2":0,"3":11,"4":0,"5":11,"6":11,"7":2,"8":11,"9":11},"b":{"0":[1,1,1],"1":[11,0],"2":[11,11],"3":[0,11],"4":[11,11],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6DAAmC;AAEnC,uDAA+B;AAE/B,MAAM,QAAQ,GAAG;IAMb,KAAK,EAAE,SAAe,KAAK;;YACvB,IAAI,EAAoB,CAAC;YACzB,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;gBAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;gBACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;gBACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;gBACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;aAC/B,CAAC,CAAC;YAEH,OAAO,EAAE,CAAC;QACd,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,QAAQ,CAAC","sourcesContent":["import mysql from 'mysql2/promise';\n\nimport config from '../config';\n\nconst database = {\n    /**\n     * Main function to connect to database.\n     * @async\n     * @returns void\n     */\n    getDb: async function getDb() {\n        let db: mysql.Connection;\n        db = await mysql.createConnection({\n            host: config.DB_HOST,\n            user: config.DB_USER,\n            database: config.DB_NAME,\n            password: config.DB_PASSWORD,\n        });\n        // console.log('Db', db);\n        return db;\n    },\n};\n\nexport default database;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5460b855858f5bcd8813c021d74170ab38ee7876","contentHash":"6d3563684c751be1deae0ea19a271ff7db0b2d81cb3ed6e6f79acc1c2f9e5cfc"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":80}},"6":{"start":{"line":9,"column":18},"end":{"line":17,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":16,"column":6}},"8":{"start":{"line":18,"column":26},"end":{"line":25,"column":1}},"9":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"10":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":64}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"13":{"start":{"line":26,"column":15},"end":{"line":26,"column":26}},"14":{"start":{"line":27,"column":24},"end":{"line":27,"column":49}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":18},"end":{"line":9,"column":19}},"loc":{"start":{"line":9,"column":24},"end":{"line":17,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":26},"end":{"line":18,"column":27}},"loc":{"start":{"line":18,"column":38},"end":{"line":25,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":5,"11":0,"12":1,"13":1,"14":1,"15":1},"f":{"0":2,"1":1,"2":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,5]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,oDAA4B;AAG5B,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;AAwB5D,MAAM,SAAS,GAAG,GAAQ,EAAE;IACxB,OAAO;QACH,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;QACpC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;KAC/B,CAAC;AACN,CAAC,CAAC;AAQF,MAAM,iBAAiB,GAAG,CAAC,MAAW,EAAU,EAAE;IAC9C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAC/C,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,gBAAgB,CAAC,CAAC;SACvD;KACJ;IACD,OAAO,MAAgB,CAAC;AAC5B,CAAC,CAAC;AAEF,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;AAE3B,MAAM,eAAe,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAElD,kBAAe,eAAe,CAAC","sourcesContent":["import path from 'path';\nimport dotenv from 'dotenv';\n\n// Parsing the env file.\ndotenv.config({ path: path.resolve(__filename, './.env') });\n\n// Interface to load env variables\n// Note these variables can possibly be undefined\n// as someone could skip these varibales or not setup a .env file at all\n\ninterface ENV {\n    DB_USER: string | undefined;\n    DB_PASSWORD: string | undefined;\n    DB_NAME: string | undefined;\n    DB_PORT: number | undefined;\n    DB_HOST: string | undefined;\n}\n\ninterface Config {\n    DB_USER: string;\n    DB_PASSWORD: string;\n    DB_NAME: string;\n    DB_PORT: number;\n    DB_HOST: string;\n}\n\n// Loading process.env as ENV interface\n\nconst getConfig = (): ENV => {\n    return {\n        DB_USER: process.env.DB_USER,\n        DB_PASSWORD: process.env.DB_PASSWORD,\n        DB_NAME: process.env.DB_NAME,\n        DB_PORT: Number(process.env.PORT),\n        DB_HOST: process.env.DB_HOST,\n    };\n};\n\n// Throwing an Error if any field was undefined we don't\n// want our app to run if it can't connect to DB and ensure\n// that these fields are accessible. If all is good return\n// it as Config which just removes the undefined from our type\n// definition.\n\nconst getSanitzedConfig = (config: ENV): Config => {\n    for (const [key, value] of Object.entries(config)) {\n        if (value === undefined) {\n            throw new Error(`Missing key ${key} in config.env`);\n        }\n    }\n    return config as Config;\n};\n\nconst config = getConfig();\n\nconst sanitizedConfig = getSanitzedConfig(config);\n\nexport default sanitizedConfig;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df2ca8ea1aae14bf5bb7e667077cd587811af874","contentHash":"f685139e6cdd6bb05599fd9f01079e70b0c2fb6e56bbacbc457fc291723b9215"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/user.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":63}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":40},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":60}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":36,"column":4}},"24":{"start":{"line":26,"column":44},"end":{"line":36,"column":2}},"25":{"start":{"line":27,"column":19},"end":{"line":27,"column":32}},"26":{"start":{"line":28,"column":4},"end":{"line":35,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"28":{"start":{"line":30,"column":12},"end":{"line":30,"column":70}},"29":{"start":{"line":33,"column":12},"end":{"line":33,"column":24}},"30":{"start":{"line":37,"column":0},"end":{"line":49,"column":4}},"31":{"start":{"line":37,"column":41},"end":{"line":49,"column":2}},"32":{"start":{"line":38,"column":21},"end":{"line":38,"column":29}},"33":{"start":{"line":39,"column":25},"end":{"line":39,"column":79}},"34":{"start":{"line":39,"column":63},"end":{"line":39,"column":78}},"35":{"start":{"line":40,"column":38},"end":{"line":40,"column":89}},"36":{"start":{"line":40,"column":66},"end":{"line":40,"column":88}},"37":{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},"38":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"39":{"start":{"line":43,"column":12},"end":{"line":43,"column":75}},"40":{"start":{"line":47,"column":8},"end":{"line":47,"column":20}},"41":{"start":{"line":50,"column":0},"end":{"line":58,"column":4}},"42":{"start":{"line":50,"column":47},"end":{"line":58,"column":2}},"43":{"start":{"line":51,"column":21},"end":{"line":51,"column":29}},"44":{"start":{"line":52,"column":4},"end":{"line":57,"column":5}},"45":{"start":{"line":53,"column":8},"end":{"line":53,"column":67}},"46":{"start":{"line":56,"column":8},"end":{"line":56,"column":20}},"47":{"start":{"line":59,"column":0},"end":{"line":75,"column":4}},"48":{"start":{"line":59,"column":44},"end":{"line":75,"column":2}},"49":{"start":{"line":60,"column":19},"end":{"line":60,"column":32}},"50":{"start":{"line":61,"column":21},"end":{"line":61,"column":29}},"51":{"start":{"line":62,"column":4},"end":{"line":74,"column":5}},"52":{"start":{"line":63,"column":29},"end":{"line":69,"column":9}},"53":{"start":{"line":70,"column":8},"end":{"line":70,"column":98}},"54":{"start":{"line":73,"column":8},"end":{"line":73,"column":20}},"55":{"start":{"line":76,"column":0},"end":{"line":85,"column":4}},"56":{"start":{"line":76,"column":52},"end":{"line":85,"column":2}},"57":{"start":{"line":77,"column":20},"end":{"line":77,"column":36}},"58":{"start":{"line":78,"column":19},"end":{"line":78,"column":32}},"59":{"start":{"line":79,"column":4},"end":{"line":84,"column":5}},"60":{"start":{"line":80,"column":8},"end":{"line":80,"column":82}},"61":{"start":{"line":83,"column":8},"end":{"line":83,"column":20}},"62":{"start":{"line":86,"column":0},"end":{"line":95,"column":4}},"63":{"start":{"line":86,"column":60},"end":{"line":95,"column":2}},"64":{"start":{"line":87,"column":20},"end":{"line":87,"column":36}},"65":{"start":{"line":88,"column":19},"end":{"line":88,"column":32}},"66":{"start":{"line":89,"column":4},"end":{"line":94,"column":5}},"67":{"start":{"line":90,"column":8},"end":{"line":90,"column":88}},"68":{"start":{"line":93,"column":8},"end":{"line":93,"column":20}},"69":{"start":{"line":96,"column":0},"end":{"line":105,"column":4}},"70":{"start":{"line":96,"column":53},"end":{"line":105,"column":2}},"71":{"start":{"line":97,"column":21},"end":{"line":97,"column":38}},"72":{"start":{"line":98,"column":19},"end":{"line":98,"column":32}},"73":{"start":{"line":99,"column":4},"end":{"line":104,"column":5}},"74":{"start":{"line":100,"column":8},"end":{"line":100,"column":84}},"75":{"start":{"line":103,"column":8},"end":{"line":103,"column":20}},"76":{"start":{"line":106,"column":0},"end":{"line":114,"column":4}},"77":{"start":{"line":106,"column":47},"end":{"line":114,"column":2}},"78":{"start":{"line":107,"column":19},"end":{"line":107,"column":32}},"79":{"start":{"line":108,"column":4},"end":{"line":113,"column":5}},"80":{"start":{"line":109,"column":8},"end":{"line":109,"column":69}},"81":{"start":{"line":112,"column":8},"end":{"line":112,"column":20}},"82":{"start":{"line":115,"column":0},"end":{"line":115,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":20},"end":{"line":18,"column":21}},"loc":{"start":{"line":18,"column":40},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":74},"end":{"line":18,"column":75}},"loc":{"start":{"line":18,"column":87},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":24},"end":{"line":26,"column":25}},"loc":{"start":{"line":26,"column":44},"end":{"line":36,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":78},"end":{"line":26,"column":79}},"loc":{"start":{"line":26,"column":91},"end":{"line":36,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":37,"column":21},"end":{"line":37,"column":22}},"loc":{"start":{"line":37,"column":41},"end":{"line":49,"column":2}},"line":37},"13":{"name":"(anonymous_13)","decl":{"start":{"line":37,"column":75},"end":{"line":37,"column":76}},"loc":{"start":{"line":37,"column":88},"end":{"line":49,"column":1}},"line":37},"14":{"name":"(anonymous_14)","decl":{"start":{"line":39,"column":54},"end":{"line":39,"column":55}},"loc":{"start":{"line":39,"column":63},"end":{"line":39,"column":78}},"line":39},"15":{"name":"(anonymous_15)","decl":{"start":{"line":40,"column":57},"end":{"line":40,"column":58}},"loc":{"start":{"line":40,"column":66},"end":{"line":40,"column":88}},"line":40},"16":{"name":"(anonymous_16)","decl":{"start":{"line":50,"column":27},"end":{"line":50,"column":28}},"loc":{"start":{"line":50,"column":47},"end":{"line":58,"column":2}},"line":50},"17":{"name":"(anonymous_17)","decl":{"start":{"line":50,"column":81},"end":{"line":50,"column":82}},"loc":{"start":{"line":50,"column":94},"end":{"line":58,"column":1}},"line":50},"18":{"name":"(anonymous_18)","decl":{"start":{"line":59,"column":24},"end":{"line":59,"column":25}},"loc":{"start":{"line":59,"column":44},"end":{"line":75,"column":2}},"line":59},"19":{"name":"(anonymous_19)","decl":{"start":{"line":59,"column":78},"end":{"line":59,"column":79}},"loc":{"start":{"line":59,"column":91},"end":{"line":75,"column":1}},"line":59},"20":{"name":"(anonymous_20)","decl":{"start":{"line":76,"column":32},"end":{"line":76,"column":33}},"loc":{"start":{"line":76,"column":52},"end":{"line":85,"column":2}},"line":76},"21":{"name":"(anonymous_21)","decl":{"start":{"line":76,"column":86},"end":{"line":76,"column":87}},"loc":{"start":{"line":76,"column":99},"end":{"line":85,"column":1}},"line":76},"22":{"name":"(anonymous_22)","decl":{"start":{"line":86,"column":40},"end":{"line":86,"column":41}},"loc":{"start":{"line":86,"column":60},"end":{"line":95,"column":2}},"line":86},"23":{"name":"(anonymous_23)","decl":{"start":{"line":86,"column":94},"end":{"line":86,"column":95}},"loc":{"start":{"line":86,"column":107},"end":{"line":95,"column":1}},"line":86},"24":{"name":"(anonymous_24)","decl":{"start":{"line":96,"column":33},"end":{"line":96,"column":34}},"loc":{"start":{"line":96,"column":53},"end":{"line":105,"column":2}},"line":96},"25":{"name":"(anonymous_25)","decl":{"start":{"line":96,"column":87},"end":{"line":96,"column":88}},"loc":{"start":{"line":96,"column":100},"end":{"line":105,"column":1}},"line":96},"26":{"name":"(anonymous_26)","decl":{"start":{"line":106,"column":27},"end":{"line":106,"column":28}},"loc":{"start":{"line":106,"column":47},"end":{"line":114,"column":2}},"line":106},"27":{"name":"(anonymous_27)","decl":{"start":{"line":106,"column":81},"end":{"line":106,"column":82}},"loc":{"start":{"line":106,"column":94},"end":{"line":114,"column":1}},"line":106}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":28,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":35,"column":5}},{"start":{"line":28,"column":4},"end":{"line":35,"column":5}}],"line":28},"9":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/user.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport userModel from '../../../models/user';\nconst router = Router();\n\ninterface UserInfo {\n    [key: string]: string;\n    firstName: string;\n    lastName: string;\n    phoneNumber: string;\n    emailAdress: string;\n    password: string;\n    oauth: string;\n}\n\n/**\n * Users ROUTE\n * /users:\n *   get:\n *     summary: Display list of users\n *     description: Render all users from database\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/user', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await userModel.showAllUsers(res, next);\n    } catch (error) {\n        // Pass the error to the error handler middleware\n        next(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/:id:\n *   get:\n *     summary: One User\n *     description: Render User by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/user/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n    if (userId) {\n        try {\n            return await userModel.getOneUser(userId, res, next);\n        } catch (error) {\n            next(error);\n        }\n    }\n});\n\n/**\n * User ROUTE\n *  /user:\n *   post:\n *     summary: Create one user\n *     description: Create user with information\n *     { firstName, lastName,phoneNumber, emailAdress, password }\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post('/user', async (req: Request, res: Response, next: NextFunction) => {\n    const userInfo: UserInfo = req.body;\n\n    const requiredKeys = Object.keys(userInfo).filter((key) => key !== 'oauth');\n    const allRequiredKeysHaveValues = requiredKeys.every((key) => Boolean(userInfo[key]));\n\n    try {\n        if (allRequiredKeysHaveValues) {\n            return await userModel.createOneUser(userInfo, res, next);\n        }\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/login:\n *   post:\n *     summary: Login one user\n *     description: Login user with information\n *     { emailAdress, password }\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post('/user/login', async (req: Request, res: Response, next: NextFunction) => {\n    const userInfo = req.body;\n    try {\n        return await userModel.userLogin(userInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/:id:\n *   get:\n *     summary: Update One User\n *     description: Update User information { firstName, lastName,phoneNumber, emailAdress} by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/user/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n\n    const userInfo = req.body;\n\n    try {\n        const _newUserInfo = {\n            firstName: await userModel.updateUserFirstName(userId, userInfo.firstName, res, next),\n            lastName: await userModel.updateUserLastName(userId, userInfo.lastName, res, next),\n            phoneNumber: await userModel.updateUserPhoneNumber(userId, userInfo.phoneNumber, res, next),\n            emailAdress: await userModel.updateUserEmailAdress(userId, userInfo.emailAdress, res, next),\n            oauth: await userModel.updateUserOauth(userId, userInfo.oauth, res, next),\n        };\n\n        return res.status(200).json({ success: true, msg: `User with id ${userId} was updated` });\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/balance/:id:\n *   put:\n *     summary: Update balance of one User\n *     description: Update User Balance by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/user/balance/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const balance = req.body.balance;\n    const userID = req.params.id;\n\n    try {\n        return await userModel.updateUserBalance(userID, balance, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/partial_balance/:id:\n *   put:\n *     summary: Update partial balance of one User\n *     description: Update User Partial Balance by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/user/partial_balance/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const balance = req.body.balance;\n    const userID = req.params.id;\n\n    try {\n        return await userModel.updateUserPaymentOption(userID, balance, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/password/:id:\n *   get:\n *     summary: Update password of one User\n *     description: Update User password by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/user/password/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const password = req.body.password;\n    const userID = req.params.id;\n\n    try {\n        return await userModel.updateUserPassword(userID, password, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/:id:\n *   get:\n *     summary: Delete One User\n *     description: Delete User by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Promise}\n */\nrouter.delete('/user/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n    try {\n        return await userModel.deleteOneUser(userId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"31f0aeaf59fa407d3211917c59f208e74f63eb9e","contentHash":"f6dd75dc2d537d5d923422573167df9f26f65b1a60f61d2282f169cc0c259c06"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":13},"end":{"line":17,"column":49}},"18":{"start":{"line":18,"column":12},"end":{"line":18,"column":35}},"19":{"start":{"line":19,"column":15},"end":{"line":19,"column":34}},"20":{"start":{"line":20,"column":19},"end":{"line":20,"column":21}},"21":{"start":{"line":21,"column":15},"end":{"line":21,"column":31}},"22":{"start":{"line":22,"column":0},"end":{"line":22,"column":69}},"23":{"start":{"line":23,"column":18},"end":{"line":300,"column":1}},"24":{"start":{"line":25,"column":8},"end":{"line":38,"column":11}},"25":{"start":{"line":26,"column":23},"end":{"line":26,"column":49}},"26":{"start":{"line":27,"column":12},"end":{"line":37,"column":13}},"27":{"start":{"line":28,"column":28},"end":{"line":28,"column":47}},"28":{"start":{"line":29,"column":33},"end":{"line":29,"column":52}},"29":{"start":{"line":30,"column":16},"end":{"line":30,"column":85}},"30":{"start":{"line":33,"column":16},"end":{"line":33,"column":28}},"31":{"start":{"line":36,"column":16},"end":{"line":36,"column":31}},"32":{"start":{"line":41,"column":8},"end":{"line":54,"column":11}},"33":{"start":{"line":42,"column":23},"end":{"line":42,"column":49}},"34":{"start":{"line":43,"column":12},"end":{"line":53,"column":13}},"35":{"start":{"line":44,"column":28},"end":{"line":44,"column":46}},"36":{"start":{"line":45,"column":30},"end":{"line":45,"column":59}},"37":{"start":{"line":46,"column":16},"end":{"line":46,"column":82}},"38":{"start":{"line":49,"column":16},"end":{"line":49,"column":28}},"39":{"start":{"line":52,"column":16},"end":{"line":52,"column":31}},"40":{"start":{"line":57,"column":8},"end":{"line":82,"column":11}},"41":{"start":{"line":58,"column":12},"end":{"line":81,"column":15}},"42":{"start":{"line":59,"column":16},"end":{"line":80,"column":19}},"43":{"start":{"line":60,"column":31},"end":{"line":60,"column":57}},"44":{"start":{"line":61,"column":20},"end":{"line":79,"column":21}},"45":{"start":{"line":62,"column":24},"end":{"line":62,"column":49}},"46":{"start":{"line":63,"column":41},"end":{"line":63,"column":76}},"47":{"start":{"line":64,"column":38},"end":{"line":71,"column":26}},"48":{"start":{"line":72,"column":24},"end":{"line":72,"column":99}},"49":{"start":{"line":75,"column":24},"end":{"line":75,"column":36}},"50":{"start":{"line":78,"column":24},"end":{"line":78,"column":39}},"51":{"start":{"line":85,"column":8},"end":{"line":104,"column":11}},"52":{"start":{"line":86,"column":23},"end":{"line":86,"column":49}},"53":{"start":{"line":87,"column":26},"end":{"line":87,"column":46}},"54":{"start":{"line":88,"column":29},"end":{"line":88,"column":46}},"55":{"start":{"line":89,"column":12},"end":{"line":103,"column":13}},"56":{"start":{"line":90,"column":28},"end":{"line":90,"column":55}},"57":{"start":{"line":91,"column":30},"end":{"line":91,"column":58}},"58":{"start":{"line":92,"column":29},"end":{"line":92,"column":40}},"59":{"start":{"line":93,"column":16},"end":{"line":98,"column":17}},"60":{"start":{"line":94,"column":20},"end":{"line":94,"column":84}},"61":{"start":{"line":96,"column":21},"end":{"line":98,"column":17}},"62":{"start":{"line":97,"column":20},"end":{"line":97,"column":90}},"63":{"start":{"line":99,"column":16},"end":{"line":99,"column":92}},"64":{"start":{"line":102,"column":16},"end":{"line":102,"column":28}},"65":{"start":{"line":107,"column":8},"end":{"line":137,"column":11}},"66":{"start":{"line":108,"column":12},"end":{"line":136,"column":15}},"67":{"start":{"line":109,"column":16},"end":{"line":116,"column":17}},"68":{"start":{"line":110,"column":20},"end":{"line":115,"column":23}},"69":{"start":{"line":117,"column":16},"end":{"line":129,"column":17}},"70":{"start":{"line":118,"column":36},"end":{"line":118,"column":63}},"71":{"start":{"line":119,"column":35},"end":{"line":119,"column":57}},"72":{"start":{"line":120,"column":34},"end":{"line":120,"column":80}},"73":{"start":{"line":121,"column":20},"end":{"line":121,"column":38}},"74":{"start":{"line":122,"column":20},"end":{"line":128,"column":23}},"75":{"start":{"line":130,"column":16},"end":{"line":135,"column":19}},"76":{"start":{"line":140,"column":8},"end":{"line":155,"column":11}},"77":{"start":{"line":141,"column":23},"end":{"line":141,"column":49}},"78":{"start":{"line":142,"column":12},"end":{"line":154,"column":13}},"79":{"start":{"line":143,"column":28},"end":{"line":143,"column":62}},"80":{"start":{"line":144,"column":30},"end":{"line":144,"column":70}},"81":{"start":{"line":145,"column":40},"end":{"line":145,"column":51}},"82":{"start":{"line":146,"column":16},"end":{"line":146,"column":45}},"83":{"start":{"line":147,"column":16},"end":{"line":147,"column":35}},"84":{"start":{"line":150,"column":16},"end":{"line":150,"column":94}},"85":{"start":{"line":153,"column":16},"end":{"line":153,"column":31}},"86":{"start":{"line":158,"column":8},"end":{"line":171,"column":11}},"87":{"start":{"line":159,"column":23},"end":{"line":159,"column":49}},"88":{"start":{"line":160,"column":12},"end":{"line":170,"column":13}},"89":{"start":{"line":161,"column":28},"end":{"line":161,"column":61}},"90":{"start":{"line":162,"column":30},"end":{"line":162,"column":69}},"91":{"start":{"line":163,"column":16},"end":{"line":163,"column":35}},"92":{"start":{"line":166,"column":16},"end":{"line":166,"column":93}},"93":{"start":{"line":169,"column":16},"end":{"line":169,"column":31}},"94":{"start":{"line":174,"column":8},"end":{"line":187,"column":11}},"95":{"start":{"line":175,"column":23},"end":{"line":175,"column":49}},"96":{"start":{"line":176,"column":12},"end":{"line":186,"column":13}},"97":{"start":{"line":177,"column":28},"end":{"line":177,"column":64}},"98":{"start":{"line":178,"column":30},"end":{"line":178,"column":72}},"99":{"start":{"line":179,"column":16},"end":{"line":179,"column":35}},"100":{"start":{"line":182,"column":16},"end":{"line":182,"column":96}},"101":{"start":{"line":185,"column":16},"end":{"line":185,"column":31}},"102":{"start":{"line":190,"column":8},"end":{"line":203,"column":11}},"103":{"start":{"line":191,"column":23},"end":{"line":191,"column":49}},"104":{"start":{"line":192,"column":12},"end":{"line":202,"column":13}},"105":{"start":{"line":193,"column":28},"end":{"line":193,"column":64}},"106":{"start":{"line":194,"column":30},"end":{"line":194,"column":72}},"107":{"start":{"line":195,"column":16},"end":{"line":195,"column":35}},"108":{"start":{"line":198,"column":16},"end":{"line":198,"column":96}},"109":{"start":{"line":201,"column":16},"end":{"line":201,"column":31}},"110":{"start":{"line":206,"column":8},"end":{"line":221,"column":11}},"111":{"start":{"line":207,"column":23},"end":{"line":207,"column":49}},"112":{"start":{"line":208,"column":12},"end":{"line":220,"column":13}},"113":{"start":{"line":209,"column":28},"end":{"line":209,"column":60}},"114":{"start":{"line":210,"column":30},"end":{"line":210,"column":68}},"115":{"start":{"line":211,"column":16},"end":{"line":213,"column":109}},"116":{"start":{"line":216,"column":16},"end":{"line":216,"column":91}},"117":{"start":{"line":219,"column":16},"end":{"line":219,"column":31}},"118":{"start":{"line":224,"column":8},"end":{"line":242,"column":11}},"119":{"start":{"line":225,"column":23},"end":{"line":225,"column":49}},"120":{"start":{"line":226,"column":12},"end":{"line":241,"column":13}},"121":{"start":{"line":227,"column":28},"end":{"line":227,"column":68}},"122":{"start":{"line":228,"column":30},"end":{"line":228,"column":68}},"123":{"start":{"line":229,"column":16},"end":{"line":231,"column":17}},"124":{"start":{"line":230,"column":20},"end":{"line":230,"column":34}},"125":{"start":{"line":232,"column":16},"end":{"line":234,"column":117}},"126":{"start":{"line":237,"column":16},"end":{"line":237,"column":91}},"127":{"start":{"line":240,"column":16},"end":{"line":240,"column":31}},"128":{"start":{"line":245,"column":8},"end":{"line":266,"column":11}},"129":{"start":{"line":246,"column":12},"end":{"line":265,"column":15}},"130":{"start":{"line":247,"column":16},"end":{"line":264,"column":19}},"131":{"start":{"line":248,"column":20},"end":{"line":250,"column":21}},"132":{"start":{"line":249,"column":24},"end":{"line":249,"column":101}},"133":{"start":{"line":251,"column":31},"end":{"line":251,"column":57}},"134":{"start":{"line":252,"column":20},"end":{"line":263,"column":21}},"135":{"start":{"line":253,"column":24},"end":{"line":253,"column":40}},"136":{"start":{"line":254,"column":36},"end":{"line":254,"column":69}},"137":{"start":{"line":255,"column":38},"end":{"line":255,"column":77}},"138":{"start":{"line":256,"column":24},"end":{"line":256,"column":127}},"139":{"start":{"line":259,"column":24},"end":{"line":259,"column":100}},"140":{"start":{"line":262,"column":24},"end":{"line":262,"column":39}},"141":{"start":{"line":269,"column":8},"end":{"line":282,"column":11}},"142":{"start":{"line":270,"column":23},"end":{"line":270,"column":49}},"143":{"start":{"line":271,"column":12},"end":{"line":281,"column":13}},"144":{"start":{"line":272,"column":28},"end":{"line":272,"column":58}},"145":{"start":{"line":273,"column":30},"end":{"line":273,"column":66}},"146":{"start":{"line":274,"column":16},"end":{"line":274,"column":35}},"147":{"start":{"line":277,"column":16},"end":{"line":277,"column":89}},"148":{"start":{"line":280,"column":16},"end":{"line":280,"column":31}},"149":{"start":{"line":285,"column":8},"end":{"line":298,"column":11}},"150":{"start":{"line":286,"column":23},"end":{"line":286,"column":49}},"151":{"start":{"line":287,"column":12},"end":{"line":297,"column":13}},"152":{"start":{"line":288,"column":28},"end":{"line":288,"column":49}},"153":{"start":{"line":289,"column":30},"end":{"line":289,"column":59}},"154":{"start":{"line":290,"column":16},"end":{"line":290,"column":106}},"155":{"start":{"line":293,"column":16},"end":{"line":293,"column":85}},"156":{"start":{"line":296,"column":16},"end":{"line":296,"column":31}},"157":{"start":{"line":301,"column":0},"end":{"line":301,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllUsers","decl":{"start":{"line":24,"column":27},"end":{"line":24,"column":39}},"loc":{"start":{"line":24,"column":51},"end":{"line":39,"column":5}},"line":24},"9":{"name":"(anonymous_9)","decl":{"start":{"line":25,"column":47},"end":{"line":25,"column":48}},"loc":{"start":{"line":25,"column":60},"end":{"line":38,"column":9}},"line":25},"10":{"name":"getOneUser","decl":{"start":{"line":40,"column":25},"end":{"line":40,"column":35}},"loc":{"start":{"line":40,"column":55},"end":{"line":55,"column":5}},"line":40},"11":{"name":"(anonymous_11)","decl":{"start":{"line":41,"column":47},"end":{"line":41,"column":48}},"loc":{"start":{"line":41,"column":60},"end":{"line":54,"column":9}},"line":41},"12":{"name":"createOneUser","decl":{"start":{"line":56,"column":28},"end":{"line":56,"column":41}},"loc":{"start":{"line":56,"column":63},"end":{"line":83,"column":5}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":57,"column":47},"end":{"line":57,"column":48}},"loc":{"start":{"line":57,"column":60},"end":{"line":82,"column":9}},"line":57},"14":{"name":"(anonymous_14)","decl":{"start":{"line":58,"column":55},"end":{"line":58,"column":56}},"loc":{"start":{"line":58,"column":78},"end":{"line":81,"column":13}},"line":58},"15":{"name":"(anonymous_15)","decl":{"start":{"line":59,"column":55},"end":{"line":59,"column":56}},"loc":{"start":{"line":59,"column":68},"end":{"line":80,"column":17}},"line":59},"16":{"name":"userLogin","decl":{"start":{"line":84,"column":24},"end":{"line":84,"column":33}},"loc":{"start":{"line":84,"column":55},"end":{"line":105,"column":5}},"line":84},"17":{"name":"(anonymous_17)","decl":{"start":{"line":85,"column":47},"end":{"line":85,"column":48}},"loc":{"start":{"line":85,"column":60},"end":{"line":104,"column":9}},"line":85},"18":{"name":"comparePasswords","decl":{"start":{"line":106,"column":31},"end":{"line":106,"column":47}},"loc":{"start":{"line":106,"column":69},"end":{"line":138,"column":5}},"line":106},"19":{"name":"(anonymous_19)","decl":{"start":{"line":107,"column":47},"end":{"line":107,"column":48}},"loc":{"start":{"line":107,"column":60},"end":{"line":137,"column":9}},"line":107},"20":{"name":"(anonymous_20)","decl":{"start":{"line":108,"column":52},"end":{"line":108,"column":53}},"loc":{"start":{"line":108,"column":75},"end":{"line":136,"column":13}},"line":108},"21":{"name":"updateUserFirstName","decl":{"start":{"line":139,"column":34},"end":{"line":139,"column":53}},"loc":{"start":{"line":139,"column":84},"end":{"line":156,"column":5}},"line":139},"22":{"name":"(anonymous_22)","decl":{"start":{"line":140,"column":47},"end":{"line":140,"column":48}},"loc":{"start":{"line":140,"column":60},"end":{"line":155,"column":9}},"line":140},"23":{"name":"updateUserLastName","decl":{"start":{"line":157,"column":33},"end":{"line":157,"column":51}},"loc":{"start":{"line":157,"column":81},"end":{"line":172,"column":5}},"line":157},"24":{"name":"(anonymous_24)","decl":{"start":{"line":158,"column":47},"end":{"line":158,"column":48}},"loc":{"start":{"line":158,"column":60},"end":{"line":171,"column":9}},"line":158},"25":{"name":"updateUserPhoneNumber","decl":{"start":{"line":173,"column":36},"end":{"line":173,"column":57}},"loc":{"start":{"line":173,"column":90},"end":{"line":188,"column":5}},"line":173},"26":{"name":"(anonymous_26)","decl":{"start":{"line":174,"column":47},"end":{"line":174,"column":48}},"loc":{"start":{"line":174,"column":60},"end":{"line":187,"column":9}},"line":174},"27":{"name":"updateUserEmailAdress","decl":{"start":{"line":189,"column":36},"end":{"line":189,"column":57}},"loc":{"start":{"line":189,"column":90},"end":{"line":204,"column":5}},"line":189},"28":{"name":"(anonymous_28)","decl":{"start":{"line":190,"column":47},"end":{"line":190,"column":48}},"loc":{"start":{"line":190,"column":60},"end":{"line":203,"column":9}},"line":190},"29":{"name":"updateUserBalance","decl":{"start":{"line":205,"column":32},"end":{"line":205,"column":49}},"loc":{"start":{"line":205,"column":78},"end":{"line":222,"column":5}},"line":205},"30":{"name":"(anonymous_30)","decl":{"start":{"line":206,"column":47},"end":{"line":206,"column":48}},"loc":{"start":{"line":206,"column":60},"end":{"line":221,"column":9}},"line":206},"31":{"name":"updateUserPaymentOption","decl":{"start":{"line":223,"column":38},"end":{"line":223,"column":61}},"loc":{"start":{"line":223,"column":90},"end":{"line":243,"column":5}},"line":223},"32":{"name":"(anonymous_32)","decl":{"start":{"line":224,"column":47},"end":{"line":224,"column":48}},"loc":{"start":{"line":224,"column":60},"end":{"line":242,"column":9}},"line":224},"33":{"name":"updateUserPassword","decl":{"start":{"line":244,"column":33},"end":{"line":244,"column":51}},"loc":{"start":{"line":244,"column":81},"end":{"line":267,"column":5}},"line":244},"34":{"name":"(anonymous_34)","decl":{"start":{"line":245,"column":47},"end":{"line":245,"column":48}},"loc":{"start":{"line":245,"column":60},"end":{"line":266,"column":9}},"line":245},"35":{"name":"(anonymous_35)","decl":{"start":{"line":246,"column":46},"end":{"line":246,"column":47}},"loc":{"start":{"line":246,"column":67},"end":{"line":265,"column":13}},"line":246},"36":{"name":"(anonymous_36)","decl":{"start":{"line":247,"column":55},"end":{"line":247,"column":56}},"loc":{"start":{"line":247,"column":68},"end":{"line":264,"column":17}},"line":247},"37":{"name":"updateUserOauth","decl":{"start":{"line":268,"column":30},"end":{"line":268,"column":45}},"loc":{"start":{"line":268,"column":72},"end":{"line":283,"column":5}},"line":268},"38":{"name":"(anonymous_38)","decl":{"start":{"line":269,"column":47},"end":{"line":269,"column":48}},"loc":{"start":{"line":269,"column":60},"end":{"line":282,"column":9}},"line":269},"39":{"name":"deleteOneUser","decl":{"start":{"line":284,"column":28},"end":{"line":284,"column":41}},"loc":{"start":{"line":284,"column":61},"end":{"line":299,"column":5}},"line":284},"40":{"name":"(anonymous_40)","decl":{"start":{"line":285,"column":47},"end":{"line":285,"column":48}},"loc":{"start":{"line":285,"column":60},"end":{"line":298,"column":9}},"line":285}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":93,"column":16},"end":{"line":98,"column":17}},"type":"if","locations":[{"start":{"line":93,"column":16},"end":{"line":98,"column":17}},{"start":{"line":93,"column":16},"end":{"line":98,"column":17}}],"line":93},"9":{"loc":{"start":{"line":96,"column":21},"end":{"line":98,"column":17}},"type":"if","locations":[{"start":{"line":96,"column":21},"end":{"line":98,"column":17}},{"start":{"line":96,"column":21},"end":{"line":98,"column":17}}],"line":96},"10":{"loc":{"start":{"line":109,"column":16},"end":{"line":116,"column":17}},"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":116,"column":17}},{"start":{"line":109,"column":16},"end":{"line":116,"column":17}}],"line":109},"11":{"loc":{"start":{"line":117,"column":16},"end":{"line":129,"column":17}},"type":"if","locations":[{"start":{"line":117,"column":16},"end":{"line":129,"column":17}},{"start":{"line":117,"column":16},"end":{"line":129,"column":17}}],"line":117},"12":{"loc":{"start":{"line":229,"column":16},"end":{"line":231,"column":17}},"type":"if","locations":[{"start":{"line":229,"column":16},"end":{"line":231,"column":17}},{"start":{"line":229,"column":16},"end":{"line":231,"column":17}}],"line":229},"13":{"loc":{"start":{"line":248,"column":20},"end":{"line":250,"column":21}},"type":"if","locations":[{"start":{"line":248,"column":20},"end":{"line":250,"column":21}},{"start":{"line":248,"column":20},"end":{"line":250,"column":21}}],"line":248}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { FieldPacket, RowDataPacket } from 'mysql2/promise';\nimport { Response, NextFunction } from 'express';\nimport { v4 as uuid } from 'uuid';\n\nimport { CustomError } from '../middleware/errorHandler';\nimport database from '../db/db';\n\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst saltRounds = 10;\n\n// generate a unique API key\nconst apiKey = uuid();\n// save the API key to the .env file\nrequire('dotenv').config({ path: '.env', env: { API_KEY: apiKey } });\n\nconst userModel = {\n    /**\n     * Function to show all users\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllUsers: async function showAllUsers(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_users();`;\n\n            const allUsers: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: allUsers[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show one user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneUser: async function getOneUser(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_user(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneUser: async function createOneUser(userInfo: any, res: Response, next: NextFunction) {\n        bcrypt.hash(userInfo.password, saltRounds, async function (error: any, hash: any) {\n            const db = await database.getDb();\n            try {\n                userInfo.password = hash;\n\n                const sql_user = `CALL create_user(?, ?, ?, ?, ?,?)`;\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql_user, [\n                    userInfo.firstName,\n                    userInfo.lastName,\n                    userInfo.phoneNumber,\n                    userInfo.emailAdress,\n                    userInfo.password,\n                    userInfo.oauth,\n                ]);\n\n                return res.status(200).send({ success: true, msg: 'New user registered' });\n            } catch (error: any) {\n                next(error);\n            } finally {\n                await db.end();\n            }\n        });\n    },\n    /**\n     * Function to login a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    userLogin: async function userLogin(userInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        const email = userInfo.emailAdress;\n        const password = userInfo.password;\n        try {\n            const sql = `CALL get_user_by_email(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [email]);\n\n            const user = dbRes[0][0];\n\n            if (user.length > 0) {\n                return await userModel.comparePasswords(res, user[0], password);\n            } else if (user.length === 0) {\n                return res.status(400).json({ success: false, msg: 'No user found' });\n            }\n\n            return res.status(400).send({ success: false, msg: 'Missing credentials' });\n        } catch (error) {\n            next(error);\n        }\n    },\n    /**\n     * Function to verify a hashed password\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    comparePasswords: async function comparePasswords(res: Response, user: any, password: string) {\n        bcrypt.compare(password, user.Password, function (err: any, result: any) {\n            if (err) {\n                return res.status(500).json({\n                    errors: {\n                        status: 500,\n                        message: 'Could not decrypt password.',\n                    },\n                });\n            }\n\n            if (result) {\n                const payload = { email: user.EmailAdress };\n                const secret = process.env.JWT_SECRET;\n\n                const token = jwt.sign(payload, secret, { expiresIn: '1h' });\n                console.log(user);\n\n                return res.status(201).json({\n                    data: {\n                        info: { user },\n                        token,\n                        msg: 'User logged in',\n                    },\n                });\n            }\n            return res.status(401).json({\n                errors: {\n                    status: 401,\n                    message: 'Password not correct',\n                },\n            });\n        });\n    },\n    /**\n     * Function to update a users first name\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserFirstName: async function updateUserFirstName(\n        userId: string,\n        firstName: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_firstname(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, firstName]);\n            const resultSetHeader = dbRes[0][0];\n            console.log(resultSetHeader);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user first name'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users lastname\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserLastName: async function updateUserLastName(\n        userId: string,\n        lastName: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_lastname(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, lastName]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user last name'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users phone number\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserPhoneNumber: async function updateUserPhoneNumber(\n        userId: string,\n        phoneNumber: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_phonenumber(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, phoneNumber]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user phone number'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users email address\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserEmailAdress: async function updateUserEmailAdress(\n        userId: string,\n        emailAdress: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_emailadress(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, emailAdress]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user email adress'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users balance\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserBalance: async function updateUserBalance(\n        userId: string,\n        balance: number,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_balance(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, balance]);\n\n            return res\n                .status(200)\n                .send({ success: true, msg: `User with ${userId} has added ${balance} to its balance` });\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user balance'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users payment option\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserPaymentOption: async function updateUserPaymentOption(\n        userId: string,\n        balance: number,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_partial_payment(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, balance]);\n\n            if (!balance) {\n                throw Error();\n            }\n\n            return res\n                .status(201)\n                .send({ success: true, msg: `User with id ${userId} has changed to payment option ${balance}` });\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user balance'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users password\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserPassword: async function updateUserPassword(\n        userId: string,\n        password: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        bcrypt.hash(password, saltRounds, async function (err: any, hash: any) {\n            if (err) {\n                return res.status(500).json({ error: true, msg: 'Could not hash password' });\n            }\n            const db = await database.getDb();\n            try {\n                password = hash;\n\n                const sql = `CALL update_user_password(?, ?)`;\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, password]);\n\n                return res.status(201).send({ success: true, msg: `User with id ${userId} has updated its password` });\n            } catch (error: any) {\n                next(new CustomError(false, 'Error updating user password'));\n            } finally {\n                await db.end();\n            }\n        });\n    },\n    /**\n     * Function to update a users oauth\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserOauth: async function updateUserOauth(userId: string, oauth: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_oauth(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, oauth]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user oauth'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to delete a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteOneUser: async function deleteOneUser(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_user(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, msg: `User with id ${userId} was deleted` });\n        } catch (error: any) {\n            next(new CustomError(false, 'Could not delete user'));\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default userModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f3274ec0a47bfac304540d5afa1658735d861817","contentHash":"30eb52842cfc9d84181a7cbc93c7d6031aa2f7851a3c8d8a0996a29c948c4f72"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/bike.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/bike.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":63}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":40},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":60}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":69},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":23},"end":{"line":27,"column":33}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":73}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":42,"column":4}},"30":{"start":{"line":35,"column":49},"end":{"line":42,"column":2}},"31":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"32":{"start":{"line":37,"column":8},"end":{"line":37,"column":67}},"33":{"start":{"line":40,"column":8},"end":{"line":40,"column":20}},"34":{"start":{"line":43,"column":0},"end":{"line":51,"column":4}},"35":{"start":{"line":43,"column":53},"end":{"line":51,"column":2}},"36":{"start":{"line":44,"column":22},"end":{"line":44,"column":35}},"37":{"start":{"line":45,"column":4},"end":{"line":50,"column":5}},"38":{"start":{"line":46,"column":8},"end":{"line":46,"column":84}},"39":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"40":{"start":{"line":52,"column":0},"end":{"line":60,"column":4}},"41":{"start":{"line":52,"column":44},"end":{"line":60,"column":2}},"42":{"start":{"line":53,"column":19},"end":{"line":53,"column":32}},"43":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"44":{"start":{"line":55,"column":8},"end":{"line":55,"column":66}},"45":{"start":{"line":58,"column":8},"end":{"line":58,"column":20}},"46":{"start":{"line":61,"column":0},"end":{"line":69,"column":4}},"47":{"start":{"line":61,"column":51},"end":{"line":69,"column":2}},"48":{"start":{"line":62,"column":17},"end":{"line":62,"column":32}},"49":{"start":{"line":63,"column":4},"end":{"line":68,"column":5}},"50":{"start":{"line":64,"column":8},"end":{"line":64,"column":68}},"51":{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},"52":{"start":{"line":70,"column":0},"end":{"line":84,"column":4}},"53":{"start":{"line":70,"column":44},"end":{"line":84,"column":2}},"54":{"start":{"line":71,"column":21},"end":{"line":77,"column":5}},"55":{"start":{"line":78,"column":4},"end":{"line":83,"column":5}},"56":{"start":{"line":79,"column":8},"end":{"line":79,"column":71}},"57":{"start":{"line":82,"column":8},"end":{"line":82,"column":20}},"58":{"start":{"line":85,"column":0},"end":{"line":85,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":20},"end":{"line":18,"column":21}},"loc":{"start":{"line":18,"column":40},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":74},"end":{"line":18,"column":75}},"loc":{"start":{"line":18,"column":87},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":49},"end":{"line":26,"column":50}},"loc":{"start":{"line":26,"column":69},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":103},"end":{"line":26,"column":104}},"loc":{"start":{"line":26,"column":116},"end":{"line":34,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":29},"end":{"line":35,"column":30}},"loc":{"start":{"line":35,"column":49},"end":{"line":42,"column":2}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":83},"end":{"line":35,"column":84}},"loc":{"start":{"line":35,"column":96},"end":{"line":42,"column":1}},"line":35},"14":{"name":"(anonymous_14)","decl":{"start":{"line":43,"column":33},"end":{"line":43,"column":34}},"loc":{"start":{"line":43,"column":53},"end":{"line":51,"column":2}},"line":43},"15":{"name":"(anonymous_15)","decl":{"start":{"line":43,"column":87},"end":{"line":43,"column":88}},"loc":{"start":{"line":43,"column":100},"end":{"line":51,"column":1}},"line":43},"16":{"name":"(anonymous_16)","decl":{"start":{"line":52,"column":24},"end":{"line":52,"column":25}},"loc":{"start":{"line":52,"column":44},"end":{"line":60,"column":2}},"line":52},"17":{"name":"(anonymous_17)","decl":{"start":{"line":52,"column":78},"end":{"line":52,"column":79}},"loc":{"start":{"line":52,"column":91},"end":{"line":60,"column":1}},"line":52},"18":{"name":"(anonymous_18)","decl":{"start":{"line":61,"column":31},"end":{"line":61,"column":32}},"loc":{"start":{"line":61,"column":51},"end":{"line":69,"column":2}},"line":61},"19":{"name":"(anonymous_19)","decl":{"start":{"line":61,"column":85},"end":{"line":61,"column":86}},"loc":{"start":{"line":61,"column":98},"end":{"line":69,"column":1}},"line":61},"20":{"name":"(anonymous_20)","decl":{"start":{"line":70,"column":24},"end":{"line":70,"column":25}},"loc":{"start":{"line":70,"column":44},"end":{"line":84,"column":2}},"line":70},"21":{"name":"(anonymous_21)","decl":{"start":{"line":70,"column":78},"end":{"line":70,"column":79}},"loc":{"start":{"line":70,"column":91},"end":{"line":84,"column":1}},"line":70}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/bike.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/bike.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAkE;AAElE,gEAA6C;AAC7C,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAsBxB,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC1E,IAAI;QACA,OAAO,MAAM,cAAS,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAClD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,oCAAoC,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACvG,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC;IAE9B,IAAI;QACA,OAAO,MAAM,cAAS,CAAC,aAAa,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC/D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACnF,IAAI;QACA,OAAO,MAAM,cAAS,CAAC,mBAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACzD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,oBAAoB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACvF,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEhC,IAAI;QACA,OAAO,MAAM,cAAS,CAAC,yBAAyB,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC1E;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC9E,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAE7B,IAAI;QACA,OAAO,MAAM,cAAS,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACxD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACrF,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;IAE7B,IAAI;QACA,OAAO,MAAM,cAAS,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC1D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC9E,MAAM,QAAQ,GAAG;QACb,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;QACrB,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACzB,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM;QACvB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;KACxB,CAAC;IAEF,IAAI;QACA,OAAO,MAAM,cAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC7D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { Request, Response, Router, NextFunction } from 'express';\n\nimport bikeModel from '../../../models/bike';\nconst router = Router();\n\ninterface BikeInfo {\n    Bikes_id: number;\n    Position: string;\n    Battery: number;\n    Status: number;\n    Speed: number;\n}\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display list for bikes\n *     description: Render all bikes\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/bike', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await bikeModel.showAllBikes(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display list for bikes within a radius\n *     description: Render all bikes within a radius\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/bike/:longitude/:latitude/:radius', async (req: Request, res: Response, next: NextFunction) => {\n    const radiusInfo = req.params;\n\n    try {\n        return await bikeModel.getBikeRadius(radiusInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display list for all charging bikes\n *     description: Render charging all bikes\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/bike/charging', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await bikeModel.getAllChargingBikes(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display list for all charging bikes at one Station\n *     description: Render charging all bikes at a specific station\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/bike/charging/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const stationId = req.params.id;\n\n    try {\n        return await bikeModel.getChargingBikesAtStation(stationId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display information for one bike\n *     description: Render one bike\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/bike/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const bikeId = req.params.id;\n\n    try {\n        return await bikeModel.getOneBike(bikeId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display bikes in a city\n *     description: Render bikes in a city\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/bike/city/:city', async (req: Request, res: Response, next: NextFunction) => {\n    const city = req.params.city;\n\n    try {\n        return await bikeModel.getBikesByCity(city, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Update information for one bike\n *     description: Render msg of update\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.put('/bike/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const bikeInfo = {\n        bikeId: req.params.id,\n        position: req.body.position,\n        battery: req.body.battery,\n        status: req.body.status,\n        speed: req.body.speed,\n    };\n\n    try {\n        return await bikeModel.updateOneBike(bikeInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cc6fdba7145ddb50e5f48dfa6fefa5df81a41673","contentHash":"b1dd6ae3a934918b8a3c9fd5d68ca6a1581b1cdc2d632bbe8846f1dcd3340ed6"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":18},"end":{"line":139,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":47}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":82}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":51,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":50,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":61}},"29":{"start":{"line":38,"column":30},"end":{"line":42,"column":18}},"30":{"start":{"line":43,"column":16},"end":{"line":43,"column":75}},"31":{"start":{"line":46,"column":16},"end":{"line":46,"column":28}},"32":{"start":{"line":49,"column":16},"end":{"line":49,"column":31}},"33":{"start":{"line":54,"column":8},"end":{"line":67,"column":11}},"34":{"start":{"line":55,"column":23},"end":{"line":55,"column":49}},"35":{"start":{"line":56,"column":12},"end":{"line":66,"column":13}},"36":{"start":{"line":57,"column":28},"end":{"line":57,"column":64}},"37":{"start":{"line":58,"column":30},"end":{"line":58,"column":49}},"38":{"start":{"line":59,"column":16},"end":{"line":59,"column":75}},"39":{"start":{"line":62,"column":16},"end":{"line":62,"column":28}},"40":{"start":{"line":65,"column":16},"end":{"line":65,"column":31}},"41":{"start":{"line":70,"column":8},"end":{"line":83,"column":11}},"42":{"start":{"line":71,"column":23},"end":{"line":71,"column":49}},"43":{"start":{"line":72,"column":12},"end":{"line":82,"column":13}},"44":{"start":{"line":73,"column":28},"end":{"line":73,"column":68}},"45":{"start":{"line":74,"column":30},"end":{"line":74,"column":62}},"46":{"start":{"line":75,"column":16},"end":{"line":75,"column":75}},"47":{"start":{"line":78,"column":16},"end":{"line":78,"column":28}},"48":{"start":{"line":81,"column":16},"end":{"line":81,"column":31}},"49":{"start":{"line":86,"column":8},"end":{"line":99,"column":11}},"50":{"start":{"line":87,"column":23},"end":{"line":87,"column":49}},"51":{"start":{"line":88,"column":12},"end":{"line":98,"column":13}},"52":{"start":{"line":89,"column":28},"end":{"line":89,"column":46}},"53":{"start":{"line":90,"column":30},"end":{"line":90,"column":59}},"54":{"start":{"line":91,"column":16},"end":{"line":91,"column":75}},"55":{"start":{"line":94,"column":16},"end":{"line":94,"column":28}},"56":{"start":{"line":97,"column":16},"end":{"line":97,"column":31}},"57":{"start":{"line":102,"column":8},"end":{"line":115,"column":11}},"58":{"start":{"line":103,"column":23},"end":{"line":103,"column":49}},"59":{"start":{"line":104,"column":12},"end":{"line":114,"column":13}},"60":{"start":{"line":105,"column":28},"end":{"line":105,"column":55}},"61":{"start":{"line":106,"column":30},"end":{"line":106,"column":57}},"62":{"start":{"line":107,"column":16},"end":{"line":107,"column":82}},"63":{"start":{"line":110,"column":16},"end":{"line":110,"column":28}},"64":{"start":{"line":113,"column":16},"end":{"line":113,"column":31}},"65":{"start":{"line":118,"column":8},"end":{"line":137,"column":11}},"66":{"start":{"line":119,"column":23},"end":{"line":119,"column":49}},"67":{"start":{"line":120,"column":12},"end":{"line":136,"column":13}},"68":{"start":{"line":121,"column":28},"end":{"line":121,"column":61}},"69":{"start":{"line":122,"column":30},"end":{"line":128,"column":18}},"70":{"start":{"line":129,"column":16},"end":{"line":129,"column":113}},"71":{"start":{"line":132,"column":16},"end":{"line":132,"column":50}},"72":{"start":{"line":135,"column":16},"end":{"line":135,"column":31}},"73":{"start":{"line":140,"column":0},"end":{"line":140,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllBikes","decl":{"start":{"line":17,"column":27},"end":{"line":17,"column":39}},"loc":{"start":{"line":17,"column":51},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"getBikeRadius","decl":{"start":{"line":33,"column":28},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":65},"end":{"line":52,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":51,"column":9}},"line":34},"12":{"name":"getAllChargingBikes","decl":{"start":{"line":53,"column":34},"end":{"line":53,"column":53}},"loc":{"start":{"line":53,"column":65},"end":{"line":68,"column":5}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":54,"column":47},"end":{"line":54,"column":48}},"loc":{"start":{"line":54,"column":60},"end":{"line":67,"column":9}},"line":54},"14":{"name":"getChargingBikesAtStation","decl":{"start":{"line":69,"column":40},"end":{"line":69,"column":65}},"loc":{"start":{"line":69,"column":88},"end":{"line":84,"column":5}},"line":69},"15":{"name":"(anonymous_15)","decl":{"start":{"line":70,"column":47},"end":{"line":70,"column":48}},"loc":{"start":{"line":70,"column":60},"end":{"line":83,"column":9}},"line":70},"16":{"name":"getOneBike","decl":{"start":{"line":85,"column":25},"end":{"line":85,"column":35}},"loc":{"start":{"line":85,"column":55},"end":{"line":100,"column":5}},"line":85},"17":{"name":"(anonymous_17)","decl":{"start":{"line":86,"column":47},"end":{"line":86,"column":48}},"loc":{"start":{"line":86,"column":60},"end":{"line":99,"column":9}},"line":86},"18":{"name":"getBikesByCity","decl":{"start":{"line":101,"column":29},"end":{"line":101,"column":43}},"loc":{"start":{"line":101,"column":61},"end":{"line":116,"column":5}},"line":101},"19":{"name":"(anonymous_19)","decl":{"start":{"line":102,"column":47},"end":{"line":102,"column":48}},"loc":{"start":{"line":102,"column":60},"end":{"line":115,"column":9}},"line":102},"20":{"name":"updateOneBike","decl":{"start":{"line":117,"column":28},"end":{"line":117,"column":41}},"loc":{"start":{"line":117,"column":63},"end":{"line":138,"column":5}},"line":117},"21":{"name":"(anonymous_21)","decl":{"start":{"line":118,"column":47},"end":{"line":118,"column":48}},"loc":{"start":{"line":118,"column":60},"end":{"line":137,"column":9}},"line":118}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response, NextFunction } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst bikeModel = {\n    /**\n     * Function to show all bikes\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllBikes: async function showAllBikes(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikes();`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get bikes within a radius\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getBikeRadius: async function getBikeRadius(radiusInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikes_in_radius(?,?,?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                radiusInfo.latitude,\n                radiusInfo.longitude,\n                radiusInfo.radius,\n            ]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get all charging bikes\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getAllChargingBikes: async function getAllChargingBikes(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_charging_bikes_location()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get all charging bikes at specific station\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getChargingBikesAtStation: async function getChargingBikesAtStation(\n        stationId: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_charging_bikes_by_location(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [stationId]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one bike by id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneBike: async function getOneBike(bikeId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bike(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [bikeId]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get bikes within a city\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getBikesByCity: async function getBikesByCity(city: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikes_by_city(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [city]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a bike\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateOneBike: async function updateOneBike(bikeInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_bike(?, ?, ?, ?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                bikeInfo.bikeId,\n                bikeInfo.position,\n                bikeInfo.battery,\n                bikeInfo.status,\n                bikeInfo.speed,\n            ]);\n\n            res.status(200).send({ success: true, msg: `Bike with id ${bikeInfo.bikeId} has been updated` });\n        } catch (error: any) {\n            next(res.status(404).send(error));\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default bikeModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7733a5487a3944e6602628d58dc5e49b40405f32","contentHash":"34010b371617b0c7d3e0f6b8306ca873f8ae24e72df299d2fba3c71c544653a8"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/rent.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/rent.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":63}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":40},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":60}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":44},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":19},"end":{"line":27,"column":32}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":66}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":43,"column":4}},"30":{"start":{"line":35,"column":51},"end":{"line":43,"column":2}},"31":{"start":{"line":36,"column":19},"end":{"line":36,"column":32}},"32":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":70}},"34":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"35":{"start":{"line":44,"column":0},"end":{"line":52,"column":4}},"36":{"start":{"line":44,"column":49},"end":{"line":52,"column":2}},"37":{"start":{"line":45,"column":19},"end":{"line":45,"column":32}},"38":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"39":{"start":{"line":47,"column":8},"end":{"line":47,"column":67}},"40":{"start":{"line":50,"column":8},"end":{"line":50,"column":20}},"41":{"start":{"line":53,"column":0},"end":{"line":61,"column":4}},"42":{"start":{"line":53,"column":49},"end":{"line":61,"column":2}},"43":{"start":{"line":54,"column":19},"end":{"line":54,"column":32}},"44":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"45":{"start":{"line":56,"column":8},"end":{"line":56,"column":72}},"46":{"start":{"line":59,"column":8},"end":{"line":59,"column":20}},"47":{"start":{"line":62,"column":0},"end":{"line":71,"column":4}},"48":{"start":{"line":62,"column":51},"end":{"line":71,"column":2}},"49":{"start":{"line":63,"column":19},"end":{"line":63,"column":34}},"50":{"start":{"line":64,"column":19},"end":{"line":64,"column":32}},"51":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"52":{"start":{"line":66,"column":8},"end":{"line":66,"column":77}},"53":{"start":{"line":69,"column":8},"end":{"line":69,"column":20}},"54":{"start":{"line":72,"column":0},"end":{"line":80,"column":4}},"55":{"start":{"line":72,"column":44},"end":{"line":80,"column":2}},"56":{"start":{"line":73,"column":19},"end":{"line":73,"column":32}},"57":{"start":{"line":74,"column":4},"end":{"line":79,"column":5}},"58":{"start":{"line":75,"column":8},"end":{"line":75,"column":69}},"59":{"start":{"line":78,"column":8},"end":{"line":78,"column":20}},"60":{"start":{"line":81,"column":0},"end":{"line":81,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":20},"end":{"line":18,"column":21}},"loc":{"start":{"line":18,"column":40},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":74},"end":{"line":18,"column":75}},"loc":{"start":{"line":18,"column":87},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":24},"end":{"line":26,"column":25}},"loc":{"start":{"line":26,"column":44},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":78},"end":{"line":26,"column":79}},"loc":{"start":{"line":26,"column":91},"end":{"line":34,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":31},"end":{"line":35,"column":32}},"loc":{"start":{"line":35,"column":51},"end":{"line":43,"column":2}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":85},"end":{"line":35,"column":86}},"loc":{"start":{"line":35,"column":98},"end":{"line":43,"column":1}},"line":35},"14":{"name":"(anonymous_14)","decl":{"start":{"line":44,"column":29},"end":{"line":44,"column":30}},"loc":{"start":{"line":44,"column":49},"end":{"line":52,"column":2}},"line":44},"15":{"name":"(anonymous_15)","decl":{"start":{"line":44,"column":83},"end":{"line":44,"column":84}},"loc":{"start":{"line":44,"column":96},"end":{"line":52,"column":1}},"line":44},"16":{"name":"(anonymous_16)","decl":{"start":{"line":53,"column":29},"end":{"line":53,"column":30}},"loc":{"start":{"line":53,"column":49},"end":{"line":61,"column":2}},"line":53},"17":{"name":"(anonymous_17)","decl":{"start":{"line":53,"column":83},"end":{"line":53,"column":84}},"loc":{"start":{"line":53,"column":96},"end":{"line":61,"column":1}},"line":53},"18":{"name":"(anonymous_18)","decl":{"start":{"line":62,"column":31},"end":{"line":62,"column":32}},"loc":{"start":{"line":62,"column":51},"end":{"line":71,"column":2}},"line":62},"19":{"name":"(anonymous_19)","decl":{"start":{"line":62,"column":85},"end":{"line":62,"column":86}},"loc":{"start":{"line":62,"column":98},"end":{"line":71,"column":1}},"line":62},"20":{"name":"(anonymous_20)","decl":{"start":{"line":72,"column":24},"end":{"line":72,"column":25}},"loc":{"start":{"line":72,"column":44},"end":{"line":80,"column":2}},"line":72},"21":{"name":"(anonymous_21)","decl":{"start":{"line":72,"column":78},"end":{"line":72,"column":79}},"loc":{"start":{"line":72,"column":91},"end":{"line":80,"column":1}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/rent.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/rent.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction, Router } from 'express';\n\nimport rentModel from '../../../models/rent';\nconst router = Router();\n\ninterface RentInfo {\n    Id: number;\n    User_id: number;\n    Start: string;\n    StartTimeStamp: string;\n    Destination: number;\n    DestinationTimeStamp: string;\n    Bike_id: number;\n}\n\n/**\n * Rent ROUTE\n * /:\n *   get:\n *     summary: Display all rents\n *     description: Render all rent in database\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/rent', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await rentModel.showAllRents(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/:id:\n *   get:\n *     summary: One rent\n *     description: Render rent by rentId\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/rent/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const rentId = req.params.id;\n\n    try {\n        return await rentModel.getOneRent(rentId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/active/:id:\n *   get:\n *     summary: Active rents\n *     description: Render active rents for a user\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/rent/active/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n    try {\n        return await rentModel.getActiveRents(userId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/bike/:id:\n *   get:\n *     summary: BikeLog for a rent\n *     description: Render bikeLog for a rent\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/rent/bike/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const rentId = req.params.id;\n    try {\n        return await rentModel.getBikeLogs(rentId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/user/:id:\n *   get:\n *     summary: All rents for one user\n *     description: Render rent by userId\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/rent/user/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n    try {\n        return await rentModel.getRentsByUserId(userId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/user/:id:\n *   get:\n *     summary: Create a new rent\n *     description: Create a active rent to user and taken bike\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/rent/create/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const bikeId = req.body.bikeId;\n    const userId = req.params.id;\n    try {\n        return await rentModel.createOneRent(userId, bikeId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/user/:id:\n *   get:\n *     summary: Update active rent\n *     description: Update rent for bike and user\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.put('/rent/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const rentId = req.params.id;\n    try {\n        return await rentModel.updateOneRent(rentId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e209ad9340d1239032d80785a3a3f28e2bfd015","contentHash":"9902f0d297884e31ec0ee78956e626c0c50421078031cfb0e95a624c4284d6ac"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":18},"end":{"line":129,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":46}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":82}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":47,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":46,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":46}},"29":{"start":{"line":38,"column":30},"end":{"line":38,"column":59}},"30":{"start":{"line":39,"column":16},"end":{"line":39,"column":82}},"31":{"start":{"line":42,"column":16},"end":{"line":42,"column":28}},"32":{"start":{"line":45,"column":16},"end":{"line":45,"column":31}},"33":{"start":{"line":50,"column":8},"end":{"line":63,"column":11}},"34":{"start":{"line":51,"column":23},"end":{"line":51,"column":49}},"35":{"start":{"line":52,"column":12},"end":{"line":62,"column":13}},"36":{"start":{"line":53,"column":28},"end":{"line":53,"column":62}},"37":{"start":{"line":54,"column":30},"end":{"line":54,"column":59}},"38":{"start":{"line":55,"column":16},"end":{"line":55,"column":82}},"39":{"start":{"line":58,"column":16},"end":{"line":58,"column":28}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":31}},"41":{"start":{"line":66,"column":8},"end":{"line":79,"column":11}},"42":{"start":{"line":67,"column":23},"end":{"line":67,"column":49}},"43":{"start":{"line":68,"column":12},"end":{"line":78,"column":13}},"44":{"start":{"line":69,"column":28},"end":{"line":69,"column":55}},"45":{"start":{"line":70,"column":30},"end":{"line":70,"column":59}},"46":{"start":{"line":71,"column":16},"end":{"line":71,"column":82}},"47":{"start":{"line":74,"column":16},"end":{"line":74,"column":28}},"48":{"start":{"line":77,"column":16},"end":{"line":77,"column":31}},"49":{"start":{"line":82,"column":8},"end":{"line":95,"column":11}},"50":{"start":{"line":83,"column":23},"end":{"line":83,"column":49}},"51":{"start":{"line":84,"column":12},"end":{"line":94,"column":13}},"52":{"start":{"line":85,"column":28},"end":{"line":85,"column":60}},"53":{"start":{"line":86,"column":30},"end":{"line":86,"column":59}},"54":{"start":{"line":87,"column":16},"end":{"line":87,"column":82}},"55":{"start":{"line":90,"column":16},"end":{"line":90,"column":28}},"56":{"start":{"line":93,"column":16},"end":{"line":93,"column":31}},"57":{"start":{"line":98,"column":8},"end":{"line":111,"column":11}},"58":{"start":{"line":99,"column":23},"end":{"line":99,"column":49}},"59":{"start":{"line":100,"column":12},"end":{"line":110,"column":13}},"60":{"start":{"line":101,"column":28},"end":{"line":101,"column":52}},"61":{"start":{"line":102,"column":30},"end":{"line":102,"column":67}},"62":{"start":{"line":103,"column":16},"end":{"line":103,"column":107}},"63":{"start":{"line":106,"column":16},"end":{"line":106,"column":28}},"64":{"start":{"line":109,"column":16},"end":{"line":109,"column":31}},"65":{"start":{"line":114,"column":8},"end":{"line":127,"column":11}},"66":{"start":{"line":115,"column":23},"end":{"line":115,"column":49}},"67":{"start":{"line":116,"column":12},"end":{"line":126,"column":13}},"68":{"start":{"line":117,"column":28},"end":{"line":117,"column":49}},"69":{"start":{"line":118,"column":30},"end":{"line":118,"column":59}},"70":{"start":{"line":119,"column":16},"end":{"line":119,"column":111}},"71":{"start":{"line":122,"column":16},"end":{"line":122,"column":28}},"72":{"start":{"line":125,"column":16},"end":{"line":125,"column":31}},"73":{"start":{"line":130,"column":0},"end":{"line":130,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllRents","decl":{"start":{"line":17,"column":27},"end":{"line":17,"column":39}},"loc":{"start":{"line":17,"column":51},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"getOneRent","decl":{"start":{"line":33,"column":25},"end":{"line":33,"column":35}},"loc":{"start":{"line":33,"column":55},"end":{"line":48,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":47,"column":9}},"line":34},"12":{"name":"getActiveRents","decl":{"start":{"line":49,"column":29},"end":{"line":49,"column":43}},"loc":{"start":{"line":49,"column":63},"end":{"line":64,"column":5}},"line":49},"13":{"name":"(anonymous_13)","decl":{"start":{"line":50,"column":47},"end":{"line":50,"column":48}},"loc":{"start":{"line":50,"column":60},"end":{"line":63,"column":9}},"line":50},"14":{"name":"getRentsByUserId","decl":{"start":{"line":65,"column":31},"end":{"line":65,"column":47}},"loc":{"start":{"line":65,"column":67},"end":{"line":80,"column":5}},"line":65},"15":{"name":"(anonymous_15)","decl":{"start":{"line":66,"column":47},"end":{"line":66,"column":48}},"loc":{"start":{"line":66,"column":60},"end":{"line":79,"column":9}},"line":66},"16":{"name":"getBikeLogs","decl":{"start":{"line":81,"column":26},"end":{"line":81,"column":37}},"loc":{"start":{"line":81,"column":57},"end":{"line":96,"column":5}},"line":81},"17":{"name":"(anonymous_17)","decl":{"start":{"line":82,"column":47},"end":{"line":82,"column":48}},"loc":{"start":{"line":82,"column":60},"end":{"line":95,"column":9}},"line":82},"18":{"name":"createOneRent","decl":{"start":{"line":97,"column":28},"end":{"line":97,"column":41}},"loc":{"start":{"line":97,"column":69},"end":{"line":112,"column":5}},"line":97},"19":{"name":"(anonymous_19)","decl":{"start":{"line":98,"column":47},"end":{"line":98,"column":48}},"loc":{"start":{"line":98,"column":60},"end":{"line":111,"column":9}},"line":98},"20":{"name":"createOneRent","decl":{"start":{"line":113,"column":28},"end":{"line":113,"column":41}},"loc":{"start":{"line":113,"column":61},"end":{"line":128,"column":5}},"line":113},"21":{"name":"(anonymous_21)","decl":{"start":{"line":114,"column":47},"end":{"line":114,"column":48}},"loc":{"start":{"line":114,"column":60},"end":{"line":127,"column":9}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst rentModel = {\n    /**\n     * Function to show all rents\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllRents: async function showAllRents(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_rents()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show one rent\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneRent: async function getOneRent(rentId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_rent(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [rentId]);\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show all active rents for one User\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getActiveRents: async function getActiveRents(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_active_rents_by_user(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show all rents for one User\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getRentsByUserId: async function getRentsByUserId(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_rents_by_user(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show bikesLogs\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getBikeLogs: async function getBikeLogs(rentId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikeslog_from_rent(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [rentId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one rent\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneRent: async function createOneRent(userId: string, bikeId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_rent(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, bikeId]);\n\n            return res.status(200).send({ success: true, msg: `New rent created for user ${userId}` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update one rent\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateOneRent: async function createOneRent(rentId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_rent(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [rentId]);\n\n            return res.status(200).send({ success: true, msg: `Rent with id ${rentId} has been updated` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default rentModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4ac6f70cbec153c0e305af7e4c33420f7bf60681","contentHash":"a8a0ae517c5a9784bba8f5d06cf8fb0e60c65caac04444739e7f9721c36173a3"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/admin.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/admin.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":65}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":41},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":62}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":48},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":22},"end":{"line":27,"column":30}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":70}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":43,"column":4}},"30":{"start":{"line":35,"column":45},"end":{"line":43,"column":2}},"31":{"start":{"line":36,"column":20},"end":{"line":36,"column":33}},"32":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":69}},"34":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"35":{"start":{"line":44,"column":0},"end":{"line":52,"column":4}},"36":{"start":{"line":44,"column":42},"end":{"line":52,"column":2}},"37":{"start":{"line":45,"column":22},"end":{"line":45,"column":30}},"38":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"39":{"start":{"line":47,"column":8},"end":{"line":47,"column":74}},"40":{"start":{"line":50,"column":8},"end":{"line":50,"column":20}},"41":{"start":{"line":53,"column":0},"end":{"line":53,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":21},"end":{"line":18,"column":22}},"loc":{"start":{"line":18,"column":41},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":75},"end":{"line":18,"column":76}},"loc":{"start":{"line":18,"column":88},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":28},"end":{"line":26,"column":29}},"loc":{"start":{"line":26,"column":48},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":82},"end":{"line":26,"column":83}},"loc":{"start":{"line":26,"column":95},"end":{"line":34,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":25},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":45},"end":{"line":43,"column":2}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":79},"end":{"line":35,"column":80}},"loc":{"start":{"line":35,"column":92},"end":{"line":43,"column":1}},"line":35},"14":{"name":"(anonymous_14)","decl":{"start":{"line":44,"column":22},"end":{"line":44,"column":23}},"loc":{"start":{"line":44,"column":42},"end":{"line":52,"column":2}},"line":44},"15":{"name":"(anonymous_15)","decl":{"start":{"line":44,"column":76},"end":{"line":44,"column":77}},"loc":{"start":{"line":44,"column":89},"end":{"line":52,"column":1}},"line":44}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/admin.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/admin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAkE;AAElE,kEAA+C;AAC/C,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAuBxB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,IAAI;QACA,OAAO,MAAM,eAAU,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACpD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAClF,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;IAC3B,IAAI;QACA,OAAO,MAAM,eAAU,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC5D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC/E,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAC9B,IAAI;QACA,OAAO,MAAM,eAAU,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC3D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAeH,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC5E,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;IAE3B,IAAI;QACA,OAAO,MAAM,eAAU,CAAC,cAAc,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAChE;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport adminModel from '../../../models/admin';\nconst router = Router();\n\ninterface AdminInfo {\n    FirstName: string;\n    LastName: string;\n    PhoneNumber: string;\n    EmailAdress: string;\n    Authority: number;\n    Password: string;\n}\n\n/**\n * Admin ROUTE\n * /:\n *   get:\n *     summary: Display all admins\n *     description: Render admin list\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/admin', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await adminModel.showAllAdmins(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Admin ROUTE\n *  /admin/login/:\n *   post:\n *     summary: Admin login\n *     description: Manual login for admin\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post('/admin/login', async (req: Request, res: Response, next: NextFunction) => {\n    const adminInfo = req.body;\n    try {\n        return await adminModel.adminLogin(adminInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Admin ROUTE\n *  /admin/:id:\n *   get:\n *     summary: One admin\n *     description: Render admin by adminId\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get('/admin/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const adminId = req.params.id;\n    try {\n        return await adminModel.getOneAdmin(adminId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Admin ROUTE\n *  /admin/:id:\n *   get:\n *     summary: Create one admin\n *     description: Create Admin with information\n *     { firstName, lastName,phoneNumber, emailAdress, authority, password }\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post('/admin', async (req: Request, res: Response, next: NextFunction) => {\n    const adminInfo = req.body;\n\n    try {\n        return await adminModel.createOneAdmin(adminInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c6ca5c2dee53a8abc81e5b93e5b75568358c9906","contentHash":"c0bbd0e5d6b723d3e92c1963ef00944bbdcfe22550f6e4a1cdd36941888c9e62"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":12},"end":{"line":16,"column":35}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":34}},"18":{"start":{"line":18,"column":19},"end":{"line":18,"column":21}},"19":{"start":{"line":19,"column":19},"end":{"line":139,"column":1}},"20":{"start":{"line":21,"column":8},"end":{"line":34,"column":11}},"21":{"start":{"line":22,"column":23},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":12},"end":{"line":33,"column":13}},"23":{"start":{"line":24,"column":28},"end":{"line":24,"column":48}},"24":{"start":{"line":25,"column":30},"end":{"line":25,"column":49}},"25":{"start":{"line":26,"column":16},"end":{"line":26,"column":82}},"26":{"start":{"line":29,"column":16},"end":{"line":29,"column":28}},"27":{"start":{"line":32,"column":16},"end":{"line":32,"column":31}},"28":{"start":{"line":37,"column":8},"end":{"line":50,"column":11}},"29":{"start":{"line":38,"column":23},"end":{"line":38,"column":49}},"30":{"start":{"line":39,"column":12},"end":{"line":49,"column":13}},"31":{"start":{"line":40,"column":28},"end":{"line":40,"column":47}},"32":{"start":{"line":41,"column":30},"end":{"line":41,"column":60}},"33":{"start":{"line":42,"column":16},"end":{"line":42,"column":75}},"34":{"start":{"line":45,"column":16},"end":{"line":45,"column":28}},"35":{"start":{"line":48,"column":16},"end":{"line":48,"column":31}},"36":{"start":{"line":53,"column":8},"end":{"line":76,"column":11}},"37":{"start":{"line":54,"column":23},"end":{"line":54,"column":49}},"38":{"start":{"line":55,"column":26},"end":{"line":55,"column":47}},"39":{"start":{"line":56,"column":29},"end":{"line":56,"column":47}},"40":{"start":{"line":57,"column":12},"end":{"line":75,"column":13}},"41":{"start":{"line":58,"column":28},"end":{"line":58,"column":56}},"42":{"start":{"line":59,"column":30},"end":{"line":59,"column":58}},"43":{"start":{"line":60,"column":30},"end":{"line":60,"column":41}},"44":{"start":{"line":61,"column":16},"end":{"line":61,"column":35}},"45":{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},"46":{"start":{"line":63,"column":20},"end":{"line":63,"column":86}},"47":{"start":{"line":65,"column":21},"end":{"line":67,"column":17}},"48":{"start":{"line":66,"column":20},"end":{"line":66,"column":90}},"49":{"start":{"line":68,"column":16},"end":{"line":68,"column":92}},"50":{"start":{"line":71,"column":16},"end":{"line":71,"column":28}},"51":{"start":{"line":74,"column":16},"end":{"line":74,"column":31}},"52":{"start":{"line":79,"column":8},"end":{"line":109,"column":11}},"53":{"start":{"line":80,"column":12},"end":{"line":108,"column":15}},"54":{"start":{"line":81,"column":16},"end":{"line":81,"column":36}},"55":{"start":{"line":82,"column":16},"end":{"line":89,"column":17}},"56":{"start":{"line":83,"column":20},"end":{"line":88,"column":23}},"57":{"start":{"line":90,"column":16},"end":{"line":101,"column":17}},"58":{"start":{"line":91,"column":36},"end":{"line":91,"column":64}},"59":{"start":{"line":92,"column":35},"end":{"line":92,"column":57}},"60":{"start":{"line":93,"column":34},"end":{"line":93,"column":80}},"61":{"start":{"line":94,"column":20},"end":{"line":100,"column":23}},"62":{"start":{"line":102,"column":16},"end":{"line":107,"column":19}},"63":{"start":{"line":112,"column":8},"end":{"line":137,"column":11}},"64":{"start":{"line":113,"column":12},"end":{"line":136,"column":15}},"65":{"start":{"line":114,"column":16},"end":{"line":135,"column":19}},"66":{"start":{"line":115,"column":31},"end":{"line":115,"column":57}},"67":{"start":{"line":116,"column":20},"end":{"line":134,"column":21}},"68":{"start":{"line":117,"column":24},"end":{"line":117,"column":50}},"69":{"start":{"line":118,"column":36},"end":{"line":118,"column":73}},"70":{"start":{"line":119,"column":38},"end":{"line":126,"column":26}},"71":{"start":{"line":127,"column":24},"end":{"line":127,"column":96}},"72":{"start":{"line":130,"column":24},"end":{"line":130,"column":36}},"73":{"start":{"line":133,"column":24},"end":{"line":133,"column":39}},"74":{"start":{"line":140,"column":0},"end":{"line":140,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllAdmins","decl":{"start":{"line":20,"column":28},"end":{"line":20,"column":41}},"loc":{"start":{"line":20,"column":53},"end":{"line":35,"column":5}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":47},"end":{"line":21,"column":48}},"loc":{"start":{"line":21,"column":60},"end":{"line":34,"column":9}},"line":21},"10":{"name":"getOneAdmin","decl":{"start":{"line":36,"column":26},"end":{"line":36,"column":37}},"loc":{"start":{"line":36,"column":58},"end":{"line":51,"column":5}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":37,"column":47},"end":{"line":37,"column":48}},"loc":{"start":{"line":37,"column":60},"end":{"line":50,"column":9}},"line":37},"12":{"name":"adminLogin","decl":{"start":{"line":52,"column":25},"end":{"line":52,"column":35}},"loc":{"start":{"line":52,"column":58},"end":{"line":77,"column":5}},"line":52},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":47},"end":{"line":53,"column":48}},"loc":{"start":{"line":53,"column":60},"end":{"line":76,"column":9}},"line":53},"14":{"name":"comparePasswords","decl":{"start":{"line":78,"column":31},"end":{"line":78,"column":47}},"loc":{"start":{"line":78,"column":70},"end":{"line":110,"column":5}},"line":78},"15":{"name":"(anonymous_15)","decl":{"start":{"line":79,"column":47},"end":{"line":79,"column":48}},"loc":{"start":{"line":79,"column":60},"end":{"line":109,"column":9}},"line":79},"16":{"name":"(anonymous_16)","decl":{"start":{"line":80,"column":53},"end":{"line":80,"column":54}},"loc":{"start":{"line":80,"column":76},"end":{"line":108,"column":13}},"line":80},"17":{"name":"createOneAdmin","decl":{"start":{"line":111,"column":29},"end":{"line":111,"column":43}},"loc":{"start":{"line":111,"column":66},"end":{"line":138,"column":5}},"line":111},"18":{"name":"(anonymous_18)","decl":{"start":{"line":112,"column":47},"end":{"line":112,"column":48}},"loc":{"start":{"line":112,"column":60},"end":{"line":137,"column":9}},"line":112},"19":{"name":"(anonymous_19)","decl":{"start":{"line":113,"column":56},"end":{"line":113,"column":57}},"loc":{"start":{"line":113,"column":79},"end":{"line":136,"column":13}},"line":113},"20":{"name":"(anonymous_20)","decl":{"start":{"line":114,"column":55},"end":{"line":114,"column":56}},"loc":{"start":{"line":114,"column":68},"end":{"line":135,"column":17}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},{"start":{"line":62,"column":16},"end":{"line":67,"column":17}}],"line":62},"9":{"loc":{"start":{"line":65,"column":21},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":65,"column":21},"end":{"line":67,"column":17}},{"start":{"line":65,"column":21},"end":{"line":67,"column":17}}],"line":65},"10":{"loc":{"start":{"line":82,"column":16},"end":{"line":89,"column":17}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":89,"column":17}},{"start":{"line":82,"column":16},"end":{"line":89,"column":17}}],"line":82},"11":{"loc":{"start":{"line":90,"column":16},"end":{"line":101,"column":17}},"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":101,"column":17}},{"start":{"line":90,"column":16},"end":{"line":101,"column":17}}],"line":90}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst saltRounds = 10;\n\nconst adminModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllAdmins: async function showAllAdmins(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_admins();`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one station\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneAdmin: async function getOneAdmin(adminId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_admin(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [adminId]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to manually login with an admin\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    adminLogin: async function adminLogin(adminInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        const email = adminInfo.emailAdress;\n        const password = adminInfo.password;\n\n        try {\n            const sql = `CALL get_admin_by_email(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [email]);\n\n            const admin = dbRes[0][0];\n\n            console.log(admin);\n\n            if (admin.length > 0) {\n                return await adminModel.comparePasswords(res, admin[0], password);\n            } else if (admin.length === 0) {\n                return res.status(400).json({ success: false, msg: 'No user found' });\n            }\n\n            return res.status(400).json({ success: false, msg: 'Missing credentials' });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to verify a hashed password\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    comparePasswords: async function comparePasswords(res: Response, admin: any, password: string) {\n        bcrypt.compare(password, admin.Password, function (err: any, result: any) {\n            console.log(result);\n\n            if (err) {\n                return res.status(500).json({\n                    errors: {\n                        status: 500,\n                        message: 'Could not decrypt password.',\n                    },\n                });\n            }\n\n            if (result) {\n                const payload = { email: admin.emailAdress };\n                const secret = process.env.JWT_SECRET;\n\n                const token = jwt.sign(payload, secret, { expiresIn: '1h' });\n\n                return res.status(201).json({\n                    data: {\n                        info: { admin },\n                        token,\n                        msg: 'Admin logged in',\n                    },\n                });\n            }\n            return res.status(401).json({\n                errors: {\n                    status: 401,\n                    message: 'Password not correct',\n                },\n            });\n        });\n    },\n    /**\n     * Function to create a admin\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneAdmin: async function createOneAdmin(adminInfo: any, res: Response, next: NextFunction) {\n        bcrypt.hash(adminInfo.password, saltRounds, async function (error: any, hash: any) {\n            const db = await database.getDb();\n            try {\n                adminInfo.password = hash;\n\n                const sql = `CALL create_admin(?, ?, ?, ?, ?, ?)`;\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                    adminInfo.firstName,\n                    adminInfo.lastName,\n                    adminInfo.phoneNumber,\n                    adminInfo.emailAdress,\n                    adminInfo.authority,\n                    adminInfo.password,\n                ]);\n\n                return res.status(201).send({ success: true, msg: 'Admin registered' });\n            } catch (error: any) {\n                next(error);\n            } finally {\n                await db.end();\n            }\n        });\n    },\n};\n\nexport default adminModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2b254d32c5f18f3fab09e6d9711b8b5e663c8e13","contentHash":"2e420d69b2adda9965af1d9e2b443d418fe4c6d6d226a4c8e2ccbf8a4a0628a9"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/auth.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/auth.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":22},"end":{"line":16,"column":61}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":35,"column":3}},"19":{"start":{"line":19,"column":4},"end":{"line":34,"column":7}},"20":{"start":{"line":20,"column":21},"end":{"line":20,"column":35}},"21":{"start":{"line":21,"column":8},"end":{"line":33,"column":11}},"22":{"start":{"line":27,"column":32},"end":{"line":29,"column":10}},"23":{"start":{"line":28,"column":12},"end":{"line":28,"column":41}},"24":{"start":{"line":31,"column":12},"end":{"line":31,"column":30}},"25":{"start":{"line":32,"column":12},"end":{"line":32,"column":27}},"26":{"start":{"line":36,"column":0},"end":{"line":52,"column":3}},"27":{"start":{"line":37,"column":4},"end":{"line":51,"column":7}},"28":{"start":{"line":38,"column":8},"end":{"line":50,"column":11}},"29":{"start":{"line":44,"column":32},"end":{"line":46,"column":10}},"30":{"start":{"line":45,"column":12},"end":{"line":45,"column":41}},"31":{"start":{"line":48,"column":12},"end":{"line":48,"column":30}},"32":{"start":{"line":49,"column":12},"end":{"line":49,"column":27}},"33":{"start":{"line":53,"column":0},"end":{"line":53,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":35},"end":{"line":18,"column":36}},"loc":{"start":{"line":18,"column":55},"end":{"line":35,"column":1}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":43},"end":{"line":19,"column":44}},"loc":{"start":{"line":19,"column":56},"end":{"line":34,"column":5}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":27,"column":18},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":32},"end":{"line":29,"column":10}},"line":27},"11":{"name":"(anonymous_11)","decl":{"start":{"line":27,"column":64},"end":{"line":27,"column":65}},"loc":{"start":{"line":27,"column":77},"end":{"line":29,"column":9}},"line":27},"12":{"name":"(anonymous_12)","decl":{"start":{"line":30,"column":18},"end":{"line":30,"column":19}},"loc":{"start":{"line":30,"column":28},"end":{"line":33,"column":9}},"line":30},"13":{"name":"(anonymous_13)","decl":{"start":{"line":36,"column":32},"end":{"line":36,"column":33}},"loc":{"start":{"line":36,"column":52},"end":{"line":52,"column":1}},"line":36},"14":{"name":"(anonymous_14)","decl":{"start":{"line":37,"column":43},"end":{"line":37,"column":44}},"loc":{"start":{"line":37,"column":56},"end":{"line":51,"column":5}},"line":37},"15":{"name":"(anonymous_15)","decl":{"start":{"line":44,"column":18},"end":{"line":44,"column":19}},"loc":{"start":{"line":44,"column":32},"end":{"line":46,"column":10}},"line":44},"16":{"name":"(anonymous_16)","decl":{"start":{"line":44,"column":64},"end":{"line":44,"column":65}},"loc":{"start":{"line":44,"column":77},"end":{"line":46,"column":9}},"line":44},"17":{"name":"(anonymous_17)","decl":{"start":{"line":47,"column":18},"end":{"line":47,"column":19}},"loc":{"start":{"line":47,"column":28},"end":{"line":50,"column":9}},"line":47}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[0,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/auth.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/auth.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAA8D;AAC9D,8DAAgC;AAChC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,UAAgB,GAAY,EAAE,GAAa;;QAC1E,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;QAE5B,MAAM,IAAA,qBAAK,EACP,yDAAyD,OAAO,CAAC,GAAG,CAAC,SAAS,kBAAkB,OAAO,CAAC,GAAG,CAAC,cAAc,SAAS,IAAI,EAAE,EACzI;YACI,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACL,MAAM,EAAE,kBAAkB;aAC7B;SACJ,CACJ;aACI,IAAI,CAAC,CAAO,QAAQ,EAAE,EAAE;YACrB,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACjC,CAAC,CAAA,CAAC;aACD,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACX,CAAC;CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAgB,GAAY,EAAE,GAAa;;QACvE,MAAM,IAAA,qBAAK,EAAC,6BAA6B,EAAE;YACvC,MAAM,EAAE,KAAK;YACb,OAAO,EAAE;gBACL,aAAa,EAAE,GAAG,CAAC,GAAG,CAAC,eAAe,CAAE;aAC3C;SACJ,CAAC;aACG,IAAI,CAAC,CAAO,QAAQ,EAAE,EAAE;YACrB,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACjC,CAAC,CAAA,CAAC;aACD,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACX,CAAC;CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { Request, response, Response, Router } from 'express';\nimport fetch from 'cross-fetch';\nconst router = Router();\n\nrouter.get('/auth/getAccessToken', async function (req: Request, res: Response) {\n    const code = req.query.code;\n\n    await fetch(\n        `https://github.com/login/oauth/access_token?client_id=${process.env.CLIENT_ID}&client_secret=${process.env.CLIENT_SECRETS}&code=${code}`,\n        {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n            },\n        }\n    )\n        .then(async (response) => {\n            return await response.json();\n        })\n        .then((data) => {\n            console.log(data);\n            res.json(data);\n        });\n});\n\nrouter.get('/auth/getUserData', async function (req: Request, res: Response) {\n    await fetch(`https://api.github.com/user`, {\n        method: 'GET',\n        headers: {\n            Authorization: req.get('Authorization')!,\n        },\n    })\n        .then(async (response) => {\n            return await response.json();\n        })\n        .then((data) => {\n            console.log(data);\n            res.json(data);\n        });\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb8273fbcaae0c19654ec4add3eb9032446c9d13","contentHash":"57bae4c909bd5522ef6396c0e5590f8ec72bbeae8646c792348f7fd3d2a0cb60"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/charger.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/charger.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":71}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":67}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":47},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":22},"end":{"line":27,"column":35}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":76}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":46,"column":4}},"30":{"start":{"line":35,"column":47},"end":{"line":46,"column":2}},"31":{"start":{"line":36,"column":24},"end":{"line":39,"column":5}},"32":{"start":{"line":40,"column":4},"end":{"line":45,"column":5}},"33":{"start":{"line":41,"column":8},"end":{"line":41,"column":77}},"34":{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},"35":{"start":{"line":47,"column":0},"end":{"line":47,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":77},"end":{"line":18,"column":78}},"loc":{"start":{"line":18,"column":90},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":27},"end":{"line":26,"column":28}},"loc":{"start":{"line":26,"column":47},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":81},"end":{"line":26,"column":82}},"loc":{"start":{"line":26,"column":94},"end":{"line":34,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":27},"end":{"line":35,"column":28}},"loc":{"start":{"line":35,"column":47},"end":{"line":46,"column":2}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":81},"end":{"line":35,"column":82}},"loc":{"start":{"line":35,"column":94},"end":{"line":46,"column":1}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/charger.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/charger.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAkE;AAElE,wEAAoD;AACpD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAcxB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,IAAI;QACA,OAAO,MAAM,kBAAY,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACxD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAEhC,IAAI;QACA,OAAO,MAAM,kBAAY,CAAC,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACjE;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,MAAM,WAAW,GAAG;QAChB,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;QACjB,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM;KAC1B,CAAC;IAEF,IAAI;QACA,OAAO,MAAM,kBAAY,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAClE;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport chargerModel from '../../../models/chargers';\nconst router = Router();\n\n/**\n * Charger ROUTE\n * /:\n *   get:\n *     summary: Display all chargers\n *     description: Render list of all chargers\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/charger', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await chargerModel.showAllChargers(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Charger ROUTE\n * /:\n *   get:\n *     summary: Display information for one charger\n *     description: Render a specific charger\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/charger/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const chargerId = req.params.id;\n\n    try {\n        return await chargerModel.getOneCharger(chargerId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Charger ROUTE\n * /:\n *   put:\n *     summary: Change status of one charger\n *     description: Update a status for one charger\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/charger/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const chargerInfo = {\n        id: req.params.id,\n        status: req.body.status,\n    };\n\n    try {\n        return await chargerModel.updateStatus(chargerInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7e7b772c3cb21299e8b7f438b493c98078966862","contentHash":"4bf47e8941948415469e70fdbbd77bf4199a374837d107b12e8921513c8a0593"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":21},"end":{"line":72,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":20,"column":23},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":22,"column":28},"end":{"line":22,"column":50}},"22":{"start":{"line":23,"column":30},"end":{"line":23,"column":49}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":82}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":28}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},"26":{"start":{"line":35,"column":8},"end":{"line":48,"column":11}},"27":{"start":{"line":36,"column":23},"end":{"line":36,"column":49}},"28":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"29":{"start":{"line":38,"column":28},"end":{"line":38,"column":49}},"30":{"start":{"line":39,"column":30},"end":{"line":39,"column":62}},"31":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"34":{"start":{"line":51,"column":8},"end":{"line":70,"column":11}},"35":{"start":{"line":52,"column":23},"end":{"line":52,"column":49}},"36":{"start":{"line":53,"column":12},"end":{"line":69,"column":13}},"37":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"38":{"start":{"line":55,"column":20},"end":{"line":55,"column":83}},"39":{"start":{"line":57,"column":28},"end":{"line":57,"column":62}},"40":{"start":{"line":58,"column":30},"end":{"line":58,"column":87}},"41":{"start":{"line":59,"column":16},"end":{"line":62,"column":19}},"42":{"start":{"line":65,"column":16},"end":{"line":65,"column":28}},"43":{"start":{"line":68,"column":16},"end":{"line":68,"column":31}},"44":{"start":{"line":73,"column":0},"end":{"line":73,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllChargers","decl":{"start":{"line":18,"column":30},"end":{"line":18,"column":45}},"loc":{"start":{"line":18,"column":57},"end":{"line":33,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":32,"column":9}},"line":19},"10":{"name":"getOneCharger","decl":{"start":{"line":34,"column":28},"end":{"line":34,"column":41}},"loc":{"start":{"line":34,"column":64},"end":{"line":49,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":47},"end":{"line":35,"column":48}},"loc":{"start":{"line":35,"column":60},"end":{"line":48,"column":9}},"line":35},"12":{"name":"updateStatus","decl":{"start":{"line":50,"column":27},"end":{"line":50,"column":39}},"loc":{"start":{"line":50,"column":64},"end":{"line":71,"column":5}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":70,"column":9}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},{"start":{"line":54,"column":16},"end":{"line":56,"column":17}}],"line":54}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,kDAAgC;AAChC,6DAAyD;AAEzD,MAAM,YAAY,GAAG;IAMjB,eAAe,EAAE,SAAe,eAAe,CAAC,GAAa,EAAE,IAAkB;;YAC7E,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,sBAAsB,CAAC;gBACnC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,aAAa,EAAE,SAAe,aAAa,CAAC,SAAiB,EAAE,GAAa,EAAE,IAAkB;;YAC5F,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAElC,IAAI;gBACA,MAAM,GAAG,GAAG,qBAAqB,CAAC;gBAElC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEjF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,YAAY,EAAE,SAAe,YAAY,CAAC,WAAgB,EAAE,GAAa,EAAE,IAAkB;;YACzF,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;oBACrB,MAAM,IAAI,0BAAW,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;iBACnD;gBACD,MAAM,GAAG,GAAG,kCAAkC,CAAC;gBAC/C,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE1G,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACxB,OAAO,EAAE,IAAI;oBACb,GAAG,EAAE,mBAAmB,WAAW,CAAC,EAAE,0BAA0B,WAAW,CAAC,MAAM,GAAG;iBACxF,CAAC,CAAC;aACN;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst chargerModel = {\n    /**\n     * Function to show all chargers\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllChargers: async function showAllChargers(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_chargers();`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one charger\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneCharger: async function getOneCharger(chargerId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        try {\n            const sql = `CALL get_charger(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [chargerId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update status of one charger\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateStatus: async function updateStatus(chargerInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            if (!chargerInfo.status) {\n                throw new CustomError(false, 'No status given');\n            }\n            const sql = `CALL update_charger_status(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [chargerInfo.id, chargerInfo.status]);\n\n            return res.status(200).send({\n                success: true,\n                msg: `Charger with id ${chargerInfo.id} has changed status to ${chargerInfo.status} `,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default chargerModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"05980ba06031ae58b6c7f328347d923a99da9482","contentHash":"730f28c9e14bc0ae9ab7c98b20abb5f0c97763b4c8e13cbccbfdbd85946425df"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/geofence.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/geofence.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":71}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":44},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":68}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":48},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":23},"end":{"line":27,"column":36}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":78}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":43,"column":4}},"30":{"start":{"line":35,"column":45},"end":{"line":43,"column":2}},"31":{"start":{"line":36,"column":25},"end":{"line":36,"column":33}},"32":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":83}},"34":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"35":{"start":{"line":44,"column":0},"end":{"line":55,"column":4}},"36":{"start":{"line":44,"column":60},"end":{"line":55,"column":2}},"37":{"start":{"line":45,"column":25},"end":{"line":48,"column":5}},"38":{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},"39":{"start":{"line":50,"column":8},"end":{"line":50,"column":76}},"40":{"start":{"line":53,"column":8},"end":{"line":53,"column":20}},"41":{"start":{"line":56,"column":0},"end":{"line":67,"column":4}},"42":{"start":{"line":56,"column":53},"end":{"line":67,"column":2}},"43":{"start":{"line":57,"column":25},"end":{"line":60,"column":5}},"44":{"start":{"line":61,"column":4},"end":{"line":66,"column":5}},"45":{"start":{"line":62,"column":8},"end":{"line":62,"column":69}},"46":{"start":{"line":65,"column":8},"end":{"line":65,"column":20}},"47":{"start":{"line":68,"column":0},"end":{"line":79,"column":4}},"48":{"start":{"line":68,"column":53},"end":{"line":79,"column":2}},"49":{"start":{"line":69,"column":25},"end":{"line":72,"column":5}},"50":{"start":{"line":73,"column":4},"end":{"line":78,"column":5}},"51":{"start":{"line":74,"column":8},"end":{"line":74,"column":69}},"52":{"start":{"line":77,"column":8},"end":{"line":77,"column":20}},"53":{"start":{"line":80,"column":0},"end":{"line":88,"column":4}},"54":{"start":{"line":80,"column":51},"end":{"line":88,"column":2}},"55":{"start":{"line":81,"column":23},"end":{"line":81,"column":46}},"56":{"start":{"line":82,"column":4},"end":{"line":87,"column":5}},"57":{"start":{"line":83,"column":8},"end":{"line":83,"column":74}},"58":{"start":{"line":86,"column":8},"end":{"line":86,"column":20}},"59":{"start":{"line":89,"column":0},"end":{"line":89,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":24},"end":{"line":18,"column":25}},"loc":{"start":{"line":18,"column":44},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":78},"end":{"line":18,"column":79}},"loc":{"start":{"line":18,"column":91},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":28},"end":{"line":26,"column":29}},"loc":{"start":{"line":26,"column":48},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":82},"end":{"line":26,"column":83}},"loc":{"start":{"line":26,"column":95},"end":{"line":34,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":25},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":45},"end":{"line":43,"column":2}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":79},"end":{"line":35,"column":80}},"loc":{"start":{"line":35,"column":92},"end":{"line":43,"column":1}},"line":35},"14":{"name":"(anonymous_14)","decl":{"start":{"line":44,"column":40},"end":{"line":44,"column":41}},"loc":{"start":{"line":44,"column":60},"end":{"line":55,"column":2}},"line":44},"15":{"name":"(anonymous_15)","decl":{"start":{"line":44,"column":94},"end":{"line":44,"column":95}},"loc":{"start":{"line":44,"column":107},"end":{"line":55,"column":1}},"line":44},"16":{"name":"(anonymous_16)","decl":{"start":{"line":56,"column":33},"end":{"line":56,"column":34}},"loc":{"start":{"line":56,"column":53},"end":{"line":67,"column":2}},"line":56},"17":{"name":"(anonymous_17)","decl":{"start":{"line":56,"column":87},"end":{"line":56,"column":88}},"loc":{"start":{"line":56,"column":100},"end":{"line":67,"column":1}},"line":56},"18":{"name":"(anonymous_18)","decl":{"start":{"line":68,"column":33},"end":{"line":68,"column":34}},"loc":{"start":{"line":68,"column":53},"end":{"line":79,"column":2}},"line":68},"19":{"name":"(anonymous_19)","decl":{"start":{"line":68,"column":87},"end":{"line":68,"column":88}},"loc":{"start":{"line":68,"column":100},"end":{"line":79,"column":1}},"line":68},"20":{"name":"(anonymous_20)","decl":{"start":{"line":80,"column":31},"end":{"line":80,"column":32}},"loc":{"start":{"line":80,"column":51},"end":{"line":88,"column":2}},"line":80},"21":{"name":"(anonymous_21)","decl":{"start":{"line":80,"column":85},"end":{"line":80,"column":86}},"loc":{"start":{"line":80,"column":98},"end":{"line":88,"column":1}},"line":80}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/geofence.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/geofence.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport geofenceModel from '../../../models/geofence';\nconst router = Router();\n\ninterface GeofenceInfo {\n    Coordinates: string;\n    Info: string;\n    Type: number;\n}\n\n/**\n * Geofence ROUTE\n * /:\n *   get:\n *     summary: Display all geofences\n *     description: Render list of all geofences\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/geofence', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await geofenceModel.showAllGeofences(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   get:\n *     summary: Display information for one geofence\n *     description: Render a specific geofence\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/geofence/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const geofenceId = req.params.id;\n\n    try {\n        return await geofenceModel.getOneGeofence(geofenceId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   get:\n *     summary: Create one geofence\n *     description: Create one geofence with information:\n * { coordinates, info , type }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post('/geofence', async (req: Request, res: Response, next: NextFunction) => {\n    const geofenceInfo = req.body;\n\n    try {\n        return await geofenceModel.createOneGeofence(geofenceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   put:\n *     summary: Update coordinates for one geofence\n *     description: Update one geofence with information: { coordinates }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/geofence/coordinates/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const geofenceInfo = {\n        geofenceId: req.params.id,\n        coordinates: req.body.coordinates,\n    };\n\n    try {\n        await geofenceModel.updateCoordinates(geofenceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   put:\n *     summary: Update info for one geofence\n *     description: Update one geofence with information: { info }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/geofence/info/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const geofenceInfo = {\n        geofenceId: req.params.id,\n        info: req.body.info,\n    };\n\n    try {\n        await geofenceModel.updateInfo(geofenceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   put:\n *     summary: Update type for one geofence\n *     description: Update one geofence with information: { type }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/geofence/type/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const geofenceInfo = {\n        geofenceId: req.params.id,\n        type: req.body.type,\n    };\n\n    try {\n        await geofenceModel.updateType(geofenceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   post:\n *     summary: Delete one geofence\n *     description: Delete a geofence with its id\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.delete('/geofence/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const geofenceId = parseInt(req.params.id);\n\n    try {\n        await geofenceModel.deleteOneGeofence(geofenceId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8ab31fcc0e3b944b29759066a2905e70f32dd44a","contentHash":"47c403c8dc87dd4a8bc3d271ddb2868a972fdfd8e186978762aa614290d5d032"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":22},"end":{"line":158,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":20,"column":23},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":22,"column":28},"end":{"line":22,"column":51}},"22":{"start":{"line":23,"column":30},"end":{"line":23,"column":49}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":82}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":28}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},"26":{"start":{"line":35,"column":8},"end":{"line":48,"column":11}},"27":{"start":{"line":36,"column":23},"end":{"line":36,"column":49}},"28":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"29":{"start":{"line":38,"column":28},"end":{"line":38,"column":50}},"30":{"start":{"line":39,"column":30},"end":{"line":39,"column":63}},"31":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"34":{"start":{"line":51,"column":8},"end":{"line":71,"column":11}},"35":{"start":{"line":52,"column":23},"end":{"line":52,"column":49}},"36":{"start":{"line":53,"column":12},"end":{"line":70,"column":13}},"37":{"start":{"line":54,"column":28},"end":{"line":54,"column":59}},"38":{"start":{"line":55,"column":30},"end":{"line":59,"column":18}},"39":{"start":{"line":60,"column":16},"end":{"line":63,"column":19}},"40":{"start":{"line":66,"column":16},"end":{"line":66,"column":28}},"41":{"start":{"line":69,"column":16},"end":{"line":69,"column":31}},"42":{"start":{"line":74,"column":8},"end":{"line":93,"column":11}},"43":{"start":{"line":75,"column":23},"end":{"line":75,"column":49}},"44":{"start":{"line":76,"column":12},"end":{"line":92,"column":13}},"45":{"start":{"line":77,"column":28},"end":{"line":77,"column":68}},"46":{"start":{"line":78,"column":30},"end":{"line":81,"column":18}},"47":{"start":{"line":82,"column":16},"end":{"line":85,"column":19}},"48":{"start":{"line":88,"column":16},"end":{"line":88,"column":50}},"49":{"start":{"line":91,"column":16},"end":{"line":91,"column":31}},"50":{"start":{"line":96,"column":8},"end":{"line":117,"column":11}},"51":{"start":{"line":97,"column":23},"end":{"line":97,"column":49}},"52":{"start":{"line":98,"column":12},"end":{"line":116,"column":13}},"53":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"54":{"start":{"line":100,"column":20},"end":{"line":100,"column":81}},"55":{"start":{"line":102,"column":28},"end":{"line":102,"column":61}},"56":{"start":{"line":103,"column":30},"end":{"line":106,"column":18}},"57":{"start":{"line":107,"column":16},"end":{"line":109,"column":121}},"58":{"start":{"line":112,"column":16},"end":{"line":112,"column":28}},"59":{"start":{"line":115,"column":16},"end":{"line":115,"column":31}},"60":{"start":{"line":120,"column":8},"end":{"line":138,"column":11}},"61":{"start":{"line":121,"column":23},"end":{"line":121,"column":49}},"62":{"start":{"line":122,"column":12},"end":{"line":137,"column":13}},"63":{"start":{"line":123,"column":28},"end":{"line":123,"column":61}},"64":{"start":{"line":124,"column":30},"end":{"line":127,"column":18}},"65":{"start":{"line":128,"column":16},"end":{"line":130,"column":122}},"66":{"start":{"line":133,"column":16},"end":{"line":133,"column":28}},"67":{"start":{"line":136,"column":16},"end":{"line":136,"column":31}},"68":{"start":{"line":141,"column":8},"end":{"line":156,"column":11}},"69":{"start":{"line":142,"column":23},"end":{"line":142,"column":49}},"70":{"start":{"line":143,"column":12},"end":{"line":155,"column":13}},"71":{"start":{"line":144,"column":28},"end":{"line":144,"column":53}},"72":{"start":{"line":145,"column":30},"end":{"line":145,"column":63}},"73":{"start":{"line":146,"column":16},"end":{"line":148,"column":111}},"74":{"start":{"line":151,"column":16},"end":{"line":151,"column":28}},"75":{"start":{"line":154,"column":16},"end":{"line":154,"column":31}},"76":{"start":{"line":159,"column":0},"end":{"line":159,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllGeofences","decl":{"start":{"line":18,"column":31},"end":{"line":18,"column":47}},"loc":{"start":{"line":18,"column":59},"end":{"line":33,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":32,"column":9}},"line":19},"10":{"name":"getOneGeofence","decl":{"start":{"line":34,"column":29},"end":{"line":34,"column":43}},"loc":{"start":{"line":34,"column":67},"end":{"line":49,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":47},"end":{"line":35,"column":48}},"loc":{"start":{"line":35,"column":60},"end":{"line":48,"column":9}},"line":35},"12":{"name":"createOneGeofence","decl":{"start":{"line":50,"column":32},"end":{"line":50,"column":49}},"loc":{"start":{"line":50,"column":75},"end":{"line":72,"column":5}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":71,"column":9}},"line":51},"14":{"name":"updateCoordinates","decl":{"start":{"line":73,"column":32},"end":{"line":73,"column":49}},"loc":{"start":{"line":73,"column":75},"end":{"line":94,"column":5}},"line":73},"15":{"name":"(anonymous_15)","decl":{"start":{"line":74,"column":47},"end":{"line":74,"column":48}},"loc":{"start":{"line":74,"column":60},"end":{"line":93,"column":9}},"line":74},"16":{"name":"updateInfo","decl":{"start":{"line":95,"column":25},"end":{"line":95,"column":35}},"loc":{"start":{"line":95,"column":61},"end":{"line":118,"column":5}},"line":95},"17":{"name":"(anonymous_17)","decl":{"start":{"line":96,"column":47},"end":{"line":96,"column":48}},"loc":{"start":{"line":96,"column":60},"end":{"line":117,"column":9}},"line":96},"18":{"name":"updateType","decl":{"start":{"line":119,"column":25},"end":{"line":119,"column":35}},"loc":{"start":{"line":119,"column":61},"end":{"line":139,"column":5}},"line":119},"19":{"name":"(anonymous_19)","decl":{"start":{"line":120,"column":47},"end":{"line":120,"column":48}},"loc":{"start":{"line":120,"column":60},"end":{"line":138,"column":9}},"line":120},"20":{"name":"deleteOneGeofence","decl":{"start":{"line":140,"column":32},"end":{"line":140,"column":49}},"loc":{"start":{"line":140,"column":73},"end":{"line":157,"column":5}},"line":140},"21":{"name":"(anonymous_21)","decl":{"start":{"line":141,"column":47},"end":{"line":141,"column":48}},"loc":{"start":{"line":141,"column":60},"end":{"line":156,"column":9}},"line":141}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},{"start":{"line":99,"column":16},"end":{"line":101,"column":17}}],"line":99}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst geofenceModel = {\n    /**\n     * Function to show all geofences\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllGeofences: async function showAllGeofences(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_geofences();`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneGeofence: async function getOneGeofence(geofenceId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_geofence(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [geofenceId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneGeofence: async function createOneGeofence(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_geofence(?, ? ,?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.coordinates,\n                geofenceInfo.info,\n                geofenceInfo.type,\n            ]);\n\n            return res.status(200).send({\n                success: true,\n                msg: `A new geofence has been created.`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update coordinates of one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateCoordinates: async function updateCoordinates(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_geofence_coordinates(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.geofenceId,\n                geofenceInfo.coordinates,\n            ]);\n            return res.status(200).send({\n                success: true,\n                msg: `Geofence with id has been updated with new coordinates ${geofenceInfo.coordinates}`,\n            });\n        } catch (error: any) {\n            next(res.status(404).send(error));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update information of one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateInfo: async function updateInfo(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            if (!geofenceInfo.info) {\n                throw new CustomError(false, 'No info given');\n            }\n\n            const sql = `CALL update_geofence_info(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.geofenceId,\n                geofenceInfo.info,\n            ]);\n\n            return res\n                .status(200)\n                .send({ succes: true, msg: `Geofence with id has been updated with new info ${geofenceInfo.info}` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n\n    /**\n     * Function to update type of one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateType: async function updateType(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_geofence_type(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.geofenceId,\n                geofenceInfo.type,\n            ]);\n\n            return res\n                .status(200)\n                .send({ success: true, msg: `Geofence with id has been updated with new type ${geofenceInfo.type}` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n\n    /**\n     * Function to delete one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteOneGeofence: async function deleteOneGeofence(geofenceId: number, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_geofence(?)`;\n\n            const dbRes = await db.query(sql, [geofenceId]);\n\n            return res\n                .status(200)\n                .send({ success: true, msg: `Geofence with id ${geofenceId} has been deleted (Type 40)` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default geofenceModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"be61b2143ff33c37f617d27583e47d2096ebeeb9","contentHash":"a3462f48e59fb7503a1842006ad28a608d326be6df75d4c5204e3f7e107c6a35"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/invoice.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/invoice.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":69}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":66}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":47},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":22},"end":{"line":27,"column":35}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":75}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":43,"column":4}},"30":{"start":{"line":35,"column":52},"end":{"line":43,"column":2}},"31":{"start":{"line":36,"column":19},"end":{"line":36,"column":42}},"32":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"33":{"start":{"line":38,"column":8},"end":{"line":38,"column":78}},"34":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"35":{"start":{"line":44,"column":0},"end":{"line":57,"column":4}},"36":{"start":{"line":44,"column":53},"end":{"line":57,"column":2}},"37":{"start":{"line":45,"column":24},"end":{"line":50,"column":5}},"38":{"start":{"line":51,"column":4},"end":{"line":56,"column":5}},"39":{"start":{"line":52,"column":8},"end":{"line":52,"column":80}},"40":{"start":{"line":55,"column":8},"end":{"line":55,"column":20}},"41":{"start":{"line":58,"column":0},"end":{"line":69,"column":4}},"42":{"start":{"line":58,"column":54},"end":{"line":69,"column":2}},"43":{"start":{"line":59,"column":24},"end":{"line":62,"column":5}},"44":{"start":{"line":63,"column":4},"end":{"line":68,"column":5}},"45":{"start":{"line":64,"column":8},"end":{"line":64,"column":83}},"46":{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},"47":{"start":{"line":70,"column":0},"end":{"line":81,"column":4}},"48":{"start":{"line":70,"column":54},"end":{"line":81,"column":2}},"49":{"start":{"line":71,"column":24},"end":{"line":74,"column":5}},"50":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"51":{"start":{"line":76,"column":8},"end":{"line":76,"column":83}},"52":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"53":{"start":{"line":82,"column":0},"end":{"line":93,"column":4}},"54":{"start":{"line":82,"column":51},"end":{"line":93,"column":2}},"55":{"start":{"line":83,"column":24},"end":{"line":86,"column":5}},"56":{"start":{"line":87,"column":4},"end":{"line":92,"column":5}},"57":{"start":{"line":88,"column":8},"end":{"line":88,"column":77}},"58":{"start":{"line":91,"column":8},"end":{"line":91,"column":20}},"59":{"start":{"line":94,"column":0},"end":{"line":103,"column":4}},"60":{"start":{"line":94,"column":59},"end":{"line":103,"column":2}},"61":{"start":{"line":95,"column":19},"end":{"line":95,"column":32}},"62":{"start":{"line":96,"column":23},"end":{"line":96,"column":39}},"63":{"start":{"line":97,"column":4},"end":{"line":102,"column":5}},"64":{"start":{"line":98,"column":8},"end":{"line":98,"column":88}},"65":{"start":{"line":101,"column":8},"end":{"line":101,"column":20}},"66":{"start":{"line":104,"column":0},"end":{"line":104,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":77},"end":{"line":18,"column":78}},"loc":{"start":{"line":18,"column":90},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":27},"end":{"line":26,"column":28}},"loc":{"start":{"line":26,"column":47},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":81},"end":{"line":26,"column":82}},"loc":{"start":{"line":26,"column":94},"end":{"line":34,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":32},"end":{"line":35,"column":33}},"loc":{"start":{"line":35,"column":52},"end":{"line":43,"column":2}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":86},"end":{"line":35,"column":87}},"loc":{"start":{"line":35,"column":99},"end":{"line":43,"column":1}},"line":35},"14":{"name":"(anonymous_14)","decl":{"start":{"line":44,"column":33},"end":{"line":44,"column":34}},"loc":{"start":{"line":44,"column":53},"end":{"line":57,"column":2}},"line":44},"15":{"name":"(anonymous_15)","decl":{"start":{"line":44,"column":87},"end":{"line":44,"column":88}},"loc":{"start":{"line":44,"column":100},"end":{"line":57,"column":1}},"line":44},"16":{"name":"(anonymous_16)","decl":{"start":{"line":58,"column":34},"end":{"line":58,"column":35}},"loc":{"start":{"line":58,"column":54},"end":{"line":69,"column":2}},"line":58},"17":{"name":"(anonymous_17)","decl":{"start":{"line":58,"column":88},"end":{"line":58,"column":89}},"loc":{"start":{"line":58,"column":101},"end":{"line":69,"column":1}},"line":58},"18":{"name":"(anonymous_18)","decl":{"start":{"line":70,"column":34},"end":{"line":70,"column":35}},"loc":{"start":{"line":70,"column":54},"end":{"line":81,"column":2}},"line":70},"19":{"name":"(anonymous_19)","decl":{"start":{"line":70,"column":88},"end":{"line":70,"column":89}},"loc":{"start":{"line":70,"column":101},"end":{"line":81,"column":1}},"line":70},"20":{"name":"(anonymous_20)","decl":{"start":{"line":82,"column":31},"end":{"line":82,"column":32}},"loc":{"start":{"line":82,"column":51},"end":{"line":93,"column":2}},"line":82},"21":{"name":"(anonymous_21)","decl":{"start":{"line":82,"column":85},"end":{"line":82,"column":86}},"loc":{"start":{"line":82,"column":98},"end":{"line":93,"column":1}},"line":82},"22":{"name":"(anonymous_22)","decl":{"start":{"line":94,"column":39},"end":{"line":94,"column":40}},"loc":{"start":{"line":94,"column":59},"end":{"line":103,"column":2}},"line":94},"23":{"name":"(anonymous_23)","decl":{"start":{"line":94,"column":93},"end":{"line":94,"column":94}},"loc":{"start":{"line":94,"column":106},"end":{"line":103,"column":1}},"line":94}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/invoice.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/invoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport invoiceModel from '../../../models/invoice';\nconst router = Router();\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Display all Invoices\n *     description: Render list of invoices\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/invoice', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await invoiceModel.showAllInvoices(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Display information for one invoice\n *     description: Render a specific invoice\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/invoice/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const invoiceId = req.params.id;\n\n    try {\n        return await invoiceModel.getOneInvoice(invoiceId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Display all invoices for a user\n *     description: Render all invoices for a user\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/invoice/user/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = parseInt(req.params.id);\n\n    try {\n        return await invoiceModel.getInvoicesByUserId(userId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Create a invoice for a user\n *     description: Create a invoice for a user\n *     with information\n *     { Rent_id, User_id, PhoneNumber, Amount, Status }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post('/invoice/user/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const invoiceInfo = {\n        rentId: req.body.rentId,\n        userId: req.params.id,\n        amount: req.body.amount,\n        status: req.body.status,\n    };\n\n    try {\n        return await invoiceModel.createOneInvoice(invoiceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   put:\n *     summary: Update invoice status\n *     description: Update an  status invoice\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/invoice/status/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const invoiceInfo = {\n        invoiceId: req.params.id,\n        status: req.body.status,\n    };\n\n    try {\n        return await invoiceModel.updateInvoiceStatus(invoiceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   put:\n *     summary: Update invoice amount\n *     description: Update an invoice amount\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/invoice/amount/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const invoiceInfo = {\n        invoiceId: req.params.id,\n        amount: req.body.amount,\n    };\n\n    try {\n        return await invoiceModel.updateInvoiceAmount(invoiceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   put:\n *     summary: Pay an invoice\n *     description: Pay an invoice\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/invoice/pay/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const invoiceInfo = {\n        id: req.params.id,\n        userId: req.body.userId,\n    };\n\n    try {\n        return await invoiceModel.payOneInvoice(invoiceInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   put:\n *     summary: Pay monthly invoice\n *     description: Pay monthly invoice\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.put('/invoice/pay_monthly/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n    const expireDate = req.body.expires;\n\n    try {\n        return await invoiceModel.payMonthlyInvoice(userId, expireDate, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca887911bc97c1952c150bbec6c670872866f4cf","contentHash":"34b958e72705a7a56dcfd449bf2378d014c4073acb64bfd3b9ccd0c04db6729c"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":21},"end":{"line":186,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":20,"column":23},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":22,"column":28},"end":{"line":22,"column":50}},"22":{"start":{"line":23,"column":30},"end":{"line":23,"column":49}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":82}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":28}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},"26":{"start":{"line":35,"column":8},"end":{"line":48,"column":11}},"27":{"start":{"line":36,"column":23},"end":{"line":36,"column":49}},"28":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"29":{"start":{"line":38,"column":28},"end":{"line":38,"column":49}},"30":{"start":{"line":39,"column":30},"end":{"line":39,"column":62}},"31":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"34":{"start":{"line":51,"column":8},"end":{"line":64,"column":11}},"35":{"start":{"line":52,"column":23},"end":{"line":52,"column":49}},"36":{"start":{"line":53,"column":12},"end":{"line":63,"column":13}},"37":{"start":{"line":54,"column":28},"end":{"line":54,"column":58}},"38":{"start":{"line":55,"column":30},"end":{"line":55,"column":59}},"39":{"start":{"line":56,"column":16},"end":{"line":56,"column":82}},"40":{"start":{"line":59,"column":16},"end":{"line":59,"column":28}},"41":{"start":{"line":62,"column":16},"end":{"line":62,"column":31}},"42":{"start":{"line":67,"column":8},"end":{"line":91,"column":11}},"43":{"start":{"line":68,"column":23},"end":{"line":68,"column":49}},"44":{"start":{"line":69,"column":12},"end":{"line":90,"column":13}},"45":{"start":{"line":70,"column":28},"end":{"line":70,"column":61}},"46":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"47":{"start":{"line":72,"column":20},"end":{"line":72,"column":87}},"48":{"start":{"line":74,"column":30},"end":{"line":79,"column":18}},"49":{"start":{"line":80,"column":16},"end":{"line":83,"column":19}},"50":{"start":{"line":86,"column":16},"end":{"line":86,"column":28}},"51":{"start":{"line":89,"column":16},"end":{"line":89,"column":31}},"52":{"start":{"line":94,"column":8},"end":{"line":113,"column":11}},"53":{"start":{"line":95,"column":23},"end":{"line":95,"column":49}},"54":{"start":{"line":96,"column":12},"end":{"line":112,"column":13}},"55":{"start":{"line":97,"column":28},"end":{"line":97,"column":62}},"56":{"start":{"line":98,"column":30},"end":{"line":101,"column":18}},"57":{"start":{"line":102,"column":16},"end":{"line":105,"column":19}},"58":{"start":{"line":108,"column":16},"end":{"line":108,"column":28}},"59":{"start":{"line":111,"column":16},"end":{"line":111,"column":31}},"60":{"start":{"line":116,"column":8},"end":{"line":138,"column":11}},"61":{"start":{"line":117,"column":23},"end":{"line":117,"column":49}},"62":{"start":{"line":118,"column":12},"end":{"line":137,"column":13}},"63":{"start":{"line":119,"column":28},"end":{"line":119,"column":62}},"64":{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},"65":{"start":{"line":121,"column":20},"end":{"line":121,"column":87}},"66":{"start":{"line":123,"column":30},"end":{"line":126,"column":18}},"67":{"start":{"line":127,"column":16},"end":{"line":130,"column":19}},"68":{"start":{"line":133,"column":16},"end":{"line":133,"column":28}},"69":{"start":{"line":136,"column":16},"end":{"line":136,"column":31}},"70":{"start":{"line":141,"column":8},"end":{"line":160,"column":11}},"71":{"start":{"line":142,"column":23},"end":{"line":142,"column":49}},"72":{"start":{"line":143,"column":12},"end":{"line":159,"column":13}},"73":{"start":{"line":144,"column":28},"end":{"line":144,"column":52}},"74":{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},"75":{"start":{"line":146,"column":20},"end":{"line":146,"column":82}},"76":{"start":{"line":148,"column":30},"end":{"line":148,"column":87}},"77":{"start":{"line":149,"column":16},"end":{"line":152,"column":19}},"78":{"start":{"line":155,"column":16},"end":{"line":155,"column":28}},"79":{"start":{"line":158,"column":16},"end":{"line":158,"column":31}},"80":{"start":{"line":163,"column":8},"end":{"line":184,"column":11}},"81":{"start":{"line":164,"column":23},"end":{"line":164,"column":49}},"82":{"start":{"line":165,"column":12},"end":{"line":183,"column":13}},"83":{"start":{"line":166,"column":28},"end":{"line":166,"column":60}},"84":{"start":{"line":167,"column":30},"end":{"line":167,"column":71}},"85":{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},"86":{"start":{"line":169,"column":20},"end":{"line":169,"column":85}},"87":{"start":{"line":171,"column":16},"end":{"line":171,"column":45}},"88":{"start":{"line":172,"column":16},"end":{"line":172,"column":35}},"89":{"start":{"line":173,"column":16},"end":{"line":176,"column":19}},"90":{"start":{"line":179,"column":16},"end":{"line":179,"column":28}},"91":{"start":{"line":182,"column":16},"end":{"line":182,"column":31}},"92":{"start":{"line":187,"column":0},"end":{"line":187,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllInvoices","decl":{"start":{"line":18,"column":30},"end":{"line":18,"column":45}},"loc":{"start":{"line":18,"column":57},"end":{"line":33,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":32,"column":9}},"line":19},"10":{"name":"getOneInvoice","decl":{"start":{"line":34,"column":28},"end":{"line":34,"column":41}},"loc":{"start":{"line":34,"column":64},"end":{"line":49,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":47},"end":{"line":35,"column":48}},"loc":{"start":{"line":35,"column":60},"end":{"line":48,"column":9}},"line":35},"12":{"name":"getInvoicesByUserId","decl":{"start":{"line":50,"column":34},"end":{"line":50,"column":53}},"loc":{"start":{"line":50,"column":73},"end":{"line":65,"column":5}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":64,"column":9}},"line":51},"14":{"name":"createOneInvoice","decl":{"start":{"line":66,"column":31},"end":{"line":66,"column":47}},"loc":{"start":{"line":66,"column":72},"end":{"line":92,"column":5}},"line":66},"15":{"name":"(anonymous_15)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":60},"end":{"line":91,"column":9}},"line":67},"16":{"name":"updateInvoiceStatus","decl":{"start":{"line":93,"column":34},"end":{"line":93,"column":53}},"loc":{"start":{"line":93,"column":78},"end":{"line":114,"column":5}},"line":93},"17":{"name":"(anonymous_17)","decl":{"start":{"line":94,"column":47},"end":{"line":94,"column":48}},"loc":{"start":{"line":94,"column":60},"end":{"line":113,"column":9}},"line":94},"18":{"name":"updateInvoiceAmount","decl":{"start":{"line":115,"column":34},"end":{"line":115,"column":53}},"loc":{"start":{"line":115,"column":78},"end":{"line":139,"column":5}},"line":115},"19":{"name":"(anonymous_19)","decl":{"start":{"line":116,"column":47},"end":{"line":116,"column":48}},"loc":{"start":{"line":116,"column":60},"end":{"line":138,"column":9}},"line":116},"20":{"name":"payOneInvoice","decl":{"start":{"line":140,"column":28},"end":{"line":140,"column":41}},"loc":{"start":{"line":140,"column":66},"end":{"line":161,"column":5}},"line":140},"21":{"name":"(anonymous_21)","decl":{"start":{"line":141,"column":47},"end":{"line":141,"column":48}},"loc":{"start":{"line":141,"column":60},"end":{"line":160,"column":9}},"line":141},"22":{"name":"payMonthlyInvoice","decl":{"start":{"line":162,"column":32},"end":{"line":162,"column":49}},"loc":{"start":{"line":162,"column":81},"end":{"line":185,"column":5}},"line":162},"23":{"name":"(anonymous_23)","decl":{"start":{"line":163,"column":47},"end":{"line":163,"column":48}},"loc":{"start":{"line":163,"column":60},"end":{"line":184,"column":9}},"line":163}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},{"start":{"line":71,"column":16},"end":{"line":73,"column":17}}],"line":71},"9":{"loc":{"start":{"line":71,"column":20},"end":{"line":71,"column":62}},"type":"binary-expr","locations":[{"start":{"line":71,"column":20},"end":{"line":71,"column":39}},{"start":{"line":71,"column":43},"end":{"line":71,"column":62}}],"line":71},"10":{"loc":{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},"type":"if","locations":[{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},{"start":{"line":120,"column":16},"end":{"line":122,"column":17}}],"line":120},"11":{"loc":{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},"type":"if","locations":[{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},{"start":{"line":145,"column":16},"end":{"line":147,"column":17}}],"line":145},"12":{"loc":{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},"type":"if","locations":[{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},{"start":{"line":168,"column":16},"end":{"line":170,"column":17}}],"line":168}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response, NextFunction } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst invoiceModel = {\n    /**\n     * Function to show all invoices\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllInvoices: async function showAllInvoices(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_invoices();`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneInvoice: async function getOneInvoice(invoiceId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_invoice(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [invoiceId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one invoice by user id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getInvoicesByUserId: async function getInvoicesByUserId(userId: number, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_invoices_by_user(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneInvoice: async function createOneInvoice(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_invoice(?, ?, ?, ?)`;\n\n            if (!invoiceInfo.amount || !invoiceInfo.status) {\n                throw new CustomError(false, 'Missing Credentials');\n            }\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                invoiceInfo.rentId,\n                invoiceInfo.userId,\n                invoiceInfo.amount,\n                invoiceInfo.status,\n            ]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `New Invoice has been created for user: ${invoiceInfo.userId}`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update status of one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateInvoiceStatus: async function updateInvoiceStatus(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_invoice_status(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                invoiceInfo.invoiceId,\n                invoiceInfo.status,\n            ]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `Invoice with id ${invoiceInfo.invoiceId} has changed status to ${invoiceInfo.status}`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update amount of one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateInvoiceAmount: async function updateInvoiceAmount(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_invoice_amount(?, ?)`;\n\n            if (!invoiceInfo.amount) {\n                next(new CustomError(false, 'No amount was added'));\n            }\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                invoiceInfo.invoiceId,\n                invoiceInfo.amount,\n            ]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `Invoice with id ${invoiceInfo.invoiceId} has changed amount to ${invoiceInfo.amount}`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to pay one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    payOneInvoice: async function payOneInvoice(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL pay_invoice(?, ?)`;\n\n            if (!invoiceInfo.userId) {\n                throw new CustomError(false, 'Missing userID');\n            }\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [invoiceInfo.id, invoiceInfo.userId]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `Invoice with id ${invoiceInfo.id} has been paid`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to pay monthly invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    payMonthlyInvoice: async function payMonthlyInvoice(\n        userId: string,\n        expireDate: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL pay_monthly_invoice(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, expireDate]);\n\n            if (!expireDate) {\n                throw new CustomError(false, 'No date was given');\n            }\n\n            console.log('AFFECTED ROWS');\n            console.log(dbRes);\n\n            return res.status(200).send({\n                success: true,\n                data: { dbRes },\n                // msg: `Monthly invoice for user with id ${userId} has been paid`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default invoiceModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"49068dfa5f85688c577dc16d904b308dd4320c86","contentHash":"2130e2bac0054f84dd7e7c9c1975dd6225f5a752956e29b27f3435791f0a92d5"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/pricing.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/pricing.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":69}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":4}},"19":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"20":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":66}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"23":{"start":{"line":26,"column":0},"end":{"line":34,"column":4}},"24":{"start":{"line":26,"column":44},"end":{"line":34,"column":2}},"25":{"start":{"line":27,"column":24},"end":{"line":27,"column":32}},"26":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":80}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":20}},"29":{"start":{"line":35,"column":0},"end":{"line":44,"column":4}},"30":{"start":{"line":35,"column":47},"end":{"line":44,"column":2}},"31":{"start":{"line":36,"column":22},"end":{"line":36,"column":35}},"32":{"start":{"line":37,"column":24},"end":{"line":37,"column":32}},"33":{"start":{"line":38,"column":4},"end":{"line":43,"column":5}},"34":{"start":{"line":39,"column":8},"end":{"line":39,"column":91}},"35":{"start":{"line":42,"column":8},"end":{"line":42,"column":20}},"36":{"start":{"line":45,"column":0},"end":{"line":45,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":43},"end":{"line":25,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":77},"end":{"line":18,"column":78}},"loc":{"start":{"line":18,"column":90},"end":{"line":25,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":24},"end":{"line":26,"column":25}},"loc":{"start":{"line":26,"column":44},"end":{"line":34,"column":2}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":26,"column":78},"end":{"line":26,"column":79}},"loc":{"start":{"line":26,"column":91},"end":{"line":34,"column":1}},"line":26},"12":{"name":"(anonymous_12)","decl":{"start":{"line":35,"column":27},"end":{"line":35,"column":28}},"loc":{"start":{"line":35,"column":47},"end":{"line":44,"column":2}},"line":35},"13":{"name":"(anonymous_13)","decl":{"start":{"line":35,"column":81},"end":{"line":35,"column":82}},"loc":{"start":{"line":35,"column":94},"end":{"line":44,"column":1}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/pricing.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/pricing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAkE;AAGlE,sEAAmD;AACnD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAcxB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,IAAI;QACA,OAAO,MAAM,iBAAY,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACxD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC9E,MAAM,WAAW,GAAgB,GAAG,CAAC,IAAI,CAAC;IAE1C,IAAI;QACA,OAAO,MAAM,iBAAY,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACtE;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAChC,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC;IAE7B,IAAI;QACA,OAAO,MAAM,iBAAY,CAAC,gBAAgB,CAAC,SAAS,EAAE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACjF;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { Request, Response, Router, NextFunction } from 'express';\n\nimport PricingInfo from 'src/interfaces/pricingInfo';\nimport pricingModel from '../../../models/pricing';\nconst router = Router();\n\n/**\n * Pricing ROUTE\n * /:\n *   get:\n *     summary: Display all pricings\n *     description: Render pricing table\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/pricing', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await pricingModel.showAllPricings(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Pricing ROUTE\n *  /pricing:\n *   post:\n *     summary: Create a new pricing\n *     description: Create one pricing\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post('/pricing', async (req: Request, res: Response, next: NextFunction) => {\n    const pricingInfo: PricingInfo = req.body;\n\n    try {\n        return await pricingModel.createOnePricing(pricingInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * Pricing ROUTE\n *  /pricing:\n *   put:\n *     summary: Update a pricing\n *     description: Update one pricing\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.put('/pricing/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const pricingId = req.params.id;\n    const pricingInfo = req.body;\n\n    try {\n        return await pricingModel.updateOnePricing(pricingId, pricingInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"57c773aa0dedd69499438fd74a7b19dcff27a3f6","contentHash":"d5bf6bf4c79d57a5f1c97d52ee772f6ee4c92248c7d0a9b0e4515941ec39bb15"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/pricing.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/pricing.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":21},"end":{"line":84,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":49}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":82}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":56,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":55,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":73}},"29":{"start":{"line":38,"column":30},"end":{"line":47,"column":18}},"30":{"start":{"line":48,"column":16},"end":{"line":48,"column":96}},"31":{"start":{"line":51,"column":16},"end":{"line":51,"column":28}},"32":{"start":{"line":54,"column":16},"end":{"line":54,"column":31}},"33":{"start":{"line":59,"column":8},"end":{"line":82,"column":11}},"34":{"start":{"line":60,"column":23},"end":{"line":60,"column":49}},"35":{"start":{"line":61,"column":12},"end":{"line":81,"column":13}},"36":{"start":{"line":62,"column":28},"end":{"line":62,"column":76}},"37":{"start":{"line":63,"column":30},"end":{"line":73,"column":18}},"38":{"start":{"line":74,"column":16},"end":{"line":74,"column":96}},"39":{"start":{"line":77,"column":16},"end":{"line":77,"column":28}},"40":{"start":{"line":80,"column":16},"end":{"line":80,"column":31}},"41":{"start":{"line":85,"column":0},"end":{"line":85,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllPricings","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":45}},"loc":{"start":{"line":17,"column":57},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"createOnePricing","decl":{"start":{"line":33,"column":31},"end":{"line":33,"column":47}},"loc":{"start":{"line":33,"column":72},"end":{"line":57,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":56,"column":9}},"line":34},"12":{"name":"updateOnePricing","decl":{"start":{"line":58,"column":31},"end":{"line":58,"column":47}},"loc":{"start":{"line":58,"column":83},"end":{"line":83,"column":5}},"line":58},"13":{"name":"(anonymous_13)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":82,"column":9}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/pricing.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/pricing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,kDAAgC;AAIhC,MAAM,YAAY,GAAG;IAMjB,eAAe,EAAE,SAAe,eAAe,CAAC,GAAa,EAAE,IAAkB;;YAC7E,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,qBAAqB,CAAC;gBAElC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,gBAAgB,EAAE,SAAe,gBAAgB,CAAC,WAAwB,EAAE,GAAa,EAAE,IAAkB;;YACzG,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,6CAA6C,CAAC;gBAE1D,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChE,WAAW,CAAC,IAAI;oBAChB,WAAW,CAAC,WAAW;oBACvB,WAAW,CAAC,KAAK;oBACjB,WAAW,CAAC,MAAM;oBAClB,WAAW,CAAC,OAAO;oBACnB,WAAW,CAAC,iBAAiB;oBAC7B,WAAW,CAAC,sBAAsB;oBAClC,WAAW,CAAC,mBAAmB;iBAClC,CAAC,CAAC;gBAEH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,0BAA0B,EAAE,CAAC,CAAC;aACnF;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,gBAAgB,EAAE,SAAe,gBAAgB,CAC7C,SAAiB,EACjB,WAAwB,EACxB,GAAa,EACb,IAAkB;;YAElB,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,gDAAgD,CAAC;gBAE7D,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChE,SAAS;oBACT,WAAW,CAAC,IAAI;oBAChB,WAAW,CAAC,WAAW;oBACvB,WAAW,CAAC,KAAK;oBACjB,WAAW,CAAC,MAAM;oBAClB,WAAW,CAAC,OAAO;oBACnB,WAAW,CAAC,iBAAiB;oBAC7B,WAAW,CAAC,sBAAsB;oBAClC,WAAW,CAAC,mBAAmB;iBAClC,CAAC,CAAC;gBAEH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,0BAA0B,EAAE,CAAC,CAAC;aACnF;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport PricingInfo from 'src/interfaces/pricingInfo';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst pricingModel = {\n    /**\n     * Function to show all rents\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllPricings: async function showAllPricings(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_pricings()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one pricing\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOnePricing: async function createOnePricing(pricingInfo: PricingInfo, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_pricing(?, ?, ?, ?, ?, ?, ?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                pricingInfo.type,\n                pricingInfo.description,\n                pricingInfo.start,\n                pricingInfo.minute,\n                pricingInfo.parking,\n                pricingInfo.discountStartFree,\n                pricingInfo.discountEndParkingZone,\n                pricingInfo.discountEndCharging,\n            ]);\n\n            return res.status(200).send({ success: true, msg: `Pricing has been created` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a pricing\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateOnePricing: async function updateOnePricing(\n        pricingId: string,\n        pricingInfo: PricingInfo,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_pricing(?, ?, ?, ?, ?, ?, ?, ?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                pricingId,\n                pricingInfo.type,\n                pricingInfo.description,\n                pricingInfo.start,\n                pricingInfo.minute,\n                pricingInfo.parking,\n                pricingInfo.discountStartFree,\n                pricingInfo.discountEndParkingZone,\n                pricingInfo.discountEndCharging,\n            ]);\n\n            return res.status(200).send({ success: true, msg: `Pricing has been updated` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default pricingModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b843a311e39c2a7010841dd45597a43e15b4a745","contentHash":"17e6a4d58ee71c542ee6960a983a99cb3555cab86466ec6659c2e185ed2e6709"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/apiKeys.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/apiKeys.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":69}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":29,"column":4}},"19":{"start":{"line":18,"column":43},"end":{"line":29,"column":2}},"20":{"start":{"line":19,"column":23},"end":{"line":22,"column":5}},"21":{"start":{"line":23,"column":4},"end":{"line":28,"column":5}},"22":{"start":{"line":24,"column":8},"end":{"line":24,"column":78}},"23":{"start":{"line":27,"column":8},"end":{"line":27,"column":20}},"24":{"start":{"line":30,"column":0},"end":{"line":38,"column":4}},"25":{"start":{"line":30,"column":46},"end":{"line":38,"column":2}},"26":{"start":{"line":31,"column":19},"end":{"line":31,"column":31}},"27":{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},"28":{"start":{"line":33,"column":8},"end":{"line":33,"column":70}},"29":{"start":{"line":36,"column":8},"end":{"line":36,"column":20}},"30":{"start":{"line":39,"column":0},"end":{"line":46,"column":4}},"31":{"start":{"line":39,"column":48},"end":{"line":46,"column":2}},"32":{"start":{"line":40,"column":4},"end":{"line":45,"column":5}},"33":{"start":{"line":41,"column":8},"end":{"line":41,"column":63}},"34":{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},"35":{"start":{"line":47,"column":0},"end":{"line":55,"column":4}},"36":{"start":{"line":47,"column":49},"end":{"line":55,"column":2}},"37":{"start":{"line":48,"column":15},"end":{"line":48,"column":28}},"38":{"start":{"line":49,"column":4},"end":{"line":54,"column":5}},"39":{"start":{"line":50,"column":8},"end":{"line":50,"column":68}},"40":{"start":{"line":53,"column":8},"end":{"line":53,"column":20}},"41":{"start":{"line":56,"column":0},"end":{"line":56,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":43},"end":{"line":29,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":77},"end":{"line":18,"column":78}},"loc":{"start":{"line":18,"column":90},"end":{"line":29,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":30,"column":26},"end":{"line":30,"column":27}},"loc":{"start":{"line":30,"column":46},"end":{"line":38,"column":2}},"line":30},"11":{"name":"(anonymous_11)","decl":{"start":{"line":30,"column":80},"end":{"line":30,"column":81}},"loc":{"start":{"line":30,"column":93},"end":{"line":38,"column":1}},"line":30},"12":{"name":"(anonymous_12)","decl":{"start":{"line":39,"column":28},"end":{"line":39,"column":29}},"loc":{"start":{"line":39,"column":48},"end":{"line":46,"column":2}},"line":39},"13":{"name":"(anonymous_13)","decl":{"start":{"line":39,"column":82},"end":{"line":39,"column":83}},"loc":{"start":{"line":39,"column":95},"end":{"line":46,"column":1}},"line":39},"14":{"name":"(anonymous_14)","decl":{"start":{"line":47,"column":29},"end":{"line":47,"column":30}},"loc":{"start":{"line":47,"column":49},"end":{"line":55,"column":2}},"line":47},"15":{"name":"(anonymous_15)","decl":{"start":{"line":47,"column":83},"end":{"line":47,"column":84}},"loc":{"start":{"line":47,"column":96},"end":{"line":55,"column":1}},"line":47}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/apiKeys.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/apiKeys.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAkE;AAElE,sEAAkD;AAClD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAoBxB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,MAAM,UAAU,GAAG;QACf,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;QACjC,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,YAAY;KACtC,CAAC;IAEF,IAAI;QACA,OAAO,MAAM,iBAAW,CAAC,eAAe,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACnE;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAChF,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IAC5B,IAAI;QACA,OAAO,MAAM,iBAAW,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC3D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAClF,IAAI;QACA,OAAO,MAAM,iBAAW,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACpD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACnF,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACzB,IAAI;QACA,OAAO,MAAM,iBAAW,CAAC,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KACzD;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport apiKeyModel from '../../../models/apiKeys';\nconst router = Router();\n\ninterface apiKeyInfo {\n    email: string;\n    organization: string;\n    apiKey: string;\n}\n\n/**\n * apiKey ROUTE\n * /api_key:\n *   post:\n *     summary: Display list of users with apiKeys\n *     description: Render all users with apiKeys from database\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post('/apiKey', async (req: Request, res: Response, next: NextFunction) => {\n    const apiKeyInfo = {\n        emailAdress: req.body.emailAdress,\n        organization: req.body.organization,\n    };\n\n    try {\n        return await apiKeyModel.createOneApiKey(apiKeyInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * apiKey ROUTE\n * /api_key/key:\n *   get:\n *     summary: Get apiKey with key\n *     description: Render apiKeys with key from database\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/apiKey/key', async (req: Request, res: Response, next: NextFunction) => {\n    const apiKey = req.body.key;\n    try {\n        return await apiKeyModel.getKeyByKey(apiKey, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * apiKey ROUTE\n * /api_key/owner:\n *   get:\n *     summary: Get all keys owner data\n *     description: Render key owner data from database\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/apiKey/owner', async (req: Request, res: Response, next: NextFunction) => {\n    try {\n        return await apiKeyModel.getKeyOwners(res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * apiKey ROUTE\n * /api_key/:id:\n *   delete:\n *     summary: Delete one key by id\n *     description: Render confirmation msg\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.delete('/apiKey/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const id = req.params.id;\n    try {\n        return await apiKeyModel.deleteKeyById(id, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"984ce38f1b01e9b3ce62623c61552ef932c39fb4","contentHash":"699b8c3e7734bbd01475dea165aeee82fb98ffb4660496df3c02aec0fc8866f9"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/apiKeys.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/apiKeys.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":13},"end":{"line":16,"column":49}},"17":{"start":{"line":17,"column":20},"end":{"line":87,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":20,"column":23},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":22,"column":28},"end":{"line":22,"column":52}},"22":{"start":{"line":23,"column":30},"end":{"line":23,"column":59}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":82}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":28}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},"26":{"start":{"line":35,"column":8},"end":{"line":48,"column":11}},"27":{"start":{"line":36,"column":23},"end":{"line":36,"column":49}},"28":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"29":{"start":{"line":38,"column":28},"end":{"line":38,"column":51}},"30":{"start":{"line":39,"column":30},"end":{"line":39,"column":49}},"31":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"34":{"start":{"line":51,"column":8},"end":{"line":69,"column":11}},"35":{"start":{"line":52,"column":23},"end":{"line":52,"column":49}},"36":{"start":{"line":53,"column":27},"end":{"line":53,"column":43}},"37":{"start":{"line":54,"column":12},"end":{"line":68,"column":13}},"38":{"start":{"line":55,"column":28},"end":{"line":55,"column":54}},"39":{"start":{"line":56,"column":30},"end":{"line":60,"column":18}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":87}},"41":{"start":{"line":64,"column":16},"end":{"line":64,"column":28}},"42":{"start":{"line":67,"column":16},"end":{"line":67,"column":31}},"43":{"start":{"line":72,"column":8},"end":{"line":85,"column":11}},"44":{"start":{"line":73,"column":23},"end":{"line":73,"column":49}},"45":{"start":{"line":74,"column":12},"end":{"line":84,"column":13}},"46":{"start":{"line":75,"column":28},"end":{"line":75,"column":54}},"47":{"start":{"line":76,"column":30},"end":{"line":76,"column":55}},"48":{"start":{"line":77,"column":16},"end":{"line":77,"column":106}},"49":{"start":{"line":80,"column":16},"end":{"line":80,"column":28}},"50":{"start":{"line":83,"column":16},"end":{"line":83,"column":31}},"51":{"start":{"line":88,"column":0},"end":{"line":88,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"getKeyByKey","decl":{"start":{"line":18,"column":26},"end":{"line":18,"column":37}},"loc":{"start":{"line":18,"column":57},"end":{"line":33,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":32,"column":9}},"line":19},"10":{"name":"getKeyOwners","decl":{"start":{"line":34,"column":27},"end":{"line":34,"column":39}},"loc":{"start":{"line":34,"column":51},"end":{"line":49,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":47},"end":{"line":35,"column":48}},"loc":{"start":{"line":35,"column":60},"end":{"line":48,"column":9}},"line":35},"12":{"name":"createOneApiKey","decl":{"start":{"line":50,"column":30},"end":{"line":50,"column":45}},"loc":{"start":{"line":50,"column":69},"end":{"line":70,"column":5}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":69,"column":9}},"line":51},"14":{"name":"deleteKeyByid","decl":{"start":{"line":71,"column":28},"end":{"line":71,"column":41}},"loc":{"start":{"line":71,"column":57},"end":{"line":86,"column":5}},"line":71},"15":{"name":"(anonymous_15)","decl":{"start":{"line":72,"column":47},"end":{"line":72,"column":48}},"loc":{"start":{"line":72,"column":60},"end":{"line":85,"column":9}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/apiKeys.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/apiKeys.ts"],"names":[],"mappings":"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","sourcesContent":["import { FieldPacket, RowDataPacket } from 'mysql2/promise';\nimport { Response, NextFunction } from 'express';\nimport { v4 as uuid } from 'uuid';\n\nimport { CustomError } from '../middleware/errorHandler';\nimport database from '../db/db';\n\nconst apiKeyModel = {\n    /**\n     * Function to get a key with a key\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getKeyByKey: async function getKeyByKey(apiKey: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_key_by_key(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [apiKey]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to owner data\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getKeyOwners: async function getKeyOwners(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_key_owners()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to generate a key for a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneApiKey: async function createOneApiKey(apiKeyInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        const apiKey = uuid();\n\n        try {\n            const sql = `CALL create_key(?, ?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                apiKeyInfo.emailAdress,\n                apiKeyInfo.organization,\n                apiKey,\n            ]);\n            return res.status(200).send({ success: true, msg: `Api key created` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get a key with a key\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteKeyById: async function deleteKeyByid(id: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_key_by_id(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [id]);\n\n            return res.status(200).send({ success: true, msg: `Key with id ${id} has been deleted` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default apiKeyModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"34ccb534320c6fe31a5bde61350e533bd835d6c6","contentHash":"9e8e4252581e4bffc4e574fc05cbde3001b55062dbfaabbd38f49b70de824027"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/creditcard.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/creditcard.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":21},"end":{"line":16,"column":75}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":18,"column":0},"end":{"line":26,"column":4}},"19":{"start":{"line":18,"column":50},"end":{"line":26,"column":2}},"20":{"start":{"line":19,"column":19},"end":{"line":19,"column":32}},"21":{"start":{"line":20,"column":4},"end":{"line":25,"column":5}},"22":{"start":{"line":21,"column":8},"end":{"line":21,"column":76}},"23":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}},"24":{"start":{"line":27,"column":0},"end":{"line":35,"column":4}},"25":{"start":{"line":27,"column":55},"end":{"line":35,"column":2}},"26":{"start":{"line":28,"column":19},"end":{"line":28,"column":32}},"27":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"28":{"start":{"line":30,"column":8},"end":{"line":30,"column":69}},"29":{"start":{"line":33,"column":8},"end":{"line":33,"column":20}},"30":{"start":{"line":36,"column":0},"end":{"line":45,"column":4}},"31":{"start":{"line":36,"column":51},"end":{"line":45,"column":2}},"32":{"start":{"line":37,"column":19},"end":{"line":37,"column":32}},"33":{"start":{"line":38,"column":27},"end":{"line":38,"column":35}},"34":{"start":{"line":39,"column":4},"end":{"line":44,"column":5}},"35":{"start":{"line":40,"column":8},"end":{"line":40,"column":92}},"36":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"37":{"start":{"line":46,"column":0},"end":{"line":54,"column":4}},"38":{"start":{"line":46,"column":53},"end":{"line":54,"column":2}},"39":{"start":{"line":47,"column":19},"end":{"line":47,"column":32}},"40":{"start":{"line":48,"column":4},"end":{"line":53,"column":5}},"41":{"start":{"line":49,"column":8},"end":{"line":49,"column":72}},"42":{"start":{"line":52,"column":8},"end":{"line":52,"column":20}},"43":{"start":{"line":55,"column":0},"end":{"line":55,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":30},"end":{"line":18,"column":31}},"loc":{"start":{"line":18,"column":50},"end":{"line":26,"column":2}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":84},"end":{"line":18,"column":85}},"loc":{"start":{"line":18,"column":97},"end":{"line":26,"column":1}},"line":18},"10":{"name":"(anonymous_10)","decl":{"start":{"line":27,"column":35},"end":{"line":27,"column":36}},"loc":{"start":{"line":27,"column":55},"end":{"line":35,"column":2}},"line":27},"11":{"name":"(anonymous_11)","decl":{"start":{"line":27,"column":89},"end":{"line":27,"column":90}},"loc":{"start":{"line":27,"column":102},"end":{"line":35,"column":1}},"line":27},"12":{"name":"(anonymous_12)","decl":{"start":{"line":36,"column":31},"end":{"line":36,"column":32}},"loc":{"start":{"line":36,"column":51},"end":{"line":45,"column":2}},"line":36},"13":{"name":"(anonymous_13)","decl":{"start":{"line":36,"column":85},"end":{"line":36,"column":86}},"loc":{"start":{"line":36,"column":98},"end":{"line":45,"column":1}},"line":36},"14":{"name":"(anonymous_14)","decl":{"start":{"line":46,"column":33},"end":{"line":46,"column":34}},"loc":{"start":{"line":46,"column":53},"end":{"line":54,"column":2}},"line":46},"15":{"name":"(anonymous_15)","decl":{"start":{"line":46,"column":87},"end":{"line":46,"column":88}},"loc":{"start":{"line":46,"column":100},"end":{"line":54,"column":1}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/creditcard.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v1/routes/creditcard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAkE;AAElE,4EAAyD;AACzD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAuBxB,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACpF,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAC7B,IAAI;QACA,OAAO,MAAM,oBAAe,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAClE;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACzF,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAC7B,IAAI;QACA,OAAO,MAAM,oBAAe,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC3D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACrF,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAC7B,MAAM,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC;IAChC,IAAI;QACA,OAAO,MAAM,oBAAe,CAAC,cAAc,CAAC,MAAM,EAAE,cAAc,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAClF;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAcH,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACvF,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IAE7B,IAAI;QACA,OAAO,MAAM,oBAAe,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC9D;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import { NextFunction, Request, Response, Router } from 'express';\n\nimport creditCardModel from '../../../models/creditCard';\nconst router = Router();\n\ninterface creditCardInfo {\n    id: number;\n    pan: string;\n    expiry: string;\n    firstname: string;\n    lastname: string;\n    truncpan: string;\n}\n\n/**\n * creditCard ROUTE\n * /creditCard/:id:\n *   get:\n *     summary: Get one credit card\n *     description: Displays one credit card\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/creditCard/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n    try {\n        return await creditCardModel.getCardsByUser(userId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * creditCard ROUTE\n * /creditCard/:id:\n *   get:\n *     summary: Get one credit card by id\n *     description: Displays one credit card for a user\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/creditCard/card/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const cardId = req.params.id;\n    try {\n        return await creditCardModel.getCard(cardId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * creditCard ROUTE\n * /creditCard:\n *   post:\n *     summary: Create a creditCard\n *     description: Creates a creditcard for a user\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post('/creditCard/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n    const creditCardInfo = req.body;\n    try {\n        return await creditCardModel.saveCreditCard(userId, creditCardInfo, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\n/**\n * creditCard ROUTE\n * /creditCard/:id:\n *   delete:\n *     summary: Delete one credit card\n *     description: Delete one credit card\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.delete('/creditCard/:id', async (req: Request, res: Response, next: NextFunction) => {\n    const userId = req.params.id;\n\n    try {\n        return await creditCardModel.deleteCard(userId, res, next);\n    } catch (error) {\n        next(error);\n    }\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"618c2b485d59f8e95383b7105ec271b806eacba0","contentHash":"19216542e21ac92a63c040f71f194791581540ce0bf8343621756a9693476e7b"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/creditCard.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/creditCard.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":34}},"17":{"start":{"line":17,"column":19},"end":{"line":17,"column":21}},"18":{"start":{"line":18,"column":24},"end":{"line":98,"column":1}},"19":{"start":{"line":20,"column":8},"end":{"line":33,"column":11}},"20":{"start":{"line":21,"column":23},"end":{"line":21,"column":49}},"21":{"start":{"line":22,"column":12},"end":{"line":32,"column":13}},"22":{"start":{"line":23,"column":28},"end":{"line":23,"column":46}},"23":{"start":{"line":24,"column":30},"end":{"line":24,"column":59}},"24":{"start":{"line":25,"column":16},"end":{"line":25,"column":82}},"25":{"start":{"line":28,"column":16},"end":{"line":28,"column":28}},"26":{"start":{"line":31,"column":16},"end":{"line":31,"column":31}},"27":{"start":{"line":36,"column":8},"end":{"line":49,"column":11}},"28":{"start":{"line":37,"column":23},"end":{"line":37,"column":49}},"29":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"30":{"start":{"line":39,"column":28},"end":{"line":39,"column":55}},"31":{"start":{"line":40,"column":30},"end":{"line":40,"column":59}},"32":{"start":{"line":41,"column":16},"end":{"line":41,"column":82}},"33":{"start":{"line":44,"column":16},"end":{"line":44,"column":28}},"34":{"start":{"line":47,"column":16},"end":{"line":47,"column":31}},"35":{"start":{"line":52,"column":8},"end":{"line":80,"column":11}},"36":{"start":{"line":53,"column":12},"end":{"line":79,"column":15}},"37":{"start":{"line":54,"column":16},"end":{"line":78,"column":19}},"38":{"start":{"line":55,"column":31},"end":{"line":55,"column":57}},"39":{"start":{"line":56,"column":20},"end":{"line":56,"column":103}},"40":{"start":{"line":57,"column":20},"end":{"line":77,"column":21}},"41":{"start":{"line":58,"column":24},"end":{"line":58,"column":50}},"42":{"start":{"line":59,"column":24},"end":{"line":59,"column":56}},"43":{"start":{"line":60,"column":24},"end":{"line":60,"column":55}},"44":{"start":{"line":61,"column":41},"end":{"line":61,"column":83}},"45":{"start":{"line":62,"column":38},"end":{"line":69,"column":26}},"46":{"start":{"line":70,"column":24},"end":{"line":70,"column":92}},"47":{"start":{"line":73,"column":24},"end":{"line":73,"column":36}},"48":{"start":{"line":76,"column":24},"end":{"line":76,"column":39}},"49":{"start":{"line":83,"column":8},"end":{"line":96,"column":11}},"50":{"start":{"line":84,"column":23},"end":{"line":84,"column":49}},"51":{"start":{"line":85,"column":12},"end":{"line":95,"column":13}},"52":{"start":{"line":86,"column":28},"end":{"line":86,"column":49}},"53":{"start":{"line":87,"column":30},"end":{"line":87,"column":59}},"54":{"start":{"line":88,"column":16},"end":{"line":88,"column":111}},"55":{"start":{"line":91,"column":16},"end":{"line":91,"column":28}},"56":{"start":{"line":94,"column":16},"end":{"line":94,"column":31}},"57":{"start":{"line":99,"column":0},"end":{"line":99,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"getCard","decl":{"start":{"line":19,"column":22},"end":{"line":19,"column":29}},"loc":{"start":{"line":19,"column":49},"end":{"line":34,"column":5}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":47},"end":{"line":20,"column":48}},"loc":{"start":{"line":20,"column":60},"end":{"line":33,"column":9}},"line":20},"10":{"name":"getCardsByUser","decl":{"start":{"line":35,"column":29},"end":{"line":35,"column":43}},"loc":{"start":{"line":35,"column":63},"end":{"line":50,"column":5}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":36,"column":47},"end":{"line":36,"column":48}},"loc":{"start":{"line":36,"column":60},"end":{"line":49,"column":9}},"line":36},"12":{"name":"saveCreditCard","decl":{"start":{"line":51,"column":29},"end":{"line":51,"column":43}},"loc":{"start":{"line":51,"column":79},"end":{"line":81,"column":5}},"line":51},"13":{"name":"(anonymous_13)","decl":{"start":{"line":52,"column":47},"end":{"line":52,"column":48}},"loc":{"start":{"line":52,"column":60},"end":{"line":80,"column":9}},"line":52},"14":{"name":"(anonymous_14)","decl":{"start":{"line":53,"column":56},"end":{"line":53,"column":57}},"loc":{"start":{"line":53,"column":79},"end":{"line":79,"column":13}},"line":53},"15":{"name":"(anonymous_15)","decl":{"start":{"line":54,"column":55},"end":{"line":54,"column":56}},"loc":{"start":{"line":54,"column":68},"end":{"line":78,"column":17}},"line":54},"16":{"name":"deleteCard","decl":{"start":{"line":82,"column":25},"end":{"line":82,"column":35}},"loc":{"start":{"line":82,"column":55},"end":{"line":97,"column":5}},"line":82},"17":{"name":"(anonymous_17)","decl":{"start":{"line":83,"column":47},"end":{"line":83,"column":48}},"loc":{"start":{"line":83,"column":60},"end":{"line":96,"column":9}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/creditCard.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/creditCard.ts"],"names":[],"mappings":"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","sourcesContent":["import { FieldPacket, RowDataPacket } from 'mysql2/promise';\nimport { Response, NextFunction } from 'express';\n\nimport database from '../db/db';\n\nconst bcrypt = require('bcryptjs');\nconst saltRounds = 10;\n\nconst creditCardModel = {\n    /**\n     * Function to get one credit card by its id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getCard: async function getCard(cardId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_card(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [cardId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get all cards registered by a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getCardsByUser: async function getCardsByUser(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_cards_by_user(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to save a credit card in the database\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    saveCreditCard: async function saveCreditCard(\n        userId: string,\n        creditCardInfo: any,\n        res: Response,\n        next: NextFunction\n    ) {\n        bcrypt.hash(creditCardInfo.pan, saltRounds, async function (error: any, hash: any) {\n            const db = await database.getDb();\n            creditCardInfo.truncpan = creditCardInfo.pan.substr(creditCardInfo.pan.length - 4);\n            try {\n                creditCardInfo.pan = hash;\n                creditCardInfo.firstname = hash;\n                creditCardInfo.lastname = hash;\n\n                const sql_user = `CALL create_creditcard(?, ?, ?, ?, ?, ?)`;\n\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql_user, [\n                    userId,\n                    creditCardInfo.pan,\n                    creditCardInfo.expiry,\n                    creditCardInfo.firstname,\n                    creditCardInfo.lastname,\n                    creditCardInfo.truncpan,\n                ]);\n\n                return res.status(200).send({ success: true, msg: creditCardInfo });\n            } catch (error: any) {\n                next(error);\n            } finally {\n                await db.end();\n            }\n        });\n    },\n    /**\n     * Function to delete one credit card by its id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteCard: async function deleteCard(cardId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_card(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [cardId]);\n\n            return res.status(200).send({ success: true, msg: `Card with id ${cardId} has been deleted` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default creditCardModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"61848c1dd3575141c7d7b08cc0604623b4106930","contentHash":"bf83680095fdbf4818b08755efbffcbd9f18a8711cf84f2da1f7dec032e5ee33"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v2/index.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v2/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":35}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":17}},"loc":{"start":{"line":5,"column":30},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v2/index.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/versions/v2/index.ts"],"names":[],"mappings":";;AAAA,qCAA0E;AAC1E,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAcxB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5C,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","sourcesContent":["import express, { Application, Request, Response, Router } from 'express';\nconst router = Router();\n\n/**\n * Main ROUTE\n * /v2/:\n *   get:\n *     summary: Display\n *     description: Render welcome page\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get('/', (req: Request, res: Response) => {\n    res.send('Hello v2.0 GET API');\n});\n\nmodule.exports = router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5401e54cb80199ca672d8cce51ef649690edb34c","contentHash":"c91fadd3a348a69b54cc1063065d56fdff1307c6e31133b9e25d4f04e2c0db98"}}