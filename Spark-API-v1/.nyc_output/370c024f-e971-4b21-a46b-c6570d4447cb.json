{"/app/src/models/admin.ts":{"path":"/app/src/models/admin.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":12},"end":{"line":16,"column":35}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":34}},"18":{"start":{"line":18,"column":19},"end":{"line":18,"column":21}},"19":{"start":{"line":19,"column":19},"end":{"line":139,"column":1}},"20":{"start":{"line":21,"column":8},"end":{"line":34,"column":11}},"21":{"start":{"line":22,"column":23},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":12},"end":{"line":33,"column":13}},"23":{"start":{"line":24,"column":28},"end":{"line":24,"column":48}},"24":{"start":{"line":25,"column":30},"end":{"line":25,"column":49}},"25":{"start":{"line":26,"column":16},"end":{"line":26,"column":82}},"26":{"start":{"line":29,"column":16},"end":{"line":29,"column":28}},"27":{"start":{"line":32,"column":16},"end":{"line":32,"column":31}},"28":{"start":{"line":37,"column":8},"end":{"line":50,"column":11}},"29":{"start":{"line":38,"column":23},"end":{"line":38,"column":49}},"30":{"start":{"line":39,"column":12},"end":{"line":49,"column":13}},"31":{"start":{"line":40,"column":28},"end":{"line":40,"column":47}},"32":{"start":{"line":41,"column":30},"end":{"line":41,"column":60}},"33":{"start":{"line":42,"column":16},"end":{"line":42,"column":75}},"34":{"start":{"line":45,"column":16},"end":{"line":45,"column":28}},"35":{"start":{"line":48,"column":16},"end":{"line":48,"column":31}},"36":{"start":{"line":53,"column":8},"end":{"line":76,"column":11}},"37":{"start":{"line":54,"column":23},"end":{"line":54,"column":49}},"38":{"start":{"line":55,"column":26},"end":{"line":55,"column":47}},"39":{"start":{"line":56,"column":29},"end":{"line":56,"column":47}},"40":{"start":{"line":57,"column":12},"end":{"line":75,"column":13}},"41":{"start":{"line":58,"column":28},"end":{"line":58,"column":56}},"42":{"start":{"line":59,"column":30},"end":{"line":59,"column":58}},"43":{"start":{"line":60,"column":30},"end":{"line":60,"column":41}},"44":{"start":{"line":61,"column":16},"end":{"line":61,"column":35}},"45":{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},"46":{"start":{"line":63,"column":20},"end":{"line":63,"column":86}},"47":{"start":{"line":65,"column":21},"end":{"line":67,"column":17}},"48":{"start":{"line":66,"column":20},"end":{"line":66,"column":90}},"49":{"start":{"line":68,"column":16},"end":{"line":68,"column":92}},"50":{"start":{"line":71,"column":16},"end":{"line":71,"column":28}},"51":{"start":{"line":74,"column":16},"end":{"line":74,"column":31}},"52":{"start":{"line":79,"column":8},"end":{"line":109,"column":11}},"53":{"start":{"line":80,"column":12},"end":{"line":108,"column":15}},"54":{"start":{"line":81,"column":16},"end":{"line":81,"column":36}},"55":{"start":{"line":82,"column":16},"end":{"line":89,"column":17}},"56":{"start":{"line":83,"column":20},"end":{"line":88,"column":23}},"57":{"start":{"line":90,"column":16},"end":{"line":101,"column":17}},"58":{"start":{"line":91,"column":36},"end":{"line":91,"column":64}},"59":{"start":{"line":92,"column":35},"end":{"line":92,"column":57}},"60":{"start":{"line":93,"column":34},"end":{"line":93,"column":80}},"61":{"start":{"line":94,"column":20},"end":{"line":100,"column":23}},"62":{"start":{"line":102,"column":16},"end":{"line":107,"column":19}},"63":{"start":{"line":112,"column":8},"end":{"line":137,"column":11}},"64":{"start":{"line":113,"column":12},"end":{"line":136,"column":15}},"65":{"start":{"line":114,"column":16},"end":{"line":135,"column":19}},"66":{"start":{"line":115,"column":31},"end":{"line":115,"column":57}},"67":{"start":{"line":116,"column":20},"end":{"line":134,"column":21}},"68":{"start":{"line":117,"column":24},"end":{"line":117,"column":50}},"69":{"start":{"line":118,"column":36},"end":{"line":118,"column":73}},"70":{"start":{"line":119,"column":38},"end":{"line":126,"column":26}},"71":{"start":{"line":127,"column":24},"end":{"line":127,"column":96}},"72":{"start":{"line":130,"column":24},"end":{"line":130,"column":36}},"73":{"start":{"line":133,"column":24},"end":{"line":133,"column":39}},"74":{"start":{"line":140,"column":0},"end":{"line":140,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllAdmins","decl":{"start":{"line":20,"column":28},"end":{"line":20,"column":41}},"loc":{"start":{"line":20,"column":53},"end":{"line":35,"column":5}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":47},"end":{"line":21,"column":48}},"loc":{"start":{"line":21,"column":60},"end":{"line":34,"column":9}},"line":21},"10":{"name":"getOneAdmin","decl":{"start":{"line":36,"column":26},"end":{"line":36,"column":37}},"loc":{"start":{"line":36,"column":58},"end":{"line":51,"column":5}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":37,"column":47},"end":{"line":37,"column":48}},"loc":{"start":{"line":37,"column":60},"end":{"line":50,"column":9}},"line":37},"12":{"name":"adminLogin","decl":{"start":{"line":52,"column":25},"end":{"line":52,"column":35}},"loc":{"start":{"line":52,"column":58},"end":{"line":77,"column":5}},"line":52},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":47},"end":{"line":53,"column":48}},"loc":{"start":{"line":53,"column":60},"end":{"line":76,"column":9}},"line":53},"14":{"name":"comparePasswords","decl":{"start":{"line":78,"column":31},"end":{"line":78,"column":47}},"loc":{"start":{"line":78,"column":70},"end":{"line":110,"column":5}},"line":78},"15":{"name":"(anonymous_15)","decl":{"start":{"line":79,"column":47},"end":{"line":79,"column":48}},"loc":{"start":{"line":79,"column":60},"end":{"line":109,"column":9}},"line":79},"16":{"name":"(anonymous_16)","decl":{"start":{"line":80,"column":53},"end":{"line":80,"column":54}},"loc":{"start":{"line":80,"column":76},"end":{"line":108,"column":13}},"line":80},"17":{"name":"createOneAdmin","decl":{"start":{"line":111,"column":29},"end":{"line":111,"column":43}},"loc":{"start":{"line":111,"column":66},"end":{"line":138,"column":5}},"line":111},"18":{"name":"(anonymous_18)","decl":{"start":{"line":112,"column":47},"end":{"line":112,"column":48}},"loc":{"start":{"line":112,"column":60},"end":{"line":137,"column":9}},"line":112},"19":{"name":"(anonymous_19)","decl":{"start":{"line":113,"column":56},"end":{"line":113,"column":57}},"loc":{"start":{"line":113,"column":79},"end":{"line":136,"column":13}},"line":113},"20":{"name":"(anonymous_20)","decl":{"start":{"line":114,"column":55},"end":{"line":114,"column":56}},"loc":{"start":{"line":114,"column":68},"end":{"line":135,"column":17}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":62,"column":16},"end":{"line":67,"column":17}},{"start":{"line":62,"column":16},"end":{"line":67,"column":17}}],"line":62},"9":{"loc":{"start":{"line":65,"column":21},"end":{"line":67,"column":17}},"type":"if","locations":[{"start":{"line":65,"column":21},"end":{"line":67,"column":17}},{"start":{"line":65,"column":21},"end":{"line":67,"column":17}}],"line":65},"10":{"loc":{"start":{"line":82,"column":16},"end":{"line":89,"column":17}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":89,"column":17}},{"start":{"line":82,"column":16},"end":{"line":89,"column":17}}],"line":82},"11":{"loc":{"start":{"line":90,"column":16},"end":{"line":101,"column":17}},"type":"if","locations":[{"start":{"line":90,"column":16},"end":{"line":101,"column":17}},{"start":{"line":90,"column":16},"end":{"line":101,"column":17}}],"line":90}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/app/src/models/admin.ts","sources":["/app/src/models/admin.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst saltRounds = 10;\n\nconst adminModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllAdmins: async function showAllAdmins(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_admins();`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one station\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneAdmin: async function getOneAdmin(adminId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_admin(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [adminId]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to manually login with an admin\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    adminLogin: async function adminLogin(adminInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        const email = adminInfo.emailAdress;\n        const password = adminInfo.password;\n\n        try {\n            const sql = `CALL get_admin_by_email(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [email]);\n\n            const admin = dbRes[0][0];\n\n            console.log(admin);\n\n            if (admin.length > 0) {\n                return await adminModel.comparePasswords(res, admin[0], password);\n            } else if (admin.length === 0) {\n                return res.status(400).json({ success: false, msg: 'No user found' });\n            }\n\n            return res.status(400).json({ success: false, msg: 'Missing credentials' });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to verify a hashed password\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    comparePasswords: async function comparePasswords(res: Response, admin: any, password: string) {\n        bcrypt.compare(password, admin.Password, function (err: any, result: any) {\n            console.log(result);\n\n            if (err) {\n                return res.status(500).json({\n                    errors: {\n                        status: 500,\n                        message: 'Could not decrypt password.',\n                    },\n                });\n            }\n\n            if (result) {\n                const payload = { email: admin.emailAdress };\n                const secret = process.env.JWT_SECRET;\n\n                const token = jwt.sign(payload, secret, { expiresIn: '1h' });\n\n                return res.status(201).json({\n                    data: {\n                        info: { admin },\n                        token,\n                        msg: 'Admin logged in',\n                    },\n                });\n            }\n            return res.status(401).json({\n                errors: {\n                    status: 401,\n                    message: 'Password not correct',\n                },\n            });\n        });\n    },\n    /**\n     * Function to create a admin\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneAdmin: async function createOneAdmin(adminInfo: any, res: Response, next: NextFunction) {\n        bcrypt.hash(adminInfo.password, saltRounds, async function (error: any, hash: any) {\n            const db = await database.getDb();\n            try {\n                adminInfo.password = hash;\n\n                const sql = `CALL create_admin(?, ?, ?, ?, ?, ?)`;\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                    adminInfo.firstName,\n                    adminInfo.lastName,\n                    adminInfo.phoneNumber,\n                    adminInfo.emailAdress,\n                    adminInfo.authority,\n                    adminInfo.password,\n                ]);\n\n                return res.status(201).send({ success: true, msg: 'Admin registered' });\n            } catch (error: any) {\n                next(error);\n            } finally {\n                await db.end();\n            }\n        });\n    },\n};\n\nexport default adminModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f19f766b4f9c38539a941922243397f12eb8f80c","contentHash":"422dd3d3d7c4587c728eac14bc368b99922c978344e7fe126d53f328d3a9d92f"},"/app/src/db/db.ts":{"path":"/app/src/db/db.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":17,"column":17},"end":{"line":30,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":28,"column":11}},"19":{"start":{"line":21,"column":12},"end":{"line":26,"column":15}},"20":{"start":{"line":27,"column":12},"end":{"line":27,"column":22}},"21":{"start":{"line":31,"column":0},"end":{"line":31,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"getDb","decl":{"start":{"line":18,"column":20},"end":{"line":18,"column":25}},"loc":{"start":{"line":18,"column":28},"end":{"line":29,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":28,"column":9}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":11,"2":0,"3":11,"4":11,"5":11,"6":0,"7":0,"8":0,"9":0,"10":22,"11":11,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":11,"19":11,"20":11,"21":1},"f":{"0":11,"1":11,"2":0,"3":11,"4":11,"5":0,"6":22,"7":2,"8":11,"9":11},"b":{"0":[1,1,1],"1":[11,0],"2":[11,11],"3":[11,11],"4":[11,11],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/app/src/db/db.ts","sources":["/app/src/db/db.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6DAAmC;AAEnC,uDAA+B;AAE/B,MAAM,QAAQ,GAAG;IAMb,KAAK,EAAE,SAAe,KAAK;;YACvB,IAAI,EAAoB,CAAC;YACzB,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;gBAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;gBACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;gBACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;gBACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;aAC/B,CAAC,CAAC;YAEH,OAAO,EAAE,CAAC;QACd,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,QAAQ,CAAC","sourcesContent":["import mysql from 'mysql2/promise';\n\nimport config from '../config';\n\nconst database = {\n    /**\n     * Main function to connect to database.\n     * @async\n     * @returns void\n     */\n    getDb: async function getDb() {\n        let db: mysql.Connection;\n        db = await mysql.createConnection({\n            host: config.DB_HOST,\n            user: config.DB_USER,\n            database: config.DB_NAME,\n            password: config.DB_PASSWORD,\n        });\n        // console.log('Db', db);\n        return db;\n    },\n};\n\nexport default database;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0f898c0c3b3cf60866a08398667fdc1157b7eb0f","contentHash":"314d0ddcbf672f2aad393b5709ddae4a9710c524ea8ed04671c57f33c99a6ee3"},"/app/src/config.ts":{"path":"/app/src/config.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":80}},"6":{"start":{"line":9,"column":18},"end":{"line":17,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":16,"column":6}},"8":{"start":{"line":18,"column":26},"end":{"line":25,"column":1}},"9":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"10":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":64}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"13":{"start":{"line":26,"column":15},"end":{"line":26,"column":26}},"14":{"start":{"line":27,"column":24},"end":{"line":27,"column":49}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":18},"end":{"line":9,"column":19}},"loc":{"start":{"line":9,"column":24},"end":{"line":17,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":26},"end":{"line":18,"column":27}},"loc":{"start":{"line":18,"column":38},"end":{"line":25,"column":1}},"line":18}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":5,"11":0,"12":1,"13":1,"14":1,"15":1},"f":{"0":2,"1":1,"2":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,5]},"inputSourceMap":{"version":3,"file":"/app/src/config.ts","sources":["/app/src/config.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,oDAA4B;AAG5B,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;AAwB5D,MAAM,SAAS,GAAG,GAAQ,EAAE;IACxB,OAAO;QACH,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;QACpC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;KAC/B,CAAC;AACN,CAAC,CAAC;AAQF,MAAM,iBAAiB,GAAG,CAAC,MAAW,EAAU,EAAE;IAC9C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAC/C,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,gBAAgB,CAAC,CAAC;SACvD;KACJ;IACD,OAAO,MAAgB,CAAC;AAC5B,CAAC,CAAC;AAEF,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;AAE3B,MAAM,eAAe,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAElD,kBAAe,eAAe,CAAC","sourcesContent":["import path from 'path';\nimport dotenv from 'dotenv';\n\n// Parsing the env file.\ndotenv.config({ path: path.resolve(__filename, './.env') });\n\n// Interface to load env variables\n// Note these variables can possibly be undefined\n// as someone could skip these varibales or not setup a .env file at all\n\ninterface ENV {\n    DB_USER: string | undefined;\n    DB_PASSWORD: string | undefined;\n    DB_NAME: string | undefined;\n    DB_PORT: number | undefined;\n    DB_HOST: string | undefined;\n}\n\ninterface Config {\n    DB_USER: string;\n    DB_PASSWORD: string;\n    DB_NAME: string;\n    DB_PORT: number;\n    DB_HOST: string;\n}\n\n// Loading process.env as ENV interface\n\nconst getConfig = (): ENV => {\n    return {\n        DB_USER: process.env.DB_USER,\n        DB_PASSWORD: process.env.DB_PASSWORD,\n        DB_NAME: process.env.DB_NAME,\n        DB_PORT: Number(process.env.PORT),\n        DB_HOST: process.env.DB_HOST,\n    };\n};\n\n// Throwing an Error if any field was undefined we don't\n// want our app to run if it can't connect to DB and ensure\n// that these fields are accessible. If all is good return\n// it as Config which just removes the undefined from our type\n// definition.\n\nconst getSanitzedConfig = (config: ENV): Config => {\n    for (const [key, value] of Object.entries(config)) {\n        if (value === undefined) {\n            throw new Error(`Missing key ${key} in config.env`);\n        }\n    }\n    return config as Config;\n};\n\nconst config = getConfig();\n\nconst sanitizedConfig = getSanitzedConfig(config);\n\nexport default sanitizedConfig;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ee3a045c183180a9c9dba9a26a3f306ad26c259d","contentHash":"145104ae464d3f653e30c0c53b710367833a7167de191da626a0947ff462c7ea"},"/app/src/models/apiKeys.ts":{"path":"/app/src/models/apiKeys.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":13},"end":{"line":17,"column":49}},"18":{"start":{"line":18,"column":20},"end":{"line":106,"column":1}},"19":{"start":{"line":20,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"21":{"start":{"line":22,"column":16},"end":{"line":22,"column":30}},"22":{"start":{"line":24,"column":27},"end":{"line":24,"column":41}},"23":{"start":{"line":25,"column":28},"end":{"line":25,"column":76}},"24":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"25":{"start":{"line":27,"column":16},"end":{"line":27,"column":30}},"26":{"start":{"line":29,"column":12},"end":{"line":29,"column":83}},"27":{"start":{"line":33,"column":8},"end":{"line":49,"column":11}},"28":{"start":{"line":34,"column":23},"end":{"line":34,"column":49}},"29":{"start":{"line":35,"column":12},"end":{"line":48,"column":13}},"30":{"start":{"line":36,"column":28},"end":{"line":36,"column":52}},"31":{"start":{"line":37,"column":30},"end":{"line":37,"column":59}},"32":{"start":{"line":38,"column":16},"end":{"line":40,"column":17}},"33":{"start":{"line":39,"column":20},"end":{"line":39,"column":103}},"34":{"start":{"line":41,"column":16},"end":{"line":41,"column":35}},"35":{"start":{"line":44,"column":16},"end":{"line":44,"column":28}},"36":{"start":{"line":47,"column":16},"end":{"line":47,"column":31}},"37":{"start":{"line":52,"column":8},"end":{"line":65,"column":11}},"38":{"start":{"line":53,"column":23},"end":{"line":53,"column":49}},"39":{"start":{"line":54,"column":12},"end":{"line":64,"column":13}},"40":{"start":{"line":55,"column":28},"end":{"line":55,"column":51}},"41":{"start":{"line":56,"column":30},"end":{"line":56,"column":49}},"42":{"start":{"line":57,"column":16},"end":{"line":57,"column":82}},"43":{"start":{"line":60,"column":16},"end":{"line":60,"column":28}},"44":{"start":{"line":63,"column":16},"end":{"line":63,"column":31}},"45":{"start":{"line":68,"column":8},"end":{"line":88,"column":11}},"46":{"start":{"line":69,"column":23},"end":{"line":69,"column":49}},"47":{"start":{"line":70,"column":27},"end":{"line":70,"column":43}},"48":{"start":{"line":71,"column":12},"end":{"line":87,"column":13}},"49":{"start":{"line":72,"column":28},"end":{"line":72,"column":54}},"50":{"start":{"line":73,"column":30},"end":{"line":77,"column":18}},"51":{"start":{"line":78,"column":16},"end":{"line":80,"column":109}},"52":{"start":{"line":83,"column":16},"end":{"line":83,"column":28}},"53":{"start":{"line":86,"column":16},"end":{"line":86,"column":31}},"54":{"start":{"line":91,"column":8},"end":{"line":104,"column":11}},"55":{"start":{"line":92,"column":23},"end":{"line":92,"column":49}},"56":{"start":{"line":93,"column":12},"end":{"line":103,"column":13}},"57":{"start":{"line":94,"column":28},"end":{"line":94,"column":54}},"58":{"start":{"line":95,"column":30},"end":{"line":95,"column":55}},"59":{"start":{"line":96,"column":16},"end":{"line":96,"column":106}},"60":{"start":{"line":99,"column":16},"end":{"line":99,"column":28}},"61":{"start":{"line":102,"column":16},"end":{"line":102,"column":31}},"62":{"start":{"line":107,"column":0},"end":{"line":107,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"checkAPIKey","decl":{"start":{"line":19,"column":26},"end":{"line":19,"column":37}},"loc":{"start":{"line":19,"column":54},"end":{"line":31,"column":5}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":47},"end":{"line":20,"column":48}},"loc":{"start":{"line":20,"column":60},"end":{"line":30,"column":9}},"line":20},"10":{"name":"getKeyByKey","decl":{"start":{"line":32,"column":26},"end":{"line":32,"column":37}},"loc":{"start":{"line":32,"column":57},"end":{"line":50,"column":5}},"line":32},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":47},"end":{"line":33,"column":48}},"loc":{"start":{"line":33,"column":60},"end":{"line":49,"column":9}},"line":33},"12":{"name":"getKeyOwners","decl":{"start":{"line":51,"column":27},"end":{"line":51,"column":39}},"loc":{"start":{"line":51,"column":51},"end":{"line":66,"column":5}},"line":51},"13":{"name":"(anonymous_13)","decl":{"start":{"line":52,"column":47},"end":{"line":52,"column":48}},"loc":{"start":{"line":52,"column":60},"end":{"line":65,"column":9}},"line":52},"14":{"name":"createOneApiKey","decl":{"start":{"line":67,"column":30},"end":{"line":67,"column":45}},"loc":{"start":{"line":67,"column":69},"end":{"line":89,"column":5}},"line":67},"15":{"name":"(anonymous_15)","decl":{"start":{"line":68,"column":47},"end":{"line":68,"column":48}},"loc":{"start":{"line":68,"column":60},"end":{"line":88,"column":9}},"line":68},"16":{"name":"deleteKeyByid","decl":{"start":{"line":90,"column":28},"end":{"line":90,"column":41}},"loc":{"start":{"line":90,"column":57},"end":{"line":105,"column":5}},"line":90},"17":{"name":"(anonymous_17)","decl":{"start":{"line":91,"column":47},"end":{"line":91,"column":48}},"loc":{"start":{"line":91,"column":60},"end":{"line":104,"column":9}},"line":91}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21},"9":{"loc":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},{"start":{"line":26,"column":12},"end":{"line":28,"column":13}}],"line":26},"10":{"loc":{"start":{"line":26,"column":16},"end":{"line":26,"column":75}},"type":"binary-expr","locations":[{"start":{"line":26,"column":16},"end":{"line":26,"column":37}},{"start":{"line":26,"column":41},"end":{"line":26,"column":75}}],"line":26},"11":{"loc":{"start":{"line":38,"column":16},"end":{"line":40,"column":17}},"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":40,"column":17}},{"start":{"line":38,"column":16},"end":{"line":40,"column":17}}],"line":38}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"inputSourceMap":{"version":3,"file":"/app/src/models/apiKeys.ts","sources":["/app/src/models/apiKeys.ts"],"names":[],"mappings":"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","sourcesContent":["import { FieldPacket, RowDataPacket } from 'mysql2/promise';\nimport { Request, Response, NextFunction } from 'express';\nimport { v4 as uuid } from 'uuid';\n\nimport { CustomError } from '../middleware/errorHandler';\nimport database from '../db/db';\n\nconst apiKeyModel = {\n    /**\n     *\n     * Function to that an APIKey is valid\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    checkAPIKey: async function checkAPIKey(req: Request, res: Response, next: NextFunction) {\n        if (req.path === '/apiKey') {\n            return next();\n        }\n\n        const apiKey: any = req.get('key');\n\n        const keyInDb: any = await apiKeyModel.getKeyByKey(apiKey, res, next);\n        if (keyInDb !== undefined && keyInDb[0].hasOwnProperty('Email')) {\n            return next();\n        }\n\n        return next(new CustomError(false, 'No valid API Key'));\n    },\n    /**\n     * Function to get a key with a key\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getKeyByKey: async function getKeyByKey(apiKey: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        try {\n            const sql = `CALL get_key_by_key(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [apiKey]);\n\n            if (dbRes[0][0].length == 0) {\n                return next(new CustomError(false, 'No valid API Key in database'));\n            }\n            return dbRes[0][0];\n            // return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to owner data\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getKeyOwners: async function getKeyOwners(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_key_owners()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to generate a key for a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneApiKey: async function createOneApiKey(apiKeyInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        const apiKey = uuid();\n\n        try {\n            const sql = `CALL create_key(?, ?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                apiKeyInfo.emailAdress,\n                apiKeyInfo.organization,\n                apiKey,\n            ]);\n            return res\n                .status(200)\n                .send({ success: true, msg: `Api key created ${apiKey} for ${apiKeyInfo.emailAdress}` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get a key with a key\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteKeyById: async function deleteKeyByid(id: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_key_by_id(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [id]);\n\n            return res.status(200).send({ success: true, msg: `Key with id ${id} has been deleted` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default apiKeyModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"667e08d1ed0fd61ddb1baf7144b4fbd967ef77ae","contentHash":"eeba955fd632c7799c5cbc106005b590c8f2b55da00ff8eb70ba8ac6bc5d1a76"},"/app/src/middleware/errorHandler.ts":{"path":"/app/src/middleware/errorHandler.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":81}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":19}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":31}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"6":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":47}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":65}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":63}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":30},"end":{"line":9,"column":5}},"line":5},"1":{"name":"errorHandler","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":21}},"loc":{"start":{"line":12,"column":45},"end":{"line":17,"column":1}},"line":12},"2":{"name":"invalidPathHandler","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":27}},"loc":{"start":{"line":19,"column":45},"end":{"line":21,"column":1}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},{"start":{"line":13,"column":4},"end":{"line":15,"column":5}}],"line":13}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/app/src/middleware/errorHandler.ts","sources":["/app/src/middleware/errorHandler.ts"],"names":[],"mappings":";;;AAMA,MAAa,WAAY,SAAQ,KAAK;IAIlC,YAAY,OAAgB,EAAE,GAAW;QACrC,KAAK,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;CACJ;AATD,kCASC;AAUD,SAAgB,YAAY,CAAC,KAAU,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB;IAIpF,IAAI,KAAK,YAAY,WAAW,EAAE;QAC9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;KAC1C;IACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;AACjE,CAAC;AARD,oCAQC;AAWD,SAAgB,kBAAkB,CAAC,GAAY,EAAE,GAAa,EAAE,KAAmB;IAC/E,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;AAC/D,CAAC;AAFD,gDAEC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\n\n/**\n * Represents an error\n * @constructor\n */\nexport class CustomError extends Error {\n    success: boolean;\n    msg: string;\n\n    constructor(success: boolean, msg: string) {\n        super(msg);\n        this.success = success;\n        this.msg = msg;\n    }\n}\n/**\n * Error handling Middleware function for logging 500 error message\n *\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Promise}\n */\nexport function errorHandler(error: any, req: Request, res: Response, next: NextFunction) {\n    // console.log('ERRORHANDLER');\n    // console.log(error);\n\n    if (error instanceof CustomError) {\n        return res.status(400).json({ error });\n    }\n    return res.status(500).json({ status: 500, msg: { error } });\n}\n\n/**\n * Fallback Middleware function for returning 404 error for undefined paths\n *\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nexport function invalidPathHandler(req: Request, res: Response, _next: NextFunction): void {\n    res.status(404).send({ error: true, msg: 'invalid path' });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1d5a0cf913028b936e00768ead9d1c5460f8cd21","contentHash":"33e636c708c8432482a88ef16ad5e78da785bc6a8da276f7d5abbb17d17ec442"},"/app/src/models/bike.ts":{"path":"/app/src/models/bike.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":18},"end":{"line":139,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":47}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":82}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":51,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":50,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":61}},"29":{"start":{"line":38,"column":30},"end":{"line":42,"column":18}},"30":{"start":{"line":43,"column":16},"end":{"line":43,"column":75}},"31":{"start":{"line":46,"column":16},"end":{"line":46,"column":28}},"32":{"start":{"line":49,"column":16},"end":{"line":49,"column":31}},"33":{"start":{"line":54,"column":8},"end":{"line":67,"column":11}},"34":{"start":{"line":55,"column":23},"end":{"line":55,"column":49}},"35":{"start":{"line":56,"column":12},"end":{"line":66,"column":13}},"36":{"start":{"line":57,"column":28},"end":{"line":57,"column":64}},"37":{"start":{"line":58,"column":30},"end":{"line":58,"column":49}},"38":{"start":{"line":59,"column":16},"end":{"line":59,"column":75}},"39":{"start":{"line":62,"column":16},"end":{"line":62,"column":28}},"40":{"start":{"line":65,"column":16},"end":{"line":65,"column":31}},"41":{"start":{"line":70,"column":8},"end":{"line":83,"column":11}},"42":{"start":{"line":71,"column":23},"end":{"line":71,"column":49}},"43":{"start":{"line":72,"column":12},"end":{"line":82,"column":13}},"44":{"start":{"line":73,"column":28},"end":{"line":73,"column":68}},"45":{"start":{"line":74,"column":30},"end":{"line":74,"column":62}},"46":{"start":{"line":75,"column":16},"end":{"line":75,"column":75}},"47":{"start":{"line":78,"column":16},"end":{"line":78,"column":28}},"48":{"start":{"line":81,"column":16},"end":{"line":81,"column":31}},"49":{"start":{"line":86,"column":8},"end":{"line":99,"column":11}},"50":{"start":{"line":87,"column":23},"end":{"line":87,"column":49}},"51":{"start":{"line":88,"column":12},"end":{"line":98,"column":13}},"52":{"start":{"line":89,"column":28},"end":{"line":89,"column":46}},"53":{"start":{"line":90,"column":30},"end":{"line":90,"column":59}},"54":{"start":{"line":91,"column":16},"end":{"line":91,"column":75}},"55":{"start":{"line":94,"column":16},"end":{"line":94,"column":28}},"56":{"start":{"line":97,"column":16},"end":{"line":97,"column":31}},"57":{"start":{"line":102,"column":8},"end":{"line":115,"column":11}},"58":{"start":{"line":103,"column":23},"end":{"line":103,"column":49}},"59":{"start":{"line":104,"column":12},"end":{"line":114,"column":13}},"60":{"start":{"line":105,"column":28},"end":{"line":105,"column":55}},"61":{"start":{"line":106,"column":30},"end":{"line":106,"column":57}},"62":{"start":{"line":107,"column":16},"end":{"line":107,"column":82}},"63":{"start":{"line":110,"column":16},"end":{"line":110,"column":28}},"64":{"start":{"line":113,"column":16},"end":{"line":113,"column":31}},"65":{"start":{"line":118,"column":8},"end":{"line":137,"column":11}},"66":{"start":{"line":119,"column":23},"end":{"line":119,"column":49}},"67":{"start":{"line":120,"column":12},"end":{"line":136,"column":13}},"68":{"start":{"line":121,"column":28},"end":{"line":121,"column":61}},"69":{"start":{"line":122,"column":30},"end":{"line":128,"column":18}},"70":{"start":{"line":129,"column":16},"end":{"line":129,"column":113}},"71":{"start":{"line":132,"column":16},"end":{"line":132,"column":50}},"72":{"start":{"line":135,"column":16},"end":{"line":135,"column":31}},"73":{"start":{"line":140,"column":0},"end":{"line":140,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllBikes","decl":{"start":{"line":17,"column":27},"end":{"line":17,"column":39}},"loc":{"start":{"line":17,"column":51},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"getBikeRadius","decl":{"start":{"line":33,"column":28},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":65},"end":{"line":52,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":51,"column":9}},"line":34},"12":{"name":"getAllChargingBikes","decl":{"start":{"line":53,"column":34},"end":{"line":53,"column":53}},"loc":{"start":{"line":53,"column":65},"end":{"line":68,"column":5}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":54,"column":47},"end":{"line":54,"column":48}},"loc":{"start":{"line":54,"column":60},"end":{"line":67,"column":9}},"line":54},"14":{"name":"getChargingBikesAtStation","decl":{"start":{"line":69,"column":40},"end":{"line":69,"column":65}},"loc":{"start":{"line":69,"column":88},"end":{"line":84,"column":5}},"line":69},"15":{"name":"(anonymous_15)","decl":{"start":{"line":70,"column":47},"end":{"line":70,"column":48}},"loc":{"start":{"line":70,"column":60},"end":{"line":83,"column":9}},"line":70},"16":{"name":"getOneBike","decl":{"start":{"line":85,"column":25},"end":{"line":85,"column":35}},"loc":{"start":{"line":85,"column":55},"end":{"line":100,"column":5}},"line":85},"17":{"name":"(anonymous_17)","decl":{"start":{"line":86,"column":47},"end":{"line":86,"column":48}},"loc":{"start":{"line":86,"column":60},"end":{"line":99,"column":9}},"line":86},"18":{"name":"getBikesByCity","decl":{"start":{"line":101,"column":29},"end":{"line":101,"column":43}},"loc":{"start":{"line":101,"column":61},"end":{"line":116,"column":5}},"line":101},"19":{"name":"(anonymous_19)","decl":{"start":{"line":102,"column":47},"end":{"line":102,"column":48}},"loc":{"start":{"line":102,"column":60},"end":{"line":115,"column":9}},"line":102},"20":{"name":"updateOneBike","decl":{"start":{"line":117,"column":28},"end":{"line":117,"column":41}},"loc":{"start":{"line":117,"column":63},"end":{"line":138,"column":5}},"line":117},"21":{"name":"(anonymous_21)","decl":{"start":{"line":118,"column":47},"end":{"line":118,"column":48}},"loc":{"start":{"line":118,"column":60},"end":{"line":137,"column":9}},"line":118}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/app/src/models/bike.ts","sources":["/app/src/models/bike.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response, NextFunction } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst bikeModel = {\n    /**\n     * Function to show all bikes\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllBikes: async function showAllBikes(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikes();`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get bikes within a radius\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getBikeRadius: async function getBikeRadius(radiusInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikes_in_radius(?,?,?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                radiusInfo.latitude,\n                radiusInfo.longitude,\n                radiusInfo.radius,\n            ]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get all charging bikes\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getAllChargingBikes: async function getAllChargingBikes(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_charging_bikes_location()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get all charging bikes at specific station\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getChargingBikesAtStation: async function getChargingBikesAtStation(\n        stationId: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_charging_bikes_by_location(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [stationId]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one bike by id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneBike: async function getOneBike(bikeId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bike(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [bikeId]);\n\n            res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get bikes within a city\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getBikesByCity: async function getBikesByCity(city: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikes_by_city(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [city]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a bike\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateOneBike: async function updateOneBike(bikeInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_bike(?, ?, ?, ?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                bikeInfo.bikeId,\n                bikeInfo.position,\n                bikeInfo.battery,\n                bikeInfo.status,\n                bikeInfo.speed,\n            ]);\n\n            res.status(200).send({ success: true, msg: `Bike with id ${bikeInfo.bikeId} has been updated` });\n        } catch (error: any) {\n            next(res.status(404).send(error));\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default bikeModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6b34c209a7a40d4d1ab3b88ef232a484b5bb15df","contentHash":"eba9fdc45e2b21bb8063c8210d7ee541568b04d80031f6fa280b903451ec9217"},"/app/src/models/chargers.ts":{"path":"/app/src/models/chargers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":21},"end":{"line":72,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":20,"column":23},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":22,"column":28},"end":{"line":22,"column":50}},"22":{"start":{"line":23,"column":30},"end":{"line":23,"column":49}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":82}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":28}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},"26":{"start":{"line":35,"column":8},"end":{"line":48,"column":11}},"27":{"start":{"line":36,"column":23},"end":{"line":36,"column":49}},"28":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"29":{"start":{"line":38,"column":28},"end":{"line":38,"column":49}},"30":{"start":{"line":39,"column":30},"end":{"line":39,"column":62}},"31":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"34":{"start":{"line":51,"column":8},"end":{"line":70,"column":11}},"35":{"start":{"line":52,"column":23},"end":{"line":52,"column":49}},"36":{"start":{"line":53,"column":12},"end":{"line":69,"column":13}},"37":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"38":{"start":{"line":55,"column":20},"end":{"line":55,"column":83}},"39":{"start":{"line":57,"column":28},"end":{"line":57,"column":62}},"40":{"start":{"line":58,"column":30},"end":{"line":58,"column":87}},"41":{"start":{"line":59,"column":16},"end":{"line":62,"column":19}},"42":{"start":{"line":65,"column":16},"end":{"line":65,"column":28}},"43":{"start":{"line":68,"column":16},"end":{"line":68,"column":31}},"44":{"start":{"line":73,"column":0},"end":{"line":73,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllChargers","decl":{"start":{"line":18,"column":30},"end":{"line":18,"column":45}},"loc":{"start":{"line":18,"column":57},"end":{"line":33,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":32,"column":9}},"line":19},"10":{"name":"getOneCharger","decl":{"start":{"line":34,"column":28},"end":{"line":34,"column":41}},"loc":{"start":{"line":34,"column":64},"end":{"line":49,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":47},"end":{"line":35,"column":48}},"loc":{"start":{"line":35,"column":60},"end":{"line":48,"column":9}},"line":35},"12":{"name":"updateStatus","decl":{"start":{"line":50,"column":27},"end":{"line":50,"column":39}},"loc":{"start":{"line":50,"column":64},"end":{"line":71,"column":5}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":70,"column":9}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},"type":"if","locations":[{"start":{"line":54,"column":16},"end":{"line":56,"column":17}},{"start":{"line":54,"column":16},"end":{"line":56,"column":17}}],"line":54}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/app/src/models/chargers.ts","sources":["/app/src/models/chargers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,kDAAgC;AAChC,6DAAyD;AAEzD,MAAM,YAAY,GAAG;IAMjB,eAAe,EAAE,SAAe,eAAe,CAAC,GAAa,EAAE,IAAkB;;YAC7E,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,sBAAsB,CAAC;gBACnC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,aAAa,EAAE,SAAe,aAAa,CAAC,SAAiB,EAAE,GAAa,EAAE,IAAkB;;YAC5F,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAElC,IAAI;gBACA,MAAM,GAAG,GAAG,qBAAqB,CAAC;gBAElC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEjF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,YAAY,EAAE,SAAe,YAAY,CAAC,WAAgB,EAAE,GAAa,EAAE,IAAkB;;YACzF,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;oBACrB,MAAM,IAAI,0BAAW,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;iBACnD;gBACD,MAAM,GAAG,GAAG,kCAAkC,CAAC;gBAC/C,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE1G,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACxB,OAAO,EAAE,IAAI;oBACb,GAAG,EAAE,mBAAmB,WAAW,CAAC,EAAE,0BAA0B,WAAW,CAAC,MAAM,GAAG;iBACxF,CAAC,CAAC;aACN;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst chargerModel = {\n    /**\n     * Function to show all chargers\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllChargers: async function showAllChargers(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_chargers();`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one charger\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneCharger: async function getOneCharger(chargerId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        try {\n            const sql = `CALL get_charger(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [chargerId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update status of one charger\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateStatus: async function updateStatus(chargerInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            if (!chargerInfo.status) {\n                throw new CustomError(false, 'No status given');\n            }\n            const sql = `CALL update_charger_status(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [chargerInfo.id, chargerInfo.status]);\n\n            return res.status(200).send({\n                success: true,\n                msg: `Charger with id ${chargerInfo.id} has changed status to ${chargerInfo.status} `,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default chargerModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"28af49d4f04be871ca4a23f2ab40eccd8c0cb899","contentHash":"610b69a3896f604d57a3d759dfbf03cabeaa71dfdb84be18693f102d542fe0c9"},"/app/src/models/creditcard.ts":{"path":"/app/src/models/creditcard.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":34}},"17":{"start":{"line":17,"column":19},"end":{"line":17,"column":21}},"18":{"start":{"line":18,"column":24},"end":{"line":98,"column":1}},"19":{"start":{"line":20,"column":8},"end":{"line":33,"column":11}},"20":{"start":{"line":21,"column":23},"end":{"line":21,"column":49}},"21":{"start":{"line":22,"column":12},"end":{"line":32,"column":13}},"22":{"start":{"line":23,"column":28},"end":{"line":23,"column":46}},"23":{"start":{"line":24,"column":30},"end":{"line":24,"column":59}},"24":{"start":{"line":25,"column":16},"end":{"line":25,"column":82}},"25":{"start":{"line":28,"column":16},"end":{"line":28,"column":28}},"26":{"start":{"line":31,"column":16},"end":{"line":31,"column":31}},"27":{"start":{"line":36,"column":8},"end":{"line":49,"column":11}},"28":{"start":{"line":37,"column":23},"end":{"line":37,"column":49}},"29":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"30":{"start":{"line":39,"column":28},"end":{"line":39,"column":55}},"31":{"start":{"line":40,"column":30},"end":{"line":40,"column":59}},"32":{"start":{"line":41,"column":16},"end":{"line":41,"column":82}},"33":{"start":{"line":44,"column":16},"end":{"line":44,"column":28}},"34":{"start":{"line":47,"column":16},"end":{"line":47,"column":31}},"35":{"start":{"line":52,"column":8},"end":{"line":80,"column":11}},"36":{"start":{"line":53,"column":12},"end":{"line":79,"column":15}},"37":{"start":{"line":54,"column":16},"end":{"line":78,"column":19}},"38":{"start":{"line":55,"column":31},"end":{"line":55,"column":57}},"39":{"start":{"line":56,"column":20},"end":{"line":56,"column":103}},"40":{"start":{"line":57,"column":20},"end":{"line":77,"column":21}},"41":{"start":{"line":58,"column":24},"end":{"line":58,"column":50}},"42":{"start":{"line":59,"column":24},"end":{"line":59,"column":56}},"43":{"start":{"line":60,"column":24},"end":{"line":60,"column":55}},"44":{"start":{"line":61,"column":41},"end":{"line":61,"column":83}},"45":{"start":{"line":62,"column":38},"end":{"line":69,"column":26}},"46":{"start":{"line":70,"column":24},"end":{"line":70,"column":92}},"47":{"start":{"line":73,"column":24},"end":{"line":73,"column":36}},"48":{"start":{"line":76,"column":24},"end":{"line":76,"column":39}},"49":{"start":{"line":83,"column":8},"end":{"line":96,"column":11}},"50":{"start":{"line":84,"column":23},"end":{"line":84,"column":49}},"51":{"start":{"line":85,"column":12},"end":{"line":95,"column":13}},"52":{"start":{"line":86,"column":28},"end":{"line":86,"column":49}},"53":{"start":{"line":87,"column":30},"end":{"line":87,"column":59}},"54":{"start":{"line":88,"column":16},"end":{"line":88,"column":111}},"55":{"start":{"line":91,"column":16},"end":{"line":91,"column":28}},"56":{"start":{"line":94,"column":16},"end":{"line":94,"column":31}},"57":{"start":{"line":99,"column":0},"end":{"line":99,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"getCard","decl":{"start":{"line":19,"column":22},"end":{"line":19,"column":29}},"loc":{"start":{"line":19,"column":49},"end":{"line":34,"column":5}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":47},"end":{"line":20,"column":48}},"loc":{"start":{"line":20,"column":60},"end":{"line":33,"column":9}},"line":20},"10":{"name":"getCardsByUser","decl":{"start":{"line":35,"column":29},"end":{"line":35,"column":43}},"loc":{"start":{"line":35,"column":63},"end":{"line":50,"column":5}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":36,"column":47},"end":{"line":36,"column":48}},"loc":{"start":{"line":36,"column":60},"end":{"line":49,"column":9}},"line":36},"12":{"name":"saveCreditCard","decl":{"start":{"line":51,"column":29},"end":{"line":51,"column":43}},"loc":{"start":{"line":51,"column":79},"end":{"line":81,"column":5}},"line":51},"13":{"name":"(anonymous_13)","decl":{"start":{"line":52,"column":47},"end":{"line":52,"column":48}},"loc":{"start":{"line":52,"column":60},"end":{"line":80,"column":9}},"line":52},"14":{"name":"(anonymous_14)","decl":{"start":{"line":53,"column":56},"end":{"line":53,"column":57}},"loc":{"start":{"line":53,"column":79},"end":{"line":79,"column":13}},"line":53},"15":{"name":"(anonymous_15)","decl":{"start":{"line":54,"column":55},"end":{"line":54,"column":56}},"loc":{"start":{"line":54,"column":68},"end":{"line":78,"column":17}},"line":54},"16":{"name":"deleteCard","decl":{"start":{"line":82,"column":25},"end":{"line":82,"column":35}},"loc":{"start":{"line":82,"column":55},"end":{"line":97,"column":5}},"line":82},"17":{"name":"(anonymous_17)","decl":{"start":{"line":83,"column":47},"end":{"line":83,"column":48}},"loc":{"start":{"line":83,"column":60},"end":{"line":96,"column":9}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/app/src/models/creditcard.ts","sources":["/app/src/models/creditcard.ts"],"names":[],"mappings":"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","sourcesContent":["import { FieldPacket, RowDataPacket } from 'mysql2/promise';\nimport { Response, NextFunction } from 'express';\n\nimport database from '../db/db';\n\nconst bcrypt = require('bcryptjs');\nconst saltRounds = 10;\n\nconst creditCardModel = {\n    /**\n     * Function to get one credit card by its id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getCard: async function getCard(cardId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_card(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [cardId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get all cards registered by a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getCardsByUser: async function getCardsByUser(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_cards_by_user(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to save a credit card in the database\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    saveCreditCard: async function saveCreditCard(\n        userId: string,\n        creditCardInfo: any,\n        res: Response,\n        next: NextFunction\n    ) {\n        bcrypt.hash(creditCardInfo.pan, saltRounds, async function (error: any, hash: any) {\n            const db = await database.getDb();\n            creditCardInfo.truncpan = creditCardInfo.pan.substr(creditCardInfo.pan.length - 4);\n            try {\n                creditCardInfo.pan = hash;\n                creditCardInfo.firstname = hash;\n                creditCardInfo.lastname = hash;\n\n                const sql_user = `CALL create_creditcard(?, ?, ?, ?, ?, ?)`;\n\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql_user, [\n                    userId,\n                    creditCardInfo.pan,\n                    creditCardInfo.expiry,\n                    creditCardInfo.firstname,\n                    creditCardInfo.lastname,\n                    creditCardInfo.truncpan,\n                ]);\n\n                return res.status(200).send({ success: true, msg: creditCardInfo });\n            } catch (error: any) {\n                next(error);\n            } finally {\n                await db.end();\n            }\n        });\n    },\n    /**\n     * Function to delete one credit card by its id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteCard: async function deleteCard(cardId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_card(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [cardId]);\n\n            return res.status(200).send({ success: true, msg: `Card with id ${cardId} has been deleted` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default creditCardModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"37c65b900f17994678ca338b08c7d6a4018d33e2","contentHash":"3611605efce050ac269e7512d5d30c14c2e60ada5937870f1a23521b3990da8e"},"/app/src/models/geofence.ts":{"path":"/app/src/models/geofence.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":22},"end":{"line":158,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":20,"column":23},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":22,"column":28},"end":{"line":22,"column":51}},"22":{"start":{"line":23,"column":30},"end":{"line":23,"column":49}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":82}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":28}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},"26":{"start":{"line":35,"column":8},"end":{"line":48,"column":11}},"27":{"start":{"line":36,"column":23},"end":{"line":36,"column":49}},"28":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"29":{"start":{"line":38,"column":28},"end":{"line":38,"column":50}},"30":{"start":{"line":39,"column":30},"end":{"line":39,"column":63}},"31":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"34":{"start":{"line":51,"column":8},"end":{"line":71,"column":11}},"35":{"start":{"line":52,"column":23},"end":{"line":52,"column":49}},"36":{"start":{"line":53,"column":12},"end":{"line":70,"column":13}},"37":{"start":{"line":54,"column":28},"end":{"line":54,"column":59}},"38":{"start":{"line":55,"column":30},"end":{"line":59,"column":18}},"39":{"start":{"line":60,"column":16},"end":{"line":63,"column":19}},"40":{"start":{"line":66,"column":16},"end":{"line":66,"column":28}},"41":{"start":{"line":69,"column":16},"end":{"line":69,"column":31}},"42":{"start":{"line":74,"column":8},"end":{"line":93,"column":11}},"43":{"start":{"line":75,"column":23},"end":{"line":75,"column":49}},"44":{"start":{"line":76,"column":12},"end":{"line":92,"column":13}},"45":{"start":{"line":77,"column":28},"end":{"line":77,"column":68}},"46":{"start":{"line":78,"column":30},"end":{"line":81,"column":18}},"47":{"start":{"line":82,"column":16},"end":{"line":85,"column":19}},"48":{"start":{"line":88,"column":16},"end":{"line":88,"column":50}},"49":{"start":{"line":91,"column":16},"end":{"line":91,"column":31}},"50":{"start":{"line":96,"column":8},"end":{"line":117,"column":11}},"51":{"start":{"line":97,"column":23},"end":{"line":97,"column":49}},"52":{"start":{"line":98,"column":12},"end":{"line":116,"column":13}},"53":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"54":{"start":{"line":100,"column":20},"end":{"line":100,"column":81}},"55":{"start":{"line":102,"column":28},"end":{"line":102,"column":61}},"56":{"start":{"line":103,"column":30},"end":{"line":106,"column":18}},"57":{"start":{"line":107,"column":16},"end":{"line":109,"column":121}},"58":{"start":{"line":112,"column":16},"end":{"line":112,"column":28}},"59":{"start":{"line":115,"column":16},"end":{"line":115,"column":31}},"60":{"start":{"line":120,"column":8},"end":{"line":138,"column":11}},"61":{"start":{"line":121,"column":23},"end":{"line":121,"column":49}},"62":{"start":{"line":122,"column":12},"end":{"line":137,"column":13}},"63":{"start":{"line":123,"column":28},"end":{"line":123,"column":61}},"64":{"start":{"line":124,"column":30},"end":{"line":127,"column":18}},"65":{"start":{"line":128,"column":16},"end":{"line":130,"column":122}},"66":{"start":{"line":133,"column":16},"end":{"line":133,"column":28}},"67":{"start":{"line":136,"column":16},"end":{"line":136,"column":31}},"68":{"start":{"line":141,"column":8},"end":{"line":156,"column":11}},"69":{"start":{"line":142,"column":23},"end":{"line":142,"column":49}},"70":{"start":{"line":143,"column":12},"end":{"line":155,"column":13}},"71":{"start":{"line":144,"column":28},"end":{"line":144,"column":53}},"72":{"start":{"line":145,"column":30},"end":{"line":145,"column":63}},"73":{"start":{"line":146,"column":16},"end":{"line":148,"column":111}},"74":{"start":{"line":151,"column":16},"end":{"line":151,"column":28}},"75":{"start":{"line":154,"column":16},"end":{"line":154,"column":31}},"76":{"start":{"line":159,"column":0},"end":{"line":159,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllGeofences","decl":{"start":{"line":18,"column":31},"end":{"line":18,"column":47}},"loc":{"start":{"line":18,"column":59},"end":{"line":33,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":32,"column":9}},"line":19},"10":{"name":"getOneGeofence","decl":{"start":{"line":34,"column":29},"end":{"line":34,"column":43}},"loc":{"start":{"line":34,"column":67},"end":{"line":49,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":47},"end":{"line":35,"column":48}},"loc":{"start":{"line":35,"column":60},"end":{"line":48,"column":9}},"line":35},"12":{"name":"createOneGeofence","decl":{"start":{"line":50,"column":32},"end":{"line":50,"column":49}},"loc":{"start":{"line":50,"column":75},"end":{"line":72,"column":5}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":71,"column":9}},"line":51},"14":{"name":"updateCoordinates","decl":{"start":{"line":73,"column":32},"end":{"line":73,"column":49}},"loc":{"start":{"line":73,"column":75},"end":{"line":94,"column":5}},"line":73},"15":{"name":"(anonymous_15)","decl":{"start":{"line":74,"column":47},"end":{"line":74,"column":48}},"loc":{"start":{"line":74,"column":60},"end":{"line":93,"column":9}},"line":74},"16":{"name":"updateInfo","decl":{"start":{"line":95,"column":25},"end":{"line":95,"column":35}},"loc":{"start":{"line":95,"column":61},"end":{"line":118,"column":5}},"line":95},"17":{"name":"(anonymous_17)","decl":{"start":{"line":96,"column":47},"end":{"line":96,"column":48}},"loc":{"start":{"line":96,"column":60},"end":{"line":117,"column":9}},"line":96},"18":{"name":"updateType","decl":{"start":{"line":119,"column":25},"end":{"line":119,"column":35}},"loc":{"start":{"line":119,"column":61},"end":{"line":139,"column":5}},"line":119},"19":{"name":"(anonymous_19)","decl":{"start":{"line":120,"column":47},"end":{"line":120,"column":48}},"loc":{"start":{"line":120,"column":60},"end":{"line":138,"column":9}},"line":120},"20":{"name":"deleteOneGeofence","decl":{"start":{"line":140,"column":32},"end":{"line":140,"column":49}},"loc":{"start":{"line":140,"column":73},"end":{"line":157,"column":5}},"line":140},"21":{"name":"(anonymous_21)","decl":{"start":{"line":141,"column":47},"end":{"line":141,"column":48}},"loc":{"start":{"line":141,"column":60},"end":{"line":156,"column":9}},"line":141}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},{"start":{"line":99,"column":16},"end":{"line":101,"column":17}}],"line":99}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/app/src/models/geofence.ts","sources":["/app/src/models/geofence.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst geofenceModel = {\n    /**\n     * Function to show all geofences\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllGeofences: async function showAllGeofences(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_geofences();`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneGeofence: async function getOneGeofence(geofenceId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_geofence(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [geofenceId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneGeofence: async function createOneGeofence(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_geofence(?, ? ,?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.coordinates,\n                geofenceInfo.info,\n                geofenceInfo.type,\n            ]);\n\n            return res.status(200).send({\n                success: true,\n                msg: `A new geofence has been created.`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update coordinates of one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateCoordinates: async function updateCoordinates(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_geofence_coordinates(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.geofenceId,\n                geofenceInfo.coordinates,\n            ]);\n            return res.status(200).send({\n                success: true,\n                msg: `Geofence with id has been updated with new coordinates ${geofenceInfo.coordinates}`,\n            });\n        } catch (error: any) {\n            next(res.status(404).send(error));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update information of one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateInfo: async function updateInfo(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            if (!geofenceInfo.info) {\n                throw new CustomError(false, 'No info given');\n            }\n\n            const sql = `CALL update_geofence_info(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.geofenceId,\n                geofenceInfo.info,\n            ]);\n\n            return res\n                .status(200)\n                .send({ succes: true, msg: `Geofence with id has been updated with new info ${geofenceInfo.info}` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n\n    /**\n     * Function to update type of one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateType: async function updateType(geofenceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_geofence_type(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                geofenceInfo.geofenceId,\n                geofenceInfo.type,\n            ]);\n\n            return res\n                .status(200)\n                .send({ success: true, msg: `Geofence with id has been updated with new type ${geofenceInfo.type}` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n\n    /**\n     * Function to delete one geofence\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteOneGeofence: async function deleteOneGeofence(geofenceId: number, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_geofence(?)`;\n\n            const dbRes = await db.query(sql, [geofenceId]);\n\n            return res\n                .status(200)\n                .send({ success: true, msg: `Geofence with id ${geofenceId} has been deleted (Type 40)` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default geofenceModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"15b6085421b1a48449e009f746808033d47af62f","contentHash":"ecd6f135789557d70a899aeca04273b41c7e654f5b6bd454cb3d38153bd3c840"},"/app/src/models/invoice.ts":{"path":"/app/src/models/invoice.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":21},"end":{"line":186,"column":1}},"18":{"start":{"line":19,"column":8},"end":{"line":32,"column":11}},"19":{"start":{"line":20,"column":23},"end":{"line":20,"column":49}},"20":{"start":{"line":21,"column":12},"end":{"line":31,"column":13}},"21":{"start":{"line":22,"column":28},"end":{"line":22,"column":50}},"22":{"start":{"line":23,"column":30},"end":{"line":23,"column":49}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":82}},"24":{"start":{"line":27,"column":16},"end":{"line":27,"column":28}},"25":{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},"26":{"start":{"line":35,"column":8},"end":{"line":48,"column":11}},"27":{"start":{"line":36,"column":23},"end":{"line":36,"column":49}},"28":{"start":{"line":37,"column":12},"end":{"line":47,"column":13}},"29":{"start":{"line":38,"column":28},"end":{"line":38,"column":49}},"30":{"start":{"line":39,"column":30},"end":{"line":39,"column":62}},"31":{"start":{"line":40,"column":16},"end":{"line":40,"column":82}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":28}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":31}},"34":{"start":{"line":51,"column":8},"end":{"line":64,"column":11}},"35":{"start":{"line":52,"column":23},"end":{"line":52,"column":49}},"36":{"start":{"line":53,"column":12},"end":{"line":63,"column":13}},"37":{"start":{"line":54,"column":28},"end":{"line":54,"column":58}},"38":{"start":{"line":55,"column":30},"end":{"line":55,"column":59}},"39":{"start":{"line":56,"column":16},"end":{"line":56,"column":82}},"40":{"start":{"line":59,"column":16},"end":{"line":59,"column":28}},"41":{"start":{"line":62,"column":16},"end":{"line":62,"column":31}},"42":{"start":{"line":67,"column":8},"end":{"line":91,"column":11}},"43":{"start":{"line":68,"column":23},"end":{"line":68,"column":49}},"44":{"start":{"line":69,"column":12},"end":{"line":90,"column":13}},"45":{"start":{"line":70,"column":28},"end":{"line":70,"column":61}},"46":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"47":{"start":{"line":72,"column":20},"end":{"line":72,"column":87}},"48":{"start":{"line":74,"column":30},"end":{"line":79,"column":18}},"49":{"start":{"line":80,"column":16},"end":{"line":83,"column":19}},"50":{"start":{"line":86,"column":16},"end":{"line":86,"column":28}},"51":{"start":{"line":89,"column":16},"end":{"line":89,"column":31}},"52":{"start":{"line":94,"column":8},"end":{"line":113,"column":11}},"53":{"start":{"line":95,"column":23},"end":{"line":95,"column":49}},"54":{"start":{"line":96,"column":12},"end":{"line":112,"column":13}},"55":{"start":{"line":97,"column":28},"end":{"line":97,"column":62}},"56":{"start":{"line":98,"column":30},"end":{"line":101,"column":18}},"57":{"start":{"line":102,"column":16},"end":{"line":105,"column":19}},"58":{"start":{"line":108,"column":16},"end":{"line":108,"column":28}},"59":{"start":{"line":111,"column":16},"end":{"line":111,"column":31}},"60":{"start":{"line":116,"column":8},"end":{"line":138,"column":11}},"61":{"start":{"line":117,"column":23},"end":{"line":117,"column":49}},"62":{"start":{"line":118,"column":12},"end":{"line":137,"column":13}},"63":{"start":{"line":119,"column":28},"end":{"line":119,"column":62}},"64":{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},"65":{"start":{"line":121,"column":20},"end":{"line":121,"column":87}},"66":{"start":{"line":123,"column":30},"end":{"line":126,"column":18}},"67":{"start":{"line":127,"column":16},"end":{"line":130,"column":19}},"68":{"start":{"line":133,"column":16},"end":{"line":133,"column":28}},"69":{"start":{"line":136,"column":16},"end":{"line":136,"column":31}},"70":{"start":{"line":141,"column":8},"end":{"line":160,"column":11}},"71":{"start":{"line":142,"column":23},"end":{"line":142,"column":49}},"72":{"start":{"line":143,"column":12},"end":{"line":159,"column":13}},"73":{"start":{"line":144,"column":28},"end":{"line":144,"column":52}},"74":{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},"75":{"start":{"line":146,"column":20},"end":{"line":146,"column":82}},"76":{"start":{"line":148,"column":30},"end":{"line":148,"column":87}},"77":{"start":{"line":149,"column":16},"end":{"line":152,"column":19}},"78":{"start":{"line":155,"column":16},"end":{"line":155,"column":28}},"79":{"start":{"line":158,"column":16},"end":{"line":158,"column":31}},"80":{"start":{"line":163,"column":8},"end":{"line":184,"column":11}},"81":{"start":{"line":164,"column":23},"end":{"line":164,"column":49}},"82":{"start":{"line":165,"column":12},"end":{"line":183,"column":13}},"83":{"start":{"line":166,"column":28},"end":{"line":166,"column":60}},"84":{"start":{"line":167,"column":30},"end":{"line":167,"column":71}},"85":{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},"86":{"start":{"line":169,"column":20},"end":{"line":169,"column":85}},"87":{"start":{"line":171,"column":16},"end":{"line":171,"column":45}},"88":{"start":{"line":172,"column":16},"end":{"line":172,"column":35}},"89":{"start":{"line":173,"column":16},"end":{"line":176,"column":19}},"90":{"start":{"line":179,"column":16},"end":{"line":179,"column":28}},"91":{"start":{"line":182,"column":16},"end":{"line":182,"column":31}},"92":{"start":{"line":187,"column":0},"end":{"line":187,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllInvoices","decl":{"start":{"line":18,"column":30},"end":{"line":18,"column":45}},"loc":{"start":{"line":18,"column":57},"end":{"line":33,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":32,"column":9}},"line":19},"10":{"name":"getOneInvoice","decl":{"start":{"line":34,"column":28},"end":{"line":34,"column":41}},"loc":{"start":{"line":34,"column":64},"end":{"line":49,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":47},"end":{"line":35,"column":48}},"loc":{"start":{"line":35,"column":60},"end":{"line":48,"column":9}},"line":35},"12":{"name":"getInvoicesByUserId","decl":{"start":{"line":50,"column":34},"end":{"line":50,"column":53}},"loc":{"start":{"line":50,"column":73},"end":{"line":65,"column":5}},"line":50},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":64,"column":9}},"line":51},"14":{"name":"createOneInvoice","decl":{"start":{"line":66,"column":31},"end":{"line":66,"column":47}},"loc":{"start":{"line":66,"column":72},"end":{"line":92,"column":5}},"line":66},"15":{"name":"(anonymous_15)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":60},"end":{"line":91,"column":9}},"line":67},"16":{"name":"updateInvoiceStatus","decl":{"start":{"line":93,"column":34},"end":{"line":93,"column":53}},"loc":{"start":{"line":93,"column":78},"end":{"line":114,"column":5}},"line":93},"17":{"name":"(anonymous_17)","decl":{"start":{"line":94,"column":47},"end":{"line":94,"column":48}},"loc":{"start":{"line":94,"column":60},"end":{"line":113,"column":9}},"line":94},"18":{"name":"updateInvoiceAmount","decl":{"start":{"line":115,"column":34},"end":{"line":115,"column":53}},"loc":{"start":{"line":115,"column":78},"end":{"line":139,"column":5}},"line":115},"19":{"name":"(anonymous_19)","decl":{"start":{"line":116,"column":47},"end":{"line":116,"column":48}},"loc":{"start":{"line":116,"column":60},"end":{"line":138,"column":9}},"line":116},"20":{"name":"payOneInvoice","decl":{"start":{"line":140,"column":28},"end":{"line":140,"column":41}},"loc":{"start":{"line":140,"column":66},"end":{"line":161,"column":5}},"line":140},"21":{"name":"(anonymous_21)","decl":{"start":{"line":141,"column":47},"end":{"line":141,"column":48}},"loc":{"start":{"line":141,"column":60},"end":{"line":160,"column":9}},"line":141},"22":{"name":"payMonthlyInvoice","decl":{"start":{"line":162,"column":32},"end":{"line":162,"column":49}},"loc":{"start":{"line":162,"column":81},"end":{"line":185,"column":5}},"line":162},"23":{"name":"(anonymous_23)","decl":{"start":{"line":163,"column":47},"end":{"line":163,"column":48}},"loc":{"start":{"line":163,"column":60},"end":{"line":184,"column":9}},"line":163}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},{"start":{"line":71,"column":16},"end":{"line":73,"column":17}}],"line":71},"9":{"loc":{"start":{"line":71,"column":20},"end":{"line":71,"column":62}},"type":"binary-expr","locations":[{"start":{"line":71,"column":20},"end":{"line":71,"column":39}},{"start":{"line":71,"column":43},"end":{"line":71,"column":62}}],"line":71},"10":{"loc":{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},"type":"if","locations":[{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},{"start":{"line":120,"column":16},"end":{"line":122,"column":17}}],"line":120},"11":{"loc":{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},"type":"if","locations":[{"start":{"line":145,"column":16},"end":{"line":147,"column":17}},{"start":{"line":145,"column":16},"end":{"line":147,"column":17}}],"line":145},"12":{"loc":{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},"type":"if","locations":[{"start":{"line":168,"column":16},"end":{"line":170,"column":17}},{"start":{"line":168,"column":16},"end":{"line":170,"column":17}}],"line":168}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"/app/src/models/invoice.ts","sources":["/app/src/models/invoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response, NextFunction } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst invoiceModel = {\n    /**\n     * Function to show all invoices\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllInvoices: async function showAllInvoices(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_invoices();`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneInvoice: async function getOneInvoice(invoiceId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_invoice(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [invoiceId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to get one invoice by user id\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getInvoicesByUserId: async function getInvoicesByUserId(userId: number, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_invoices_by_user(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneInvoice: async function createOneInvoice(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_invoice(?, ?, ?, ?)`;\n\n            if (!invoiceInfo.amount || !invoiceInfo.status) {\n                throw new CustomError(false, 'Missing Credentials');\n            }\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                invoiceInfo.rentId,\n                invoiceInfo.userId,\n                invoiceInfo.amount,\n                invoiceInfo.status,\n            ]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `New Invoice has been created for user: ${invoiceInfo.userId}`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update status of one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateInvoiceStatus: async function updateInvoiceStatus(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_invoice_status(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                invoiceInfo.invoiceId,\n                invoiceInfo.status,\n            ]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `Invoice with id ${invoiceInfo.invoiceId} has changed status to ${invoiceInfo.status}`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update amount of one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateInvoiceAmount: async function updateInvoiceAmount(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_invoice_amount(?, ?)`;\n\n            if (!invoiceInfo.amount) {\n                next(new CustomError(false, 'No amount was added'));\n            }\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                invoiceInfo.invoiceId,\n                invoiceInfo.amount,\n            ]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `Invoice with id ${invoiceInfo.invoiceId} has changed amount to ${invoiceInfo.amount}`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to pay one invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    payOneInvoice: async function payOneInvoice(invoiceInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL pay_invoice(?, ?)`;\n\n            if (!invoiceInfo.userId) {\n                throw new CustomError(false, 'Missing userID');\n            }\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [invoiceInfo.id, invoiceInfo.userId]);\n\n            return res.status(201).send({\n                success: true,\n                msg: `Invoice with id ${invoiceInfo.id} has been paid`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to pay monthly invoice\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    payMonthlyInvoice: async function payMonthlyInvoice(\n        userId: string,\n        expireDate: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL pay_monthly_invoice(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, expireDate]);\n\n            if (!expireDate) {\n                throw new CustomError(false, 'No date was given');\n            }\n\n            console.log('AFFECTED ROWS');\n            console.log(dbRes);\n\n            return res.status(200).send({\n                success: true,\n                data: { dbRes },\n                // msg: `Monthly invoice for user with id ${userId} has been paid`,\n            });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default invoiceModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5693f3e4c34f731a607217aff47b29c8be155d79","contentHash":"3d47d75ed7752d185ea3b48ce4ba294413d1c64bfbc206c12792169f0a5d3427"},"/app/src/models/pricing.ts":{"path":"/app/src/models/pricing.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":21},"end":{"line":84,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":49}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":82}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":56,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":55,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":73}},"29":{"start":{"line":38,"column":30},"end":{"line":47,"column":18}},"30":{"start":{"line":48,"column":16},"end":{"line":48,"column":96}},"31":{"start":{"line":51,"column":16},"end":{"line":51,"column":28}},"32":{"start":{"line":54,"column":16},"end":{"line":54,"column":31}},"33":{"start":{"line":59,"column":8},"end":{"line":82,"column":11}},"34":{"start":{"line":60,"column":23},"end":{"line":60,"column":49}},"35":{"start":{"line":61,"column":12},"end":{"line":81,"column":13}},"36":{"start":{"line":62,"column":28},"end":{"line":62,"column":76}},"37":{"start":{"line":63,"column":30},"end":{"line":73,"column":18}},"38":{"start":{"line":74,"column":16},"end":{"line":74,"column":96}},"39":{"start":{"line":77,"column":16},"end":{"line":77,"column":28}},"40":{"start":{"line":80,"column":16},"end":{"line":80,"column":31}},"41":{"start":{"line":85,"column":0},"end":{"line":85,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllPricings","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":45}},"loc":{"start":{"line":17,"column":57},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"createOnePricing","decl":{"start":{"line":33,"column":31},"end":{"line":33,"column":47}},"loc":{"start":{"line":33,"column":72},"end":{"line":57,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":56,"column":9}},"line":34},"12":{"name":"updateOnePricing","decl":{"start":{"line":58,"column":31},"end":{"line":58,"column":47}},"loc":{"start":{"line":58,"column":83},"end":{"line":83,"column":5}},"line":58},"13":{"name":"(anonymous_13)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":82,"column":9}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/app/src/models/pricing.ts","sources":["/app/src/models/pricing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,kDAAgC;AAIhC,MAAM,YAAY,GAAG;IAMjB,eAAe,EAAE,SAAe,eAAe,CAAC,GAAa,EAAE,IAAkB;;YAC7E,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,qBAAqB,CAAC;gBAElC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,gBAAgB,EAAE,SAAe,gBAAgB,CAAC,WAAwB,EAAE,GAAa,EAAE,IAAkB;;YACzG,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,6CAA6C,CAAC;gBAE1D,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChE,WAAW,CAAC,IAAI;oBAChB,WAAW,CAAC,WAAW;oBACvB,WAAW,CAAC,KAAK;oBACjB,WAAW,CAAC,MAAM;oBAClB,WAAW,CAAC,OAAO;oBACnB,WAAW,CAAC,iBAAiB;oBAC7B,WAAW,CAAC,sBAAsB;oBAClC,WAAW,CAAC,mBAAmB;iBAClC,CAAC,CAAC;gBAEH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,0BAA0B,EAAE,CAAC,CAAC;aACnF;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,gBAAgB,EAAE,SAAe,gBAAgB,CAC7C,SAAiB,EACjB,WAAwB,EACxB,GAAa,EACb,IAAkB;;YAElB,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,gDAAgD,CAAC;gBAE7D,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;oBAChE,SAAS;oBACT,WAAW,CAAC,IAAI;oBAChB,WAAW,CAAC,WAAW;oBACvB,WAAW,CAAC,KAAK;oBACjB,WAAW,CAAC,MAAM;oBAClB,WAAW,CAAC,OAAO;oBACnB,WAAW,CAAC,iBAAiB;oBAC7B,WAAW,CAAC,sBAAsB;oBAClC,WAAW,CAAC,mBAAmB;iBAClC,CAAC,CAAC;gBAEH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,0BAA0B,EAAE,CAAC,CAAC;aACnF;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\nimport PricingInfo from 'src/interfaces/pricingInfo';\nimport { CustomError } from '../middleware/errorHandler';\n\nconst pricingModel = {\n    /**\n     * Function to show all rents\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllPricings: async function showAllPricings(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_pricings()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one pricing\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOnePricing: async function createOnePricing(pricingInfo: PricingInfo, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_pricing(?, ?, ?, ?, ?, ?, ?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                pricingInfo.type,\n                pricingInfo.description,\n                pricingInfo.start,\n                pricingInfo.minute,\n                pricingInfo.parking,\n                pricingInfo.discountStartFree,\n                pricingInfo.discountEndParkingZone,\n                pricingInfo.discountEndCharging,\n            ]);\n\n            return res.status(200).send({ success: true, msg: `Pricing has been created` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a pricing\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateOnePricing: async function updateOnePricing(\n        pricingId: string,\n        pricingInfo: PricingInfo,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_pricing(?, ?, ?, ?, ?, ?, ?, ?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [\n                pricingId,\n                pricingInfo.type,\n                pricingInfo.description,\n                pricingInfo.start,\n                pricingInfo.minute,\n                pricingInfo.parking,\n                pricingInfo.discountStartFree,\n                pricingInfo.discountEndParkingZone,\n                pricingInfo.discountEndCharging,\n            ]);\n\n            return res.status(200).send({ success: true, msg: `Pricing has been updated` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default pricingModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b92477ceafa72e4f6148e212a0ec0192bb643457","contentHash":"807c33e783e48d570b1603cd862ad5a6082f29539034607d5b7b24326523700a"},"/app/src/models/rent.ts":{"path":"/app/src/models/rent.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":18},"end":{"line":129,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":46}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":82}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":47,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":46,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":46}},"29":{"start":{"line":38,"column":30},"end":{"line":38,"column":59}},"30":{"start":{"line":39,"column":16},"end":{"line":39,"column":82}},"31":{"start":{"line":42,"column":16},"end":{"line":42,"column":28}},"32":{"start":{"line":45,"column":16},"end":{"line":45,"column":31}},"33":{"start":{"line":50,"column":8},"end":{"line":63,"column":11}},"34":{"start":{"line":51,"column":23},"end":{"line":51,"column":49}},"35":{"start":{"line":52,"column":12},"end":{"line":62,"column":13}},"36":{"start":{"line":53,"column":28},"end":{"line":53,"column":62}},"37":{"start":{"line":54,"column":30},"end":{"line":54,"column":59}},"38":{"start":{"line":55,"column":16},"end":{"line":55,"column":82}},"39":{"start":{"line":58,"column":16},"end":{"line":58,"column":28}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":31}},"41":{"start":{"line":66,"column":8},"end":{"line":79,"column":11}},"42":{"start":{"line":67,"column":23},"end":{"line":67,"column":49}},"43":{"start":{"line":68,"column":12},"end":{"line":78,"column":13}},"44":{"start":{"line":69,"column":28},"end":{"line":69,"column":55}},"45":{"start":{"line":70,"column":30},"end":{"line":70,"column":59}},"46":{"start":{"line":71,"column":16},"end":{"line":71,"column":82}},"47":{"start":{"line":74,"column":16},"end":{"line":74,"column":28}},"48":{"start":{"line":77,"column":16},"end":{"line":77,"column":31}},"49":{"start":{"line":82,"column":8},"end":{"line":95,"column":11}},"50":{"start":{"line":83,"column":23},"end":{"line":83,"column":49}},"51":{"start":{"line":84,"column":12},"end":{"line":94,"column":13}},"52":{"start":{"line":85,"column":28},"end":{"line":85,"column":60}},"53":{"start":{"line":86,"column":30},"end":{"line":86,"column":59}},"54":{"start":{"line":87,"column":16},"end":{"line":87,"column":82}},"55":{"start":{"line":90,"column":16},"end":{"line":90,"column":28}},"56":{"start":{"line":93,"column":16},"end":{"line":93,"column":31}},"57":{"start":{"line":98,"column":8},"end":{"line":111,"column":11}},"58":{"start":{"line":99,"column":23},"end":{"line":99,"column":49}},"59":{"start":{"line":100,"column":12},"end":{"line":110,"column":13}},"60":{"start":{"line":101,"column":28},"end":{"line":101,"column":52}},"61":{"start":{"line":102,"column":30},"end":{"line":102,"column":67}},"62":{"start":{"line":103,"column":16},"end":{"line":103,"column":107}},"63":{"start":{"line":106,"column":16},"end":{"line":106,"column":28}},"64":{"start":{"line":109,"column":16},"end":{"line":109,"column":31}},"65":{"start":{"line":114,"column":8},"end":{"line":127,"column":11}},"66":{"start":{"line":115,"column":23},"end":{"line":115,"column":49}},"67":{"start":{"line":116,"column":12},"end":{"line":126,"column":13}},"68":{"start":{"line":117,"column":28},"end":{"line":117,"column":49}},"69":{"start":{"line":118,"column":30},"end":{"line":118,"column":59}},"70":{"start":{"line":119,"column":16},"end":{"line":119,"column":111}},"71":{"start":{"line":122,"column":16},"end":{"line":122,"column":28}},"72":{"start":{"line":125,"column":16},"end":{"line":125,"column":31}},"73":{"start":{"line":130,"column":0},"end":{"line":130,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllRents","decl":{"start":{"line":17,"column":27},"end":{"line":17,"column":39}},"loc":{"start":{"line":17,"column":51},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"getOneRent","decl":{"start":{"line":33,"column":25},"end":{"line":33,"column":35}},"loc":{"start":{"line":33,"column":55},"end":{"line":48,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":47,"column":9}},"line":34},"12":{"name":"getActiveRents","decl":{"start":{"line":49,"column":29},"end":{"line":49,"column":43}},"loc":{"start":{"line":49,"column":63},"end":{"line":64,"column":5}},"line":49},"13":{"name":"(anonymous_13)","decl":{"start":{"line":50,"column":47},"end":{"line":50,"column":48}},"loc":{"start":{"line":50,"column":60},"end":{"line":63,"column":9}},"line":50},"14":{"name":"getRentsByUserId","decl":{"start":{"line":65,"column":31},"end":{"line":65,"column":47}},"loc":{"start":{"line":65,"column":67},"end":{"line":80,"column":5}},"line":65},"15":{"name":"(anonymous_15)","decl":{"start":{"line":66,"column":47},"end":{"line":66,"column":48}},"loc":{"start":{"line":66,"column":60},"end":{"line":79,"column":9}},"line":66},"16":{"name":"getBikeLogs","decl":{"start":{"line":81,"column":26},"end":{"line":81,"column":37}},"loc":{"start":{"line":81,"column":57},"end":{"line":96,"column":5}},"line":81},"17":{"name":"(anonymous_17)","decl":{"start":{"line":82,"column":47},"end":{"line":82,"column":48}},"loc":{"start":{"line":82,"column":60},"end":{"line":95,"column":9}},"line":82},"18":{"name":"createOneRent","decl":{"start":{"line":97,"column":28},"end":{"line":97,"column":41}},"loc":{"start":{"line":97,"column":69},"end":{"line":112,"column":5}},"line":97},"19":{"name":"(anonymous_19)","decl":{"start":{"line":98,"column":47},"end":{"line":98,"column":48}},"loc":{"start":{"line":98,"column":60},"end":{"line":111,"column":9}},"line":98},"20":{"name":"createOneRent","decl":{"start":{"line":113,"column":28},"end":{"line":113,"column":41}},"loc":{"start":{"line":113,"column":61},"end":{"line":128,"column":5}},"line":113},"21":{"name":"(anonymous_21)","decl":{"start":{"line":114,"column":47},"end":{"line":114,"column":48}},"loc":{"start":{"line":114,"column":60},"end":{"line":127,"column":9}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/app/src/models/rent.ts","sources":["/app/src/models/rent.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst rentModel = {\n    /**\n     * Function to show all rents\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllRents: async function showAllRents(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_rents()`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show one rent\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneRent: async function getOneRent(rentId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_rent(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [rentId]);\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show all active rents for one User\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getActiveRents: async function getActiveRents(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_active_rents_by_user(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show all rents for one User\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getRentsByUserId: async function getRentsByUserId(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_rents_by_user(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show bikesLogs\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getBikeLogs: async function getBikeLogs(rentId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_bikeslog_from_rent(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [rentId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create one rent\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneRent: async function createOneRent(userId: string, bikeId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL create_rent(?, ?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, bikeId]);\n\n            return res.status(200).send({ success: true, msg: `New rent created for user ${userId}` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update one rent\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateOneRent: async function createOneRent(rentId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_rent(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [rentId]);\n\n            return res.status(200).send({ success: true, msg: `Rent with id ${rentId} has been updated` });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default rentModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4ffc9ba5b44ad6a3dbcb20e5af85850f61e338f2","contentHash":"1aea6d31357a8e1eaa9037240b352c2bbe9334c75cef8e3b0233df796c166702"},"/app/src/models/station.ts":{"path":"/app/src/models/station.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":21},"end":{"line":49,"column":1}},"17":{"start":{"line":18,"column":8},"end":{"line":31,"column":11}},"18":{"start":{"line":19,"column":23},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":12},"end":{"line":30,"column":13}},"20":{"start":{"line":21,"column":28},"end":{"line":21,"column":50}},"21":{"start":{"line":22,"column":30},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":82}},"23":{"start":{"line":26,"column":16},"end":{"line":26,"column":28}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"25":{"start":{"line":34,"column":8},"end":{"line":47,"column":11}},"26":{"start":{"line":35,"column":23},"end":{"line":35,"column":49}},"27":{"start":{"line":36,"column":12},"end":{"line":46,"column":13}},"28":{"start":{"line":37,"column":28},"end":{"line":37,"column":49}},"29":{"start":{"line":38,"column":30},"end":{"line":38,"column":62}},"30":{"start":{"line":39,"column":16},"end":{"line":39,"column":82}},"31":{"start":{"line":42,"column":16},"end":{"line":42,"column":28}},"32":{"start":{"line":45,"column":16},"end":{"line":45,"column":31}},"33":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllStations","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":45}},"loc":{"start":{"line":17,"column":57},"end":{"line":32,"column":5}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":31,"column":9}},"line":18},"10":{"name":"getOneStation","decl":{"start":{"line":33,"column":28},"end":{"line":33,"column":41}},"loc":{"start":{"line":33,"column":64},"end":{"line":48,"column":5}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":47,"column":9}},"line":34}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/app/src/models/station.ts","sources":["/app/src/models/station.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,kDAAgC;AAEhC,MAAM,YAAY,GAAG;IAMjB,eAAe,EAAE,SAAe,eAAe,CAAC,GAAa,EAAE,IAAkB;;YAC7E,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,sBAAsB,CAAC;gBAEnC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IAMD,aAAa,EAAE,SAAe,aAAa,CAAC,SAAiB,EAAE,GAAa,EAAE,IAAkB;;YAC5F,MAAM,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI;gBACA,MAAM,GAAG,GAAG,qBAAqB,CAAC;gBAElC,MAAM,KAAK,GAAqC,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEjF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aACrE;YAAC,OAAO,KAAU,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,CAAC;aACf;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Response } from 'express';\nimport { FieldPacket, RowDataPacket } from 'mysql2/promise';\n\nimport database from '../db/db';\n\nconst stationModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllStations: async function showAllStations(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_stations();`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show one station\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneStation: async function getOneStation(stationId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_station(?)`;\n\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [stationId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default stationModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"db569ff437780be95baa46f584ea62629f2d0b06","contentHash":"bca68526bc30a169fcf3ac17bd26127ceea987eea7e90c27e0d53633f0dab6ff"},"/app/src/models/user.ts":{"path":"/app/src/models/user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":23},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":13},"end":{"line":17,"column":49}},"18":{"start":{"line":18,"column":12},"end":{"line":18,"column":35}},"19":{"start":{"line":19,"column":15},"end":{"line":19,"column":34}},"20":{"start":{"line":20,"column":19},"end":{"line":20,"column":21}},"21":{"start":{"line":21,"column":15},"end":{"line":21,"column":31}},"22":{"start":{"line":22,"column":18},"end":{"line":299,"column":1}},"23":{"start":{"line":24,"column":8},"end":{"line":37,"column":11}},"24":{"start":{"line":25,"column":23},"end":{"line":25,"column":49}},"25":{"start":{"line":26,"column":12},"end":{"line":36,"column":13}},"26":{"start":{"line":27,"column":28},"end":{"line":27,"column":47}},"27":{"start":{"line":28,"column":33},"end":{"line":28,"column":52}},"28":{"start":{"line":29,"column":16},"end":{"line":29,"column":85}},"29":{"start":{"line":32,"column":16},"end":{"line":32,"column":28}},"30":{"start":{"line":35,"column":16},"end":{"line":35,"column":31}},"31":{"start":{"line":40,"column":8},"end":{"line":53,"column":11}},"32":{"start":{"line":41,"column":23},"end":{"line":41,"column":49}},"33":{"start":{"line":42,"column":12},"end":{"line":52,"column":13}},"34":{"start":{"line":43,"column":28},"end":{"line":43,"column":46}},"35":{"start":{"line":44,"column":30},"end":{"line":44,"column":59}},"36":{"start":{"line":45,"column":16},"end":{"line":45,"column":82}},"37":{"start":{"line":48,"column":16},"end":{"line":48,"column":28}},"38":{"start":{"line":51,"column":16},"end":{"line":51,"column":31}},"39":{"start":{"line":56,"column":8},"end":{"line":81,"column":11}},"40":{"start":{"line":57,"column":12},"end":{"line":80,"column":15}},"41":{"start":{"line":58,"column":16},"end":{"line":79,"column":19}},"42":{"start":{"line":59,"column":31},"end":{"line":59,"column":57}},"43":{"start":{"line":60,"column":20},"end":{"line":78,"column":21}},"44":{"start":{"line":61,"column":24},"end":{"line":61,"column":49}},"45":{"start":{"line":62,"column":41},"end":{"line":62,"column":76}},"46":{"start":{"line":63,"column":38},"end":{"line":70,"column":26}},"47":{"start":{"line":71,"column":24},"end":{"line":71,"column":99}},"48":{"start":{"line":74,"column":24},"end":{"line":74,"column":36}},"49":{"start":{"line":77,"column":24},"end":{"line":77,"column":39}},"50":{"start":{"line":84,"column":8},"end":{"line":103,"column":11}},"51":{"start":{"line":85,"column":23},"end":{"line":85,"column":49}},"52":{"start":{"line":86,"column":26},"end":{"line":86,"column":46}},"53":{"start":{"line":87,"column":29},"end":{"line":87,"column":46}},"54":{"start":{"line":88,"column":12},"end":{"line":102,"column":13}},"55":{"start":{"line":89,"column":28},"end":{"line":89,"column":55}},"56":{"start":{"line":90,"column":30},"end":{"line":90,"column":58}},"57":{"start":{"line":91,"column":29},"end":{"line":91,"column":40}},"58":{"start":{"line":92,"column":16},"end":{"line":97,"column":17}},"59":{"start":{"line":93,"column":20},"end":{"line":93,"column":84}},"60":{"start":{"line":95,"column":21},"end":{"line":97,"column":17}},"61":{"start":{"line":96,"column":20},"end":{"line":96,"column":90}},"62":{"start":{"line":98,"column":16},"end":{"line":98,"column":92}},"63":{"start":{"line":101,"column":16},"end":{"line":101,"column":28}},"64":{"start":{"line":106,"column":8},"end":{"line":136,"column":11}},"65":{"start":{"line":107,"column":12},"end":{"line":135,"column":15}},"66":{"start":{"line":108,"column":16},"end":{"line":115,"column":17}},"67":{"start":{"line":109,"column":20},"end":{"line":114,"column":23}},"68":{"start":{"line":116,"column":16},"end":{"line":128,"column":17}},"69":{"start":{"line":117,"column":36},"end":{"line":117,"column":63}},"70":{"start":{"line":118,"column":35},"end":{"line":118,"column":57}},"71":{"start":{"line":119,"column":34},"end":{"line":119,"column":80}},"72":{"start":{"line":120,"column":20},"end":{"line":120,"column":38}},"73":{"start":{"line":121,"column":20},"end":{"line":127,"column":23}},"74":{"start":{"line":129,"column":16},"end":{"line":134,"column":19}},"75":{"start":{"line":139,"column":8},"end":{"line":154,"column":11}},"76":{"start":{"line":140,"column":23},"end":{"line":140,"column":49}},"77":{"start":{"line":141,"column":12},"end":{"line":153,"column":13}},"78":{"start":{"line":142,"column":28},"end":{"line":142,"column":62}},"79":{"start":{"line":143,"column":30},"end":{"line":143,"column":70}},"80":{"start":{"line":144,"column":40},"end":{"line":144,"column":51}},"81":{"start":{"line":145,"column":16},"end":{"line":145,"column":45}},"82":{"start":{"line":146,"column":16},"end":{"line":146,"column":35}},"83":{"start":{"line":149,"column":16},"end":{"line":149,"column":94}},"84":{"start":{"line":152,"column":16},"end":{"line":152,"column":31}},"85":{"start":{"line":157,"column":8},"end":{"line":170,"column":11}},"86":{"start":{"line":158,"column":23},"end":{"line":158,"column":49}},"87":{"start":{"line":159,"column":12},"end":{"line":169,"column":13}},"88":{"start":{"line":160,"column":28},"end":{"line":160,"column":61}},"89":{"start":{"line":161,"column":30},"end":{"line":161,"column":69}},"90":{"start":{"line":162,"column":16},"end":{"line":162,"column":35}},"91":{"start":{"line":165,"column":16},"end":{"line":165,"column":93}},"92":{"start":{"line":168,"column":16},"end":{"line":168,"column":31}},"93":{"start":{"line":173,"column":8},"end":{"line":186,"column":11}},"94":{"start":{"line":174,"column":23},"end":{"line":174,"column":49}},"95":{"start":{"line":175,"column":12},"end":{"line":185,"column":13}},"96":{"start":{"line":176,"column":28},"end":{"line":176,"column":64}},"97":{"start":{"line":177,"column":30},"end":{"line":177,"column":72}},"98":{"start":{"line":178,"column":16},"end":{"line":178,"column":35}},"99":{"start":{"line":181,"column":16},"end":{"line":181,"column":96}},"100":{"start":{"line":184,"column":16},"end":{"line":184,"column":31}},"101":{"start":{"line":189,"column":8},"end":{"line":202,"column":11}},"102":{"start":{"line":190,"column":23},"end":{"line":190,"column":49}},"103":{"start":{"line":191,"column":12},"end":{"line":201,"column":13}},"104":{"start":{"line":192,"column":28},"end":{"line":192,"column":64}},"105":{"start":{"line":193,"column":30},"end":{"line":193,"column":72}},"106":{"start":{"line":194,"column":16},"end":{"line":194,"column":35}},"107":{"start":{"line":197,"column":16},"end":{"line":197,"column":96}},"108":{"start":{"line":200,"column":16},"end":{"line":200,"column":31}},"109":{"start":{"line":205,"column":8},"end":{"line":220,"column":11}},"110":{"start":{"line":206,"column":23},"end":{"line":206,"column":49}},"111":{"start":{"line":207,"column":12},"end":{"line":219,"column":13}},"112":{"start":{"line":208,"column":28},"end":{"line":208,"column":60}},"113":{"start":{"line":209,"column":30},"end":{"line":209,"column":68}},"114":{"start":{"line":210,"column":16},"end":{"line":212,"column":109}},"115":{"start":{"line":215,"column":16},"end":{"line":215,"column":91}},"116":{"start":{"line":218,"column":16},"end":{"line":218,"column":31}},"117":{"start":{"line":223,"column":8},"end":{"line":241,"column":11}},"118":{"start":{"line":224,"column":23},"end":{"line":224,"column":49}},"119":{"start":{"line":225,"column":12},"end":{"line":240,"column":13}},"120":{"start":{"line":226,"column":28},"end":{"line":226,"column":68}},"121":{"start":{"line":227,"column":30},"end":{"line":227,"column":68}},"122":{"start":{"line":228,"column":16},"end":{"line":230,"column":17}},"123":{"start":{"line":229,"column":20},"end":{"line":229,"column":34}},"124":{"start":{"line":231,"column":16},"end":{"line":233,"column":117}},"125":{"start":{"line":236,"column":16},"end":{"line":236,"column":91}},"126":{"start":{"line":239,"column":16},"end":{"line":239,"column":31}},"127":{"start":{"line":244,"column":8},"end":{"line":265,"column":11}},"128":{"start":{"line":245,"column":12},"end":{"line":264,"column":15}},"129":{"start":{"line":246,"column":16},"end":{"line":263,"column":19}},"130":{"start":{"line":247,"column":20},"end":{"line":249,"column":21}},"131":{"start":{"line":248,"column":24},"end":{"line":248,"column":101}},"132":{"start":{"line":250,"column":31},"end":{"line":250,"column":57}},"133":{"start":{"line":251,"column":20},"end":{"line":262,"column":21}},"134":{"start":{"line":252,"column":24},"end":{"line":252,"column":40}},"135":{"start":{"line":253,"column":36},"end":{"line":253,"column":69}},"136":{"start":{"line":254,"column":38},"end":{"line":254,"column":77}},"137":{"start":{"line":255,"column":24},"end":{"line":255,"column":127}},"138":{"start":{"line":258,"column":24},"end":{"line":258,"column":100}},"139":{"start":{"line":261,"column":24},"end":{"line":261,"column":39}},"140":{"start":{"line":268,"column":8},"end":{"line":281,"column":11}},"141":{"start":{"line":269,"column":23},"end":{"line":269,"column":49}},"142":{"start":{"line":270,"column":12},"end":{"line":280,"column":13}},"143":{"start":{"line":271,"column":28},"end":{"line":271,"column":58}},"144":{"start":{"line":272,"column":30},"end":{"line":272,"column":66}},"145":{"start":{"line":273,"column":16},"end":{"line":273,"column":35}},"146":{"start":{"line":276,"column":16},"end":{"line":276,"column":89}},"147":{"start":{"line":279,"column":16},"end":{"line":279,"column":31}},"148":{"start":{"line":284,"column":8},"end":{"line":297,"column":11}},"149":{"start":{"line":285,"column":23},"end":{"line":285,"column":49}},"150":{"start":{"line":286,"column":12},"end":{"line":296,"column":13}},"151":{"start":{"line":287,"column":28},"end":{"line":287,"column":49}},"152":{"start":{"line":288,"column":30},"end":{"line":288,"column":59}},"153":{"start":{"line":289,"column":16},"end":{"line":289,"column":106}},"154":{"start":{"line":292,"column":16},"end":{"line":292,"column":85}},"155":{"start":{"line":295,"column":16},"end":{"line":295,"column":31}},"156":{"start":{"line":300,"column":0},"end":{"line":300,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllUsers","decl":{"start":{"line":23,"column":27},"end":{"line":23,"column":39}},"loc":{"start":{"line":23,"column":51},"end":{"line":38,"column":5}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":47},"end":{"line":24,"column":48}},"loc":{"start":{"line":24,"column":60},"end":{"line":37,"column":9}},"line":24},"10":{"name":"getOneUser","decl":{"start":{"line":39,"column":25},"end":{"line":39,"column":35}},"loc":{"start":{"line":39,"column":55},"end":{"line":54,"column":5}},"line":39},"11":{"name":"(anonymous_11)","decl":{"start":{"line":40,"column":47},"end":{"line":40,"column":48}},"loc":{"start":{"line":40,"column":60},"end":{"line":53,"column":9}},"line":40},"12":{"name":"createOneUser","decl":{"start":{"line":55,"column":28},"end":{"line":55,"column":41}},"loc":{"start":{"line":55,"column":63},"end":{"line":82,"column":5}},"line":55},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":47},"end":{"line":56,"column":48}},"loc":{"start":{"line":56,"column":60},"end":{"line":81,"column":9}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":57,"column":55},"end":{"line":57,"column":56}},"loc":{"start":{"line":57,"column":78},"end":{"line":80,"column":13}},"line":57},"15":{"name":"(anonymous_15)","decl":{"start":{"line":58,"column":55},"end":{"line":58,"column":56}},"loc":{"start":{"line":58,"column":68},"end":{"line":79,"column":17}},"line":58},"16":{"name":"userLogin","decl":{"start":{"line":83,"column":24},"end":{"line":83,"column":33}},"loc":{"start":{"line":83,"column":55},"end":{"line":104,"column":5}},"line":83},"17":{"name":"(anonymous_17)","decl":{"start":{"line":84,"column":47},"end":{"line":84,"column":48}},"loc":{"start":{"line":84,"column":60},"end":{"line":103,"column":9}},"line":84},"18":{"name":"comparePasswords","decl":{"start":{"line":105,"column":31},"end":{"line":105,"column":47}},"loc":{"start":{"line":105,"column":69},"end":{"line":137,"column":5}},"line":105},"19":{"name":"(anonymous_19)","decl":{"start":{"line":106,"column":47},"end":{"line":106,"column":48}},"loc":{"start":{"line":106,"column":60},"end":{"line":136,"column":9}},"line":106},"20":{"name":"(anonymous_20)","decl":{"start":{"line":107,"column":52},"end":{"line":107,"column":53}},"loc":{"start":{"line":107,"column":75},"end":{"line":135,"column":13}},"line":107},"21":{"name":"updateUserFirstName","decl":{"start":{"line":138,"column":34},"end":{"line":138,"column":53}},"loc":{"start":{"line":138,"column":84},"end":{"line":155,"column":5}},"line":138},"22":{"name":"(anonymous_22)","decl":{"start":{"line":139,"column":47},"end":{"line":139,"column":48}},"loc":{"start":{"line":139,"column":60},"end":{"line":154,"column":9}},"line":139},"23":{"name":"updateUserLastName","decl":{"start":{"line":156,"column":33},"end":{"line":156,"column":51}},"loc":{"start":{"line":156,"column":81},"end":{"line":171,"column":5}},"line":156},"24":{"name":"(anonymous_24)","decl":{"start":{"line":157,"column":47},"end":{"line":157,"column":48}},"loc":{"start":{"line":157,"column":60},"end":{"line":170,"column":9}},"line":157},"25":{"name":"updateUserPhoneNumber","decl":{"start":{"line":172,"column":36},"end":{"line":172,"column":57}},"loc":{"start":{"line":172,"column":90},"end":{"line":187,"column":5}},"line":172},"26":{"name":"(anonymous_26)","decl":{"start":{"line":173,"column":47},"end":{"line":173,"column":48}},"loc":{"start":{"line":173,"column":60},"end":{"line":186,"column":9}},"line":173},"27":{"name":"updateUserEmailAdress","decl":{"start":{"line":188,"column":36},"end":{"line":188,"column":57}},"loc":{"start":{"line":188,"column":90},"end":{"line":203,"column":5}},"line":188},"28":{"name":"(anonymous_28)","decl":{"start":{"line":189,"column":47},"end":{"line":189,"column":48}},"loc":{"start":{"line":189,"column":60},"end":{"line":202,"column":9}},"line":189},"29":{"name":"updateUserBalance","decl":{"start":{"line":204,"column":32},"end":{"line":204,"column":49}},"loc":{"start":{"line":204,"column":78},"end":{"line":221,"column":5}},"line":204},"30":{"name":"(anonymous_30)","decl":{"start":{"line":205,"column":47},"end":{"line":205,"column":48}},"loc":{"start":{"line":205,"column":60},"end":{"line":220,"column":9}},"line":205},"31":{"name":"updateUserPaymentOption","decl":{"start":{"line":222,"column":38},"end":{"line":222,"column":61}},"loc":{"start":{"line":222,"column":90},"end":{"line":242,"column":5}},"line":222},"32":{"name":"(anonymous_32)","decl":{"start":{"line":223,"column":47},"end":{"line":223,"column":48}},"loc":{"start":{"line":223,"column":60},"end":{"line":241,"column":9}},"line":223},"33":{"name":"updateUserPassword","decl":{"start":{"line":243,"column":33},"end":{"line":243,"column":51}},"loc":{"start":{"line":243,"column":81},"end":{"line":266,"column":5}},"line":243},"34":{"name":"(anonymous_34)","decl":{"start":{"line":244,"column":47},"end":{"line":244,"column":48}},"loc":{"start":{"line":244,"column":60},"end":{"line":265,"column":9}},"line":244},"35":{"name":"(anonymous_35)","decl":{"start":{"line":245,"column":46},"end":{"line":245,"column":47}},"loc":{"start":{"line":245,"column":67},"end":{"line":264,"column":13}},"line":245},"36":{"name":"(anonymous_36)","decl":{"start":{"line":246,"column":55},"end":{"line":246,"column":56}},"loc":{"start":{"line":246,"column":68},"end":{"line":263,"column":17}},"line":246},"37":{"name":"updateUserOauth","decl":{"start":{"line":267,"column":30},"end":{"line":267,"column":45}},"loc":{"start":{"line":267,"column":72},"end":{"line":282,"column":5}},"line":267},"38":{"name":"(anonymous_38)","decl":{"start":{"line":268,"column":47},"end":{"line":268,"column":48}},"loc":{"start":{"line":268,"column":60},"end":{"line":281,"column":9}},"line":268},"39":{"name":"deleteOneUser","decl":{"start":{"line":283,"column":28},"end":{"line":283,"column":41}},"loc":{"start":{"line":283,"column":61},"end":{"line":298,"column":5}},"line":283},"40":{"name":"(anonymous_40)","decl":{"start":{"line":284,"column":47},"end":{"line":284,"column":48}},"loc":{"start":{"line":284,"column":60},"end":{"line":297,"column":9}},"line":284}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":92,"column":16},"end":{"line":97,"column":17}},"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":97,"column":17}},{"start":{"line":92,"column":16},"end":{"line":97,"column":17}}],"line":92},"9":{"loc":{"start":{"line":95,"column":21},"end":{"line":97,"column":17}},"type":"if","locations":[{"start":{"line":95,"column":21},"end":{"line":97,"column":17}},{"start":{"line":95,"column":21},"end":{"line":97,"column":17}}],"line":95},"10":{"loc":{"start":{"line":108,"column":16},"end":{"line":115,"column":17}},"type":"if","locations":[{"start":{"line":108,"column":16},"end":{"line":115,"column":17}},{"start":{"line":108,"column":16},"end":{"line":115,"column":17}}],"line":108},"11":{"loc":{"start":{"line":116,"column":16},"end":{"line":128,"column":17}},"type":"if","locations":[{"start":{"line":116,"column":16},"end":{"line":128,"column":17}},{"start":{"line":116,"column":16},"end":{"line":128,"column":17}}],"line":116},"12":{"loc":{"start":{"line":228,"column":16},"end":{"line":230,"column":17}},"type":"if","locations":[{"start":{"line":228,"column":16},"end":{"line":230,"column":17}},{"start":{"line":228,"column":16},"end":{"line":230,"column":17}}],"line":228},"13":{"loc":{"start":{"line":247,"column":20},"end":{"line":249,"column":21}},"type":"if","locations":[{"start":{"line":247,"column":20},"end":{"line":249,"column":21}},{"start":{"line":247,"column":20},"end":{"line":249,"column":21}}],"line":247}},"s":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":4,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1},"f":{"0":1,"1":3,"2":0,"3":1,"4":3,"5":0,"6":4,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"0":[1,1,1],"1":[3,0],"2":[1,1],"3":[1,3],"4":[1,1],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"inputSourceMap":{"version":3,"file":"/app/src/models/user.ts","sources":["/app/src/models/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { FieldPacket, RowDataPacket } from 'mysql2/promise';\nimport { Response, NextFunction } from 'express';\nimport { v4 as uuid } from 'uuid';\n\nimport { CustomError } from '../middleware/errorHandler';\nimport database from '../db/db';\n\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst saltRounds = 10;\n\n// generate a unique API key\nconst apiKey = uuid();\n\nconst userModel = {\n    /**\n     * Function to show all users\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllUsers: async function showAllUsers(res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_users();`;\n\n            const allUsers: [RowDataPacket[], FieldPacket[]] = await db.query(sql);\n\n            return res.status(200).send({ success: true, data: allUsers[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to show one user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    getOneUser: async function getOneUser(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL get_user(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, data: dbRes[0][0] });\n        } catch (error: any) {\n            next(error);\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to create a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    createOneUser: async function createOneUser(userInfo: any, res: Response, next: NextFunction) {\n        bcrypt.hash(userInfo.password, saltRounds, async function (error: any, hash: any) {\n            const db = await database.getDb();\n            try {\n                userInfo.password = hash;\n                \n                const sql_user = `CALL create_user(?, ?, ?, ?, ?,?)`;\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql_user, [\n                    userInfo.firstName,\n                    userInfo.lastName,\n                    userInfo.phoneNumber,\n                    userInfo.emailAdress,\n                    userInfo.password,\n                    userInfo.oauth,\n                ]);\n\n                return res.status(200).send({ success: true, msg: 'New user registered' });\n            } catch (error: any) {\n                next(error);\n            } finally {\n                await db.end();\n            }\n        });\n    },\n    /**\n     * Function to login a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    userLogin: async function userLogin(userInfo: any, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n\n        const email = userInfo.emailAdress;\n        const password = userInfo.password;\n        try {\n            const sql = `CALL get_user_by_email(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [email]);\n\n            const user = dbRes[0][0];\n\n            if (user.length > 0) {\n                return await userModel.comparePasswords(res, user[0], password);\n            } else if (user.length === 0) {\n                return res.status(400).json({ success: false, msg: 'No user found' });\n            }\n\n            return res.status(400).send({ success: false, msg: 'Missing credentials' });\n        } catch (error) {\n            next(error);\n        }\n    },\n    /**\n     * Function to verify a hashed password\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    comparePasswords: async function comparePasswords(res: Response, user: any, password: string) {\n        bcrypt.compare(password, user.Password, function (err: any, result: any) {\n            if (err) {\n                return res.status(500).json({\n                    errors: {\n                        status: 500,\n                        message: 'Could not decrypt password.',\n                    },\n                });\n            }\n\n            if (result) {\n                const payload = { email: user.EmailAdress };\n                const secret = process.env.JWT_SECRET;\n\n                const token = jwt.sign(payload, secret, { expiresIn: '1h' });\n                console.log(user);\n\n                return res.status(201).json({\n                    data: {\n                        info: { user },\n                        token,\n                        msg: 'User logged in',\n                    },\n                });\n            }\n            return res.status(401).json({\n                errors: {\n                    status: 401,\n                    message: 'Password not correct',\n                },\n            });\n        });\n    },\n    /**\n     * Function to update a users first name\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserFirstName: async function updateUserFirstName(\n        userId: string,\n        firstName: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_firstname(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, firstName]);\n            const resultSetHeader = dbRes[0][0];\n            console.log(resultSetHeader);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user first name'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users lastname\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserLastName: async function updateUserLastName(\n        userId: string,\n        lastName: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_lastname(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, lastName]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user last name'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users phone number\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserPhoneNumber: async function updateUserPhoneNumber(\n        userId: string,\n        phoneNumber: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_phonenumber(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, phoneNumber]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user phone number'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users email address\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserEmailAdress: async function updateUserEmailAdress(\n        userId: string,\n        emailAdress: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_emailadress(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, emailAdress]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user email adress'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users balance\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserBalance: async function updateUserBalance(\n        userId: string,\n        balance: number,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_balance(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, balance]);\n\n            return res\n                .status(200)\n                .send({ success: true, msg: `User with ${userId} has added ${balance} to its balance` });\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user balance'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users payment option\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserPaymentOption: async function updateUserPaymentOption(\n        userId: string,\n        balance: number,\n        res: Response,\n        next: NextFunction\n    ) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_partial_payment(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, balance]);\n\n            if (!balance) {\n                throw Error();\n            }\n\n            return res\n                .status(201)\n                .send({ success: true, msg: `User with id ${userId} has changed to payment option ${balance}` });\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user balance'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to update a users password\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserPassword: async function updateUserPassword(\n        userId: string,\n        password: string,\n        res: Response,\n        next: NextFunction\n    ) {\n        bcrypt.hash(password, saltRounds, async function (err: any, hash: any) {\n            if (err) {\n                return res.status(500).json({ error: true, msg: 'Could not hash password' });\n            }\n            const db = await database.getDb();\n            try {\n                password = hash;\n\n                const sql = `CALL update_user_password(?, ?)`;\n                const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, password]);\n\n                return res.status(201).send({ success: true, msg: `User with id ${userId} has updated its password` });\n            } catch (error: any) {\n                next(new CustomError(false, 'Error updating user password'));\n            } finally {\n                await db.end();\n            }\n        });\n    },\n    /**\n     * Function to update a users oauth\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    updateUserOauth: async function updateUserOauth(userId: string, oauth: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL update_user_oauth(?, ?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId, oauth]);\n\n            return dbRes[0][0];\n        } catch (error: any) {\n            next(new CustomError(false, 'Error updating user oauth'));\n        } finally {\n            await db.end();\n        }\n    },\n    /**\n     * Function to delete a user\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    deleteOneUser: async function deleteOneUser(userId: string, res: Response, next: NextFunction) {\n        const db = await database.getDb();\n        try {\n            const sql = `CALL delete_user(?)`;\n            const dbRes: [RowDataPacket[], FieldPacket[]] = await db.query(sql, [userId]);\n\n            return res.status(200).send({ success: true, msg: `User with id ${userId} was deleted` });\n        } catch (error: any) {\n            next(new CustomError(false, 'Could not delete user'));\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default userModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fbc2aee3826c79dce821ea4084b710347c50ce1f","contentHash":"e21bfff0f8f9d74d793df493626e3e2ce100ea4ab7f6a122b1b3b844acf7c9f1"}}