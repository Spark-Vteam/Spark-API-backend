{"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/index.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":61}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":28}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":36}},"9":{"start":{"line":12,"column":16},"end":{"line":12,"column":45}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":16}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":25}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"14":{"start":{"line":17,"column":15},"end":{"line":17,"column":56}},"15":{"start":{"line":18,"column":18},"end":{"line":18,"column":62}},"16":{"start":{"line":19,"column":15},"end":{"line":19,"column":56}},"17":{"start":{"line":20,"column":15},"end":{"line":20,"column":56}},"18":{"start":{"line":21,"column":15},"end":{"line":21,"column":56}},"19":{"start":{"line":22,"column":16},"end":{"line":22,"column":58}},"20":{"start":{"line":23,"column":18},"end":{"line":23,"column":62}},"21":{"start":{"line":24,"column":19},"end":{"line":24,"column":64}},"22":{"start":{"line":25,"column":18},"end":{"line":25,"column":62}},"23":{"start":{"line":26,"column":0},"end":{"line":26,"column":38}},"24":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}},"25":{"start":{"line":28,"column":0},"end":{"line":28,"column":32}},"26":{"start":{"line":29,"column":0},"end":{"line":29,"column":29}},"27":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}},"28":{"start":{"line":31,"column":0},"end":{"line":31,"column":29}},"29":{"start":{"line":32,"column":0},"end":{"line":32,"column":30}},"30":{"start":{"line":33,"column":0},"end":{"line":33,"column":32}},"31":{"start":{"line":34,"column":0},"end":{"line":34,"column":33}},"32":{"start":{"line":35,"column":0},"end":{"line":35,"column":32}},"33":{"start":{"line":36,"column":15},"end":{"line":36,"column":59}},"34":{"start":{"line":43,"column":17},"end":{"line":43,"column":19}},"35":{"start":{"line":45,"column":4},"end":{"line":58,"column":7}},"36":{"start":{"line":46,"column":8},"end":{"line":57,"column":9}},"37":{"start":{"line":48,"column":12},"end":{"line":48,"column":42}},"38":{"start":{"line":50,"column":13},"end":{"line":57,"column":9}},"39":{"start":{"line":52,"column":12},"end":{"line":56,"column":15}},"40":{"start":{"line":54,"column":16},"end":{"line":54,"column":38}},"41":{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},"42":{"start":{"line":59,"column":4},"end":{"line":59,"column":57}},"43":{"start":{"line":60,"column":4},"end":{"line":60,"column":42}},"44":{"start":{"line":61,"column":4},"end":{"line":61,"column":25}},"45":{"start":{"line":63,"column":0},"end":{"line":63,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"logStartUpDetailsToConsole","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":35}},"loc":{"start":{"line":42,"column":38},"end":{"line":62,"column":1}},"line":42},"2":{"name":"(anonymous_2)","decl":{"start":{"line":45,"column":30},"end":{"line":45,"column":31}},"loc":{"start":{"line":45,"column":46},"end":{"line":58,"column":5}},"line":45},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":44},"end":{"line":52,"column":45}},"loc":{"start":{"line":52,"column":57},"end":{"line":56,"column":13}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":8,"column":13},"end":{"line":8,"column":37}},"type":"binary-expr","locations":[{"start":{"line":8,"column":13},"end":{"line":8,"column":29}},{"start":{"line":8,"column":33},"end":{"line":8,"column":37}}],"line":8},"4":{"loc":{"start":{"line":46,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":57,"column":9}},{"start":{"line":46,"column":8},"end":{"line":57,"column":9}}],"line":46},"5":{"loc":{"start":{"line":50,"column":13},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":13},"end":{"line":57,"column":9}},{"start":{"line":50,"column":13},"end":{"line":57,"column":9}}],"line":50},"6":{"loc":{"start":{"line":55,"column":16},"end":{"line":55,"column":43}},"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":21}},{"start":{"line":55,"column":25},"end":{"line":55,"column":43}}],"line":55}},"s":{"0":1,"1":11,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":16,"37":1,"38":15,"39":9,"40":35,"41":35,"42":1,"43":1,"44":1,"45":1},"f":{"0":11,"1":1,"2":16,"3":35},"b":{"0":[1,1,1],"1":[9,2],"2":[11,11],"3":[1,1],"4":[1,15],"5":[9,6],"6":[35,35]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/index.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/index.ts"],"names":[],"mappings":";;;;;AAAA,sDAAgF;AAEhF,8DAAqC;AACrC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAE3B,MAAM,GAAG,GAAgB,IAAA,iBAAO,GAAE,CAAC;AACnC,8CAA0D;AAE1D,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAChB,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEnD,yDAAsC;AACtC,+DAA6C;AAC7C,yDAAsC;AACtC,yDAAsC;AACtC,yDAAsC;AACtC,2DAAwC;AACxC,+DAA4C;AAC5C,iEAA8C;AAC9C,+DAA4C;AAE5C,GAAG,CAAC,GAAG,CAAC,4BAAoB,CAAC,CAAC;AAE9B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,cAAS,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAa,CAAC,CAAC;AAC5B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,cAAS,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,cAAS,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,cAAS,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,eAAU,CAAC,CAAC;AACzB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAY,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,kBAAa,CAAC,CAAC;AAC5B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAY,CAAC,CAAC;AAE3B,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,0BAA0B,CAAC,CAAC;AAE5D;;;;GAIG;AACH,SAAS,0BAA0B;IAC/B,IAAI,MAAM,GAAU,EAAE,CAAC;IAEvB,iCAAiC;IACjC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CACrB,CAAC,UAIA,EAAE,EAAE;QACD,IAAI,UAAU,CAAC,KAAK,EAAE;YAClB,wCAAwC;YACxC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACjC;aAAM,IAAI,UAAU,CAAC,IAAI,KAAK,QAAQ,EAAE;YACrC,oCAAoC;YACpC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBACxC,IAAI,KAAK,CAAC;gBAEV,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;SACN;IACL,CAAC,CACJ,CAAC;IAEF,OAAO,CAAC,IAAI,CAAC,+BAA+B,IAAI,GAAG,CAAC,CAAC;IACrD,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACtC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,CAAC;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import express, { Application, Request, Response, NextFunction } from \"express\";\n\nimport bodyParser from \"body-parser\";\nconst port = process.env.PORT || 4000;\n\nconst cors = require(\"cors\");\nrequire(\"dotenv\").config();\n\nconst app: Application = express();\nimport { logIncomingToConsole } from \"./middleware/index\";\n\napp.use(cors());\napp.options(\"*\", cors());\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\nimport mainRoute from \"./routes/main\";\nimport stationsRoute from \"./routes/station\";\nimport userRoute from \"./routes/user\";\nimport bikeRoute from \"./routes/bike\";\nimport rentRoute from \"./routes/rent\";\nimport adminRoute from \"./routes/admin\";\nimport invoiceRoute from \"./routes/invoice\";\nimport geofenceRoute from \"./routes/geofence\";\nimport chargerRoute from \"./routes/charger\";\n\napp.use(logIncomingToConsole);\n\napp.use(\"/\", mainRoute);\napp.use(\"/\", stationsRoute);\napp.use(\"/\", userRoute);\napp.use(\"/\", bikeRoute);\napp.use(\"/\", rentRoute);\napp.use(\"/\", adminRoute);\napp.use(\"/\", invoiceRoute);\napp.use(\"/\", geofenceRoute);\napp.use(\"/\", chargerRoute);\n\nconst server = app.listen(port, logStartUpDetailsToConsole);\n\n/**\n * Log app details to console when starting up.\n *\n * @return {void}\n */\nfunction logStartUpDetailsToConsole() {\n    let routes: any[] = [];\n\n    // Find what routes are supported\n    app._router.stack.forEach(\n        (middleware: {\n            route: any;\n            name: string;\n            handle: { stack: any[] };\n        }) => {\n            if (middleware.route) {\n                // Routes registered directly on the app\n                routes.push(middleware.route);\n            } else if (middleware.name === \"router\") {\n                // Routes added as router middleware\n                middleware.handle.stack.forEach((handler) => {\n                    let route;\n\n                    route = handler.route;\n                    route && routes.push(route);\n                });\n            }\n        }\n    );\n\n    console.info(`Server is listening on port ${port}.`);\n    console.info(\"Available routes are:\");\n    console.info(routes);\n}\n\nexport default server;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3e99ddb1fa3cb2ac0d9a55fc757335687d9bcaaf","contentHash":"f503c7e396f2fe6dabaac9c3770708bf2c8d7b6dcc9c117cc2771e3a981aedb7"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"2":{"start":{"line":18,"column":4},"end":{"line":18,"column":64}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":11}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":52}}},"fnMap":{"0":{"name":"logIncomingToConsole","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":29}},"loc":{"start":{"line":17,"column":46},"end":{"line":20,"column":1}},"line":17}},"branchMap":{},"s":{"0":1,"1":1,"2":0,"3":0,"4":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/middleware/index.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,YAAY,CAAC;;;AAEb;;;;;;;;;GASG;AACH,SAAgB,oBAAoB,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;IAChF,OAAO,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;IAC5D,IAAI,EAAE,CAAC;AACX,CAAC;AAHD,oDAGC","sourcesContent":["/**\n * General middleware.\n */\n\"use strict\";\nimport express, { Application, Request, Response, NextFunction } from \"express\";\n/**\n * Log incoming requests to console to see who accesses the server\n * on what route.\n *\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nexport function logIncomingToConsole(req: Request, res: Response, next: NextFunction) {\n    console.info(`Got request on ${req.path} (${req.method}).`);\n    next();\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d6becd06e54d37ba0684583b16c132d17ffb1517","contentHash":"0d6e1c8e1e436378a85995a608d7a36c063bb50da20cbfb50b3c1c3c4a591fe6"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/main.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/main.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}},"4":{"start":{"line":18,"column":0},"end":{"line":23,"column":3}},"5":{"start":{"line":19,"column":15},"end":{"line":21,"column":5}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":19}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":16},"end":{"line":18,"column":17}},"loc":{"start":{"line":18,"column":30},"end":{"line":23,"column":1}},"line":18}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/main.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/main.ts"],"names":[],"mappings":";;AAAA,qCAAoD;AACpD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AACxB,MAAM,QAAQ,GAAG,mBAAmB,CAAC;AAErC;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC5C,IAAI,IAAI,GAAG;QACP,KAAK,EAAE,mBAAmB,QAAQ,EAAE;KACvC,CAAC;IAEF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Request, Response, Router } from \"express\";\nconst router = Router();\nconst sitename = \" | Spark API Main\";\n\n/**\n * Main ROUTE\n * /:\n *   get:\n *     summary: Display\n *     description: Render welcome page\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/\", (req: Request, res: Response) => {\n    let data = {\n        title: `Welcome to the  ${sitename}`,\n    };\n\n    res.send(data);\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4936a608e0b808b9fff2975c95b0408dcd23ef71","contentHash":"3b81f1a829a3deba519603ee8eed4877ae112aabedca45869fd2b1a32b11e32d"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/station.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/station.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":38}},"17":{"start":{"line":17,"column":18},"end":{"line":17,"column":63}},"18":{"start":{"line":30,"column":0},"end":{"line":42,"column":4}},"19":{"start":{"line":30,"column":37},"end":{"line":42,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":41,"column":5}},"21":{"start":{"line":32,"column":26},"end":{"line":32,"column":67}},"22":{"start":{"line":33,"column":30},"end":{"line":33,"column":69}},"23":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"24":{"start":{"line":35,"column":12},"end":{"line":35,"column":79}},"25":{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"27":{"start":{"line":55,"column":0},"end":{"line":69,"column":4}},"28":{"start":{"line":55,"column":41},"end":{"line":69,"column":2}},"29":{"start":{"line":56,"column":4},"end":{"line":68,"column":5}},"30":{"start":{"line":57,"column":25},"end":{"line":57,"column":77}},"31":{"start":{"line":58,"column":29},"end":{"line":58,"column":67}},"32":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"33":{"start":{"line":60,"column":12},"end":{"line":62,"column":71}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":36}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":43}},"36":{"start":{"line":70,"column":0},"end":{"line":70,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},"loc":{"start":{"line":30,"column":37},"end":{"line":42,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":71},"end":{"line":30,"column":72}},"loc":{"start":{"line":30,"column":84},"end":{"line":42,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":27},"end":{"line":55,"column":28}},"loc":{"start":{"line":55,"column":41},"end":{"line":69,"column":2}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":75},"end":{"line":55,"column":76}},"loc":{"start":{"line":55,"column":88},"end":{"line":69,"column":1}},"line":55}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"9":{"loc":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},{"start":{"line":59,"column":8},"end":{"line":63,"column":9}}],"line":59}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/station.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/station.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAoD;AACpD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,gEAA6C;AAE7C;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACzD,IAAI;QACA,IAAI,WAAW,GAAG,MAAM,iBAAY,CAAC,eAAe,EAAE,CAAC;QACvD,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9D,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;SACtE;QACD,OAAO,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAChC;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7D,IAAI;QACA,IAAI,UAAU,GAAG,MAAM,iBAAY,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QAC5D,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,OAAO,GAAG;iBACL,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,sBAAsB,GAAG,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC;SAC9D;QACD,OAAO,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC/B;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Request, Response, Router } from \"express\";\nconst router = Router();\n\nimport stationModel from \"../models/station\";\n\n/**\n * Stations ROUTE\n *  /station:\n *   get:\n *     summary: List of stations\n *     description: Render  page\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/station\", async (req: Request, res: Response) => {\n    try {\n        let allStations = await stationModel.showAllStations();\n        let allStationsData = JSON.parse(JSON.stringify(allStations));\n        if (allStationsData[0].length === 0) {\n            return res.status(404).send(\"No stations currently in the system\");\n        }\n        return res.send(allStations);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Stations ROUTE\n *  /station/:id:\n *   get:\n *     summary: One station\n *     description: Render station by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/station/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneStation = await stationModel.getOneStation(req.params.id);\n        let oneStationData = JSON.parse(JSON.stringify(oneStation));\n        if (oneStationData[0].length === 0) {\n            return res\n                .status(404)\n                .send(`No station with Id ${req.params.id} was found`);\n        }\n        return res.send(oneStation);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4250e2af80e08493fe0b953873ef6cc10be8b70a","contentHash":"3999f6bd709cc1aa7bebb148ea97db61c98e5274aff7be611276e9711e2accc6"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":13},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":21},"end":{"line":53,"column":1}},"17":{"start":{"line":23,"column":8},"end":{"line":37,"column":11}},"18":{"start":{"line":24,"column":21},"end":{"line":24,"column":47}},"19":{"start":{"line":25,"column":12},"end":{"line":36,"column":13}},"20":{"start":{"line":26,"column":26},"end":{"line":26,"column":48}},"21":{"start":{"line":28,"column":16},"end":{"line":28,"column":42}},"22":{"start":{"line":29,"column":16},"end":{"line":29,"column":30}},"23":{"start":{"line":35,"column":16},"end":{"line":35,"column":31}},"24":{"start":{"line":40,"column":8},"end":{"line":51,"column":11}},"25":{"start":{"line":41,"column":21},"end":{"line":41,"column":47}},"26":{"start":{"line":42,"column":12},"end":{"line":50,"column":13}},"27":{"start":{"line":43,"column":26},"end":{"line":43,"column":47}},"28":{"start":{"line":45,"column":16},"end":{"line":45,"column":55}},"29":{"start":{"line":46,"column":16},"end":{"line":46,"column":30}},"30":{"start":{"line":49,"column":16},"end":{"line":49,"column":31}},"31":{"start":{"line":54,"column":0},"end":{"line":54,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"showAllStations","decl":{"start":{"line":22,"column":30},"end":{"line":22,"column":45}},"loc":{"start":{"line":22,"column":48},"end":{"line":38,"column":5}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":23,"column":47},"end":{"line":23,"column":48}},"loc":{"start":{"line":23,"column":60},"end":{"line":37,"column":9}},"line":23},"10":{"name":"getOneStation","decl":{"start":{"line":39,"column":28},"end":{"line":39,"column":41}},"loc":{"start":{"line":39,"column":53},"end":{"line":52,"column":5}},"line":39},"11":{"name":"(anonymous_11)","decl":{"start":{"line":40,"column":47},"end":{"line":40,"column":48}},"loc":{"start":{"line":40,"column":60},"end":{"line":51,"column":9}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/station.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA,kDAAgC;AAEhC,MAAM,YAAY,GAAG;IACjB;;;;OAIG;IACH,eAAe,EAAE,SAAe,eAAe;;YAC3C,IAAI,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAChC,IAAI;gBACA,IAAI,GAAG,GAAG,sBAAsB,CAAC;gBACjC,IAAI,GAAG,CAAC;gBAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE1B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClB,+BAA+B;gBAC/B,oBAAoB;gBACpB,oBAAoB;aACnB;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;IACD,aAAa,EAAE,SAAe,aAAa,CAAC,SAAiB;;YACzD,IAAI,EAAE,GAAG,MAAM,YAAQ,CAAC,KAAK,EAAE,CAAC;YAChC,IAAI;gBACA,IAAI,GAAG,GAAG,qBAAqB,CAAC;gBAChC,IAAI,GAAG,CAAC;gBAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;aACjB;oBAAS;gBACN,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;aAClB;QACL,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nimport database from \"../db/db\";\n\nconst stationModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllStations: async function showAllStations() {\n        let db = await database.getDb();\n        try {\n            let sql = `CALL get_stations();`;\n            let res;\n\n            res = await db.query(sql);\n\n            return res[0];\n        // Error always empty . . .    \n        // } catch (error) {\n        //     return error;\n        } finally {\n            await db.end();\n        }\n    },\n    getOneStation: async function getOneStation(stationId: string) {\n        let db = await database.getDb();\n        try {\n            let sql = `CALL get_station(?)`;\n            let res;\n\n            res = await db.query(sql, [stationId]);\n            return res[0];\n        } finally {\n            await db.end();\n        }\n    },\n};\n\nexport default stationModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f336f04c1f8f61a2071dbe2b0bae7c657e0cb85b","contentHash":"da86069cb40ba1b2cd070f2e9972fbb70a42c937b98515f24ee26054616a04ac"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":17,"column":17},"end":{"line":35,"column":1}},"18":{"start":{"line":24,"column":8},"end":{"line":33,"column":11}},"19":{"start":{"line":26,"column":12},"end":{"line":31,"column":15}},"20":{"start":{"line":32,"column":12},"end":{"line":32,"column":22}},"21":{"start":{"line":36,"column":0},"end":{"line":36,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"getDb","decl":{"start":{"line":23,"column":20},"end":{"line":23,"column":25}},"loc":{"start":{"line":23,"column":28},"end":{"line":34,"column":5}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":47},"end":{"line":24,"column":48}},"loc":{"start":{"line":24,"column":60},"end":{"line":33,"column":9}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":2,"8":0,"9":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/db/db.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6DAAmC;AACnC,uDAA+B;AAE/B,MAAM,QAAQ,GAAG;IACb;;;;OAIG;IACH,KAAK,EAAE,SAAe,KAAK;;YACvB,IAAI,EAAoB,CAAC;YACzB,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;gBAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;gBACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;gBACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;gBACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;aAC/B,CAAC,CAAC;YAEH,OAAO,EAAE,CAAC;QACd,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,QAAQ,CAAC","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nconst database = {\n    /**\n     * Main function to connect to database.\n     * @async\n     * @returns void\n     */\n    getDb: async function getDb() {\n        let db: mysql.Connection;\n        db = await mysql.createConnection({\n            host: config.DB_HOST,\n            user: config.DB_USER,\n            database: config.DB_NAME,\n            password: config.DB_PASSWORD,\n        });\n\n        return db;\n    },\n};\n\nexport default database;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"68cca783d90a131a921166fa7fdd25740217cb2d","contentHash":"cb29471ef95a27c2c89d99327e614ab4cc94cd923511378a030d60b69616cc72"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":80}},"6":{"start":{"line":11,"column":18},"end":{"line":19,"column":1}},"7":{"start":{"line":12,"column":4},"end":{"line":18,"column":6}},"8":{"start":{"line":25,"column":26},"end":{"line":32,"column":1}},"9":{"start":{"line":26,"column":4},"end":{"line":30,"column":5}},"10":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"11":{"start":{"line":28,"column":12},"end":{"line":28,"column":64}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"13":{"start":{"line":33,"column":15},"end":{"line":33,"column":26}},"14":{"start":{"line":34,"column":24},"end":{"line":34,"column":49}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":18},"end":{"line":11,"column":19}},"loc":{"start":{"line":11,"column":24},"end":{"line":19,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":26},"end":{"line":25,"column":27}},"loc":{"start":{"line":25,"column":38},"end":{"line":32,"column":1}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":5,"11":0,"12":1,"13":1,"14":1,"15":1},"f":{"0":2,"1":1,"2":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,5]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/config.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,oDAA4B;AAE5B,wBAAwB;AACxB,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;AAsB5D,uCAAuC;AAEvC,MAAM,SAAS,GAAG,GAAQ,EAAE;IACxB,OAAO;QACH,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;QACpC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;QAC5B,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;KAC/B,CAAC;AACN,CAAC,CAAC;AAEF,wDAAwD;AACxD,2DAA2D;AAC3D,0DAA0D;AAC1D,8DAA8D;AAC9D,cAAc;AAEd,MAAM,iBAAiB,GAAG,CAAC,MAAW,EAAU,EAAE;IAC9C,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAE/C,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,gBAAgB,CAAC,CAAC;SACvD;KACJ;IACD,OAAO,MAAgB,CAAC;AAC5B,CAAC,CAAC;AAEF,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;AAE3B,MAAM,eAAe,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AAElD,kBAAe,eAAe,CAAC","sourcesContent":["import path from \"path\";\nimport dotenv from \"dotenv\";\n\n// Parsing the env file.\ndotenv.config({ path: path.resolve(__filename, \"./.env\") });\n\n// Interface to load env variables\n// Note these variables can possibly be undefined\n// as someone could skip these varibales or not setup a .env file at all\n\ninterface ENV {\n    DB_USER: string | undefined;\n    DB_PASSWORD: string | undefined;\n    DB_NAME: string | undefined;\n    DB_PORT: number | undefined;\n    DB_HOST: string | undefined;\n}\n\ninterface Config {\n    DB_USER: string;\n    DB_PASSWORD: string;\n    DB_NAME: string;\n    DB_PORT: number;\n    DB_HOST: string;\n}\n\n// Loading process.env as ENV interface\n\nconst getConfig = (): ENV => {\n    return {\n        DB_USER: process.env.DB_USER,\n        DB_PASSWORD: process.env.DB_PASSWORD,\n        DB_NAME: process.env.DB_NAME,\n        DB_PORT: Number(process.env.PORT),\n        DB_HOST: process.env.DB_HOST,\n    };\n};\n\n// Throwing an Error if any field was undefined we don't\n// want our app to run if it can't connect to DB and ensure\n// that these fields are accessible. If all is good return\n// it as Config which just removes the undefined from our type\n// definition.\n\nconst getSanitzedConfig = (config: ENV): Config => {\n    for (const [key, value] of Object.entries(config)) {\n        \n        if (value === undefined) {\n            throw new Error(`Missing key ${key} in config.env`);\n        }\n    }\n    return config as Config;\n};\n\nconst config = getConfig();\n\nconst sanitizedConfig = getSanitzedConfig(config);\n\nexport default sanitizedConfig;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a515c9d989e187eb46eda95062edd33a3a140153","contentHash":"63b5f7c8a4b1a7398a9b6f350e4ce6d13fa0bee57b70532b85a790c5a625a8ed"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/user.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":38}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":57}},"18":{"start":{"line":30,"column":0},"end":{"line":42,"column":4}},"19":{"start":{"line":30,"column":34},"end":{"line":42,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":41,"column":5}},"21":{"start":{"line":32,"column":23},"end":{"line":32,"column":58}},"22":{"start":{"line":33,"column":27},"end":{"line":33,"column":63}},"23":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"24":{"start":{"line":35,"column":12},"end":{"line":35,"column":76}},"25":{"start":{"line":37,"column":8},"end":{"line":37,"column":46}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"27":{"start":{"line":55,"column":0},"end":{"line":63,"column":4}},"28":{"start":{"line":55,"column":38},"end":{"line":63,"column":2}},"29":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"30":{"start":{"line":57,"column":22},"end":{"line":57,"column":68}},"31":{"start":{"line":58,"column":8},"end":{"line":58,"column":38}},"32":{"start":{"line":61,"column":8},"end":{"line":61,"column":36}},"33":{"start":{"line":76,"column":0},"end":{"line":95,"column":4}},"34":{"start":{"line":76,"column":39},"end":{"line":95,"column":2}},"35":{"start":{"line":77,"column":21},"end":{"line":82,"column":5}},"36":{"start":{"line":83,"column":19},"end":{"line":83,"column":32}},"37":{"start":{"line":84,"column":22},"end":{"line":89,"column":5}},"38":{"start":{"line":90,"column":4},"end":{"line":94,"column":51}},"39":{"start":{"line":108,"column":0},"end":{"line":118,"column":4}},"40":{"start":{"line":108,"column":47},"end":{"line":118,"column":2}},"41":{"start":{"line":109,"column":20},"end":{"line":109,"column":36}},"42":{"start":{"line":110,"column":19},"end":{"line":110,"column":32}},"43":{"start":{"line":111,"column":4},"end":{"line":117,"column":5}},"44":{"start":{"line":112,"column":25},"end":{"line":112,"column":80}},"45":{"start":{"line":113,"column":8},"end":{"line":113,"column":87}},"46":{"start":{"line":116,"column":8},"end":{"line":116,"column":36}},"47":{"start":{"line":131,"column":0},"end":{"line":140,"column":4}},"48":{"start":{"line":131,"column":41},"end":{"line":140,"column":2}},"49":{"start":{"line":132,"column":4},"end":{"line":139,"column":5}},"50":{"start":{"line":133,"column":26},"end":{"line":133,"column":75}},"51":{"start":{"line":134,"column":30},"end":{"line":134,"column":69}},"52":{"start":{"line":135,"column":8},"end":{"line":135,"column":79}},"53":{"start":{"line":138,"column":8},"end":{"line":138,"column":36}},"54":{"start":{"line":141,"column":0},"end":{"line":141,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":20},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":34},"end":{"line":42,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":68},"end":{"line":30,"column":69}},"loc":{"start":{"line":30,"column":81},"end":{"line":42,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":24},"end":{"line":55,"column":25}},"loc":{"start":{"line":55,"column":38},"end":{"line":63,"column":2}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":72},"end":{"line":55,"column":73}},"loc":{"start":{"line":55,"column":85},"end":{"line":63,"column":1}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":76,"column":25},"end":{"line":76,"column":26}},"loc":{"start":{"line":76,"column":39},"end":{"line":95,"column":2}},"line":76},"13":{"name":"(anonymous_13)","decl":{"start":{"line":76,"column":73},"end":{"line":76,"column":74}},"loc":{"start":{"line":76,"column":86},"end":{"line":95,"column":1}},"line":76},"14":{"name":"(anonymous_14)","decl":{"start":{"line":108,"column":33},"end":{"line":108,"column":34}},"loc":{"start":{"line":108,"column":47},"end":{"line":118,"column":2}},"line":108},"15":{"name":"(anonymous_15)","decl":{"start":{"line":108,"column":81},"end":{"line":108,"column":82}},"loc":{"start":{"line":108,"column":94},"end":{"line":118,"column":1}},"line":108},"16":{"name":"(anonymous_16)","decl":{"start":{"line":131,"column":27},"end":{"line":131,"column":28}},"loc":{"start":{"line":131,"column":41},"end":{"line":140,"column":2}},"line":131},"17":{"name":"(anonymous_17)","decl":{"start":{"line":131,"column":75},"end":{"line":131,"column":76}},"loc":{"start":{"line":131,"column":88},"end":{"line":140,"column":1}},"line":131}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/user.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, Router } from \"express\";\nimport { userInfo } from \"os\";\nconst router = Router();\n\nimport userModel from \"../models/user\";\n\ninterface UserInfo {\n    FirstName: string;\n    LastName: string;\n    PhoneNumber: string;\n    EmailAdress: string;\n    Balance: number;\n    Password: string;\n}\n\n/**\n * Users ROUTE\n * /users:\n *   get:\n *     summary: Display list of users\n *     description: Render all users from database\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\n\nrouter.get(\"/user\", async (req: Request, res: Response) => {\n    try {\n        let allUsers = await userModel.showAllUsers();\n\n        let allUsersData = JSON.parse(JSON.stringify(allUsers));\n        if (allUsersData[0].length === 0) {\n            return res.status(404).send(\"No users currently in the system\");\n        }\n        return res.status(200).send(allUsers);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/:id:\n *   get:\n *     summary: One User\n *     description: Render User by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/user/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneUser = await userModel.getOneUser(req.params.id);\n\n        res.status(200).send(oneUser);\n    } catch (error) {\n        res.status(404).send(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/:id:\n *   get:\n *     summary: Update One User\n *     description: Update User information { firstName, lastName,phoneNumber, emailAdress} by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/user/:id\", async (req: Request, res: Response) => {\n    const userInfo = {\n        firstName: req.body.firstName,\n        lastName: req.body.lastName,\n        phoneNumber: req.body.phoneNumber,\n        emailAdress: req.body.emailAdress,\n    };\n    const userID = req.params.id;\n\n    let newUserInfo = {\n        firstName: await userModel.updateUserFirstName(\n            userID,\n            userInfo.firstName\n        ),\n        lastName: await userModel.updateUserLastName(userID, userInfo.lastName),\n        phoneNumber: await userModel.updateUserPhoneNumber(\n            userID,\n            userInfo.phoneNumber\n        ),\n        emailAdress: await userModel.updateUserEmailAdress(\n            userID,\n            userInfo.emailAdress\n        ),\n    };\n\n    res.status(201).send(\n        `User with id ${userID} has been updated to:\\n\n            firstName: ${userInfo.firstName},\n            lastName: ${userInfo.lastName}, \n            phoneNumber: ${userInfo.phoneNumber}, \n            emailAdress: ${userInfo.emailAdress}`\n    );\n});\n\n/**\n * User ROUTE\n *  /user/:id:\n *   get:\n *     summary: Update balance of one User\n *     description: Update User Balance by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/user/balance/:id\", async (req: Request, res: Response) => {\n    const balance = req.body.balance;\n    const userID = req.params.id;\n    try {\n        let newBalance = await userModel.updateUserBalance(userID, balance);\n\n        res.status(201).send(\n            `User with id ${userID} added ${balance} to its balance`\n        );\n    } catch (error) {\n        res.status(404).send(error);\n    }\n});\n\n/**\n * User ROUTE\n *  /user/:id:\n *   get:\n *     summary: Delete One User\n *     description: Delete User by ID\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.delete(\"/user/:id\", async (req: Request, res: Response) => {\n    try {\n        let deletedUser = await userModel.deleteOneUser(req.params.id);\n        let deletedUserData = JSON.parse(JSON.stringify(deletedUser));\n        res.status(204).send(`User with id ${deletedUserData.id} was deleted`);\n    } catch (error) {\n        res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a2febf97203899c52fba0f66543c7ea6dc159650","contentHash":"874a9e21b94b78f6f40a2fee6b0651bc124013adb44ed70f80b3f224cdf4cf6a"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":23,"column":0},"end":{"line":35,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"22":{"start":{"line":36,"column":18},"end":{"line":106,"column":1}},"23":{"start":{"line":43,"column":8},"end":{"line":48,"column":11}},"24":{"start":{"line":44,"column":22},"end":{"line":44,"column":41}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},"27":{"start":{"line":51,"column":8},"end":{"line":56,"column":11}},"28":{"start":{"line":52,"column":22},"end":{"line":52,"column":40}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":48}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":26}},"31":{"start":{"line":59,"column":8},"end":{"line":64,"column":11}},"32":{"start":{"line":60,"column":22},"end":{"line":60,"column":56}},"33":{"start":{"line":62,"column":12},"end":{"line":62,"column":59}},"34":{"start":{"line":63,"column":12},"end":{"line":63,"column":26}},"35":{"start":{"line":67,"column":8},"end":{"line":72,"column":11}},"36":{"start":{"line":68,"column":22},"end":{"line":68,"column":55}},"37":{"start":{"line":70,"column":12},"end":{"line":70,"column":58}},"38":{"start":{"line":71,"column":12},"end":{"line":71,"column":26}},"39":{"start":{"line":75,"column":8},"end":{"line":80,"column":11}},"40":{"start":{"line":76,"column":22},"end":{"line":76,"column":58}},"41":{"start":{"line":78,"column":12},"end":{"line":78,"column":61}},"42":{"start":{"line":79,"column":12},"end":{"line":79,"column":26}},"43":{"start":{"line":83,"column":8},"end":{"line":88,"column":11}},"44":{"start":{"line":84,"column":22},"end":{"line":84,"column":58}},"45":{"start":{"line":86,"column":12},"end":{"line":86,"column":61}},"46":{"start":{"line":87,"column":12},"end":{"line":87,"column":26}},"47":{"start":{"line":91,"column":8},"end":{"line":96,"column":11}},"48":{"start":{"line":92,"column":22},"end":{"line":92,"column":54}},"49":{"start":{"line":94,"column":12},"end":{"line":94,"column":57}},"50":{"start":{"line":95,"column":12},"end":{"line":95,"column":26}},"51":{"start":{"line":99,"column":8},"end":{"line":104,"column":11}},"52":{"start":{"line":100,"column":22},"end":{"line":100,"column":43}},"53":{"start":{"line":102,"column":12},"end":{"line":102,"column":48}},"54":{"start":{"line":103,"column":12},"end":{"line":103,"column":26}},"55":{"start":{"line":107,"column":0},"end":{"line":107,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":1},"end":{"line":23,"column":2}},"loc":{"start":{"line":23,"column":13},"end":{"line":35,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":34,"column":5}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":33},"end":{"line":33,"column":9}},"line":31},"11":{"name":"showAllUsers","decl":{"start":{"line":42,"column":27},"end":{"line":42,"column":39}},"loc":{"start":{"line":42,"column":42},"end":{"line":49,"column":5}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":47},"end":{"line":43,"column":48}},"loc":{"start":{"line":43,"column":60},"end":{"line":48,"column":9}},"line":43},"13":{"name":"getOneUser","decl":{"start":{"line":50,"column":25},"end":{"line":50,"column":35}},"loc":{"start":{"line":50,"column":44},"end":{"line":57,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":56,"column":9}},"line":51},"15":{"name":"updateUserFirstName","decl":{"start":{"line":58,"column":34},"end":{"line":58,"column":53}},"loc":{"start":{"line":58,"column":73},"end":{"line":65,"column":5}},"line":58},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":64,"column":9}},"line":59},"17":{"name":"updateUserLastName","decl":{"start":{"line":66,"column":33},"end":{"line":66,"column":51}},"loc":{"start":{"line":66,"column":70},"end":{"line":73,"column":5}},"line":66},"18":{"name":"(anonymous_18)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":60},"end":{"line":72,"column":9}},"line":67},"19":{"name":"updateUserPhoneNumber","decl":{"start":{"line":74,"column":36},"end":{"line":74,"column":57}},"loc":{"start":{"line":74,"column":79},"end":{"line":81,"column":5}},"line":74},"20":{"name":"(anonymous_20)","decl":{"start":{"line":75,"column":47},"end":{"line":75,"column":48}},"loc":{"start":{"line":75,"column":60},"end":{"line":80,"column":9}},"line":75},"21":{"name":"updateUserEmailAdress","decl":{"start":{"line":82,"column":36},"end":{"line":82,"column":57}},"loc":{"start":{"line":82,"column":79},"end":{"line":89,"column":5}},"line":82},"22":{"name":"(anonymous_22)","decl":{"start":{"line":83,"column":47},"end":{"line":83,"column":48}},"loc":{"start":{"line":83,"column":60},"end":{"line":88,"column":9}},"line":83},"23":{"name":"updateUserBalance","decl":{"start":{"line":90,"column":32},"end":{"line":90,"column":49}},"loc":{"start":{"line":90,"column":67},"end":{"line":97,"column":5}},"line":90},"24":{"name":"(anonymous_24)","decl":{"start":{"line":91,"column":47},"end":{"line":91,"column":48}},"loc":{"start":{"line":91,"column":60},"end":{"line":96,"column":9}},"line":91},"25":{"name":"deleteOneUser","decl":{"start":{"line":98,"column":28},"end":{"line":98,"column":41}},"loc":{"start":{"line":98,"column":50},"end":{"line":105,"column":5}},"line":98},"26":{"name":"(anonymous_26)","decl":{"start":{"line":99,"column":47},"end":{"line":99,"column":48}},"loc":{"start":{"line":99,"column":60},"end":{"line":104,"column":9}},"line":99}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/user.ts"],"names":[],"mappings":"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","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nlet db: mysql.Connection;\n/**\n * Main function to connect to database.\n * @async\n * @returns void\n */\n(async function () {\n    db = await mysql.createConnection({\n        host: config.DB_HOST,\n        user: config.DB_USER,\n        database: config.DB_NAME,\n        password: config.DB_PASSWORD,\n    });\n\n    process.on(\"exit\", () => {\n        db.end();\n    });\n})();\n\n\nconst userModel = {\n    /**\n     * Function to show all users\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllUsers: async function showAllUsers() {\n        let sql = `CALL get_users();`;\n        let res;\n\n        res = await db.query(sql);\n\n        return res[0];\n    },\n    getOneUser: async function getOneUser(userId: string) {\n        let sql = `CALL get_user(?)`;\n        let res;\n\n        res = await db.query(sql, [userId]);\n        return res[0];\n    },\n    updateUserFirstName: async function updateUserFirstName(userId: string, firstName: string) {\n        let sql = `CALL update_user_firstname(?, ?)`;\n        let res;\n        \n        res = await db.query(sql, [userId, firstName]);\n\n        return res[0];\n    },\n    updateUserLastName: async function updateUserLastName(userId: string, lastName: string) {\n        let sql = `CALL update_user_lastname(?, ?)`;\n        let res;\n        \n        res = await db.query(sql, [userId, lastName]);\n\n        return res[0];\n    },\n    updateUserPhoneNumber: async function updateUserPhoneNumber(userId: string, phoneNumber: string) {\n        let sql = `CALL update_user_phonenumber(?, ?)`;\n        let res;\n        \n        res = await db.query(sql, [userId, phoneNumber]);\n\n        return res[0];\n    },\n    updateUserEmailAdress: async function updateUserEmailAdress(userId: string, emailAdress: string) {\n        let sql = `CALL update_user_emailadress(?, ?)`;\n        let res;\n        \n        res = await db.query(sql, [userId, emailAdress]);\n\n        return res[0];\n    },\n    updateUserBalance: async function updateUserBalance(userId: string, balance: number) {\n        let sql = `CALL update_user_balance(?, ?)`;\n        let res;\n        \n        res = await db.query(sql, [userId, balance]);\n\n        return res[0];\n    },\n    deleteOneUser: async function deleteOneUser(userId: string) {\n        let sql = `CALL delete_user(?)`;\n        let res;\n\n        res = await db.query(sql, [userId]);\n        return res[0];\n    },\n};\n\nexport default userModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9bcc48edc4583227a4402c990fe55a34dab6c7df","contentHash":"dffade08c15abee1f9898a2f09d25aa45331c7455ceb7736674ce27105f7009b"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/bike.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/bike.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":38}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":57}},"18":{"start":{"line":30,"column":0},"end":{"line":38,"column":4}},"19":{"start":{"line":30,"column":34},"end":{"line":38,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":37,"column":5}},"21":{"start":{"line":32,"column":23},"end":{"line":32,"column":58}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":46}},"23":{"start":{"line":36,"column":8},"end":{"line":36,"column":43}},"24":{"start":{"line":51,"column":0},"end":{"line":59,"column":4}},"25":{"start":{"line":51,"column":38},"end":{"line":59,"column":2}},"26":{"start":{"line":52,"column":4},"end":{"line":58,"column":5}},"27":{"start":{"line":53,"column":22},"end":{"line":53,"column":68}},"28":{"start":{"line":54,"column":8},"end":{"line":54,"column":45}},"29":{"start":{"line":57,"column":8},"end":{"line":57,"column":43}},"30":{"start":{"line":72,"column":0},"end":{"line":92,"column":4}},"31":{"start":{"line":72,"column":39},"end":{"line":92,"column":2}},"32":{"start":{"line":73,"column":4},"end":{"line":91,"column":5}},"33":{"start":{"line":74,"column":25},"end":{"line":80,"column":9}},"34":{"start":{"line":81,"column":25},"end":{"line":81,"column":146}},"35":{"start":{"line":82,"column":8},"end":{"line":87,"column":39}},"36":{"start":{"line":90,"column":8},"end":{"line":90,"column":43}},"37":{"start":{"line":93,"column":0},"end":{"line":93,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":20},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":34},"end":{"line":38,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":68},"end":{"line":30,"column":69}},"loc":{"start":{"line":30,"column":81},"end":{"line":38,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":24},"end":{"line":51,"column":25}},"loc":{"start":{"line":51,"column":38},"end":{"line":59,"column":2}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":72},"end":{"line":51,"column":73}},"loc":{"start":{"line":51,"column":85},"end":{"line":59,"column":1}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":72,"column":25},"end":{"line":72,"column":26}},"loc":{"start":{"line":72,"column":39},"end":{"line":92,"column":2}},"line":72},"13":{"name":"(anonymous_13)","decl":{"start":{"line":72,"column":73},"end":{"line":72,"column":74}},"loc":{"start":{"line":72,"column":86},"end":{"line":92,"column":1}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/bike.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/bike.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAoD;AACpD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,0DAAuC;AAUvC;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACtD,IAAI;QACA,IAAI,QAAQ,GAAG,MAAM,cAAS,CAAC,YAAY,EAAE,CAAC;QAC9C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACzC;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC1D,IAAI;QACA,IAAI,OAAO,GAAG,MAAM,cAAS,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAExD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACxC;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC3D,IAAI;QACA,MAAM,QAAQ,GAAG;YACb,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM;YACvB,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;YAC3B,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;YACzB,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM;YACvB,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;SACxB,CAAC;QACF,IAAI,UAAU,GAAG,MAAM,cAAS,CAAC,aAAa,CAC1C,QAAQ,CAAC,MAAM,EACf,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CAAC,OAAO,EAChB,QAAQ,CAAC,MAAM,EACf,QAAQ,CAAC,KAAK,CACjB,CAAC;QAEF,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;aACjB,IAAI,CAAC,gBAAgB,QAAQ,CAAC,MAAM;uBAC1B,QAAQ,CAAC,QAAQ;uBACjB,QAAQ,CAAC,OAAO;sBACjB,QAAQ,CAAC,MAAM;qBAChB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;KAClC;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Request, Response, Router } from \"express\";\nconst router = Router();\n\nimport bikeModel from \"../models/bike\";\n\ninterface BikeInfo {\n    Bikes_id: number;\n    Position: string;\n    Battery: number;\n    Status: number;\n    Speed: number;\n}\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display list for bikes\n *     description: Render all bikes\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/bike\", async (req: Request, res: Response) => {\n    try {\n        let allBikes = await bikeModel.showAllBikes();\n        return res.status(200).send(allBikes);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Display information for one bike\n *     description: Render one bike\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get(\"/bike/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneBike = await bikeModel.getOneBike(req.params.id);\n\n        return res.status(200).send(oneBike);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Bike ROUTE\n * /:\n *   get:\n *     summary: Update information for one bike\n *     description: Render one bike\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post(\"/bike/:id\", async (req: Request, res: Response) => {\n    try {\n        const bikeInfo = {\n            bikeId: req.body.bikeId,\n            position: req.body.position,\n            battery: req.body.battery,\n            status: req.body.status,\n            speed: req.body.speed,\n        };\n        let updateBike = await bikeModel.updateOneBike(\n            bikeInfo.bikeId,\n            bikeInfo.position,\n            bikeInfo.battery,\n            bikeInfo.status,\n            bikeInfo.speed\n        );\n\n        return res.status(200)\n            .send(`Bike with id ${bikeInfo.bikeId} has been updated:\\n\n            Postion: ${bikeInfo.position},\n            Battery: ${bikeInfo.battery},\n            Status: ${bikeInfo.status},\n            Speed: ${bikeInfo.speed}`);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"03de031890c364bda71312cec953060cae2c1406","contentHash":"a0214320bf77517e27e25cebd533f9f27f82896e471e7fc8ca4a77aaf5c0fc32"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":23,"column":0},"end":{"line":35,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"22":{"start":{"line":36,"column":18},"end":{"line":66,"column":1}},"23":{"start":{"line":43,"column":8},"end":{"line":48,"column":11}},"24":{"start":{"line":44,"column":22},"end":{"line":44,"column":41}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},"27":{"start":{"line":51,"column":8},"end":{"line":56,"column":11}},"28":{"start":{"line":52,"column":22},"end":{"line":52,"column":40}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":48}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":26}},"31":{"start":{"line":59,"column":8},"end":{"line":64,"column":11}},"32":{"start":{"line":60,"column":22},"end":{"line":60,"column":55}},"33":{"start":{"line":62,"column":12},"end":{"line":62,"column":82}},"34":{"start":{"line":63,"column":12},"end":{"line":63,"column":26}},"35":{"start":{"line":67,"column":0},"end":{"line":67,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":1},"end":{"line":23,"column":2}},"loc":{"start":{"line":23,"column":13},"end":{"line":35,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":34,"column":5}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":33},"end":{"line":33,"column":9}},"line":31},"11":{"name":"showAllBikes","decl":{"start":{"line":42,"column":27},"end":{"line":42,"column":39}},"loc":{"start":{"line":42,"column":42},"end":{"line":49,"column":5}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":47},"end":{"line":43,"column":48}},"loc":{"start":{"line":43,"column":60},"end":{"line":48,"column":9}},"line":43},"13":{"name":"getOneBike","decl":{"start":{"line":50,"column":25},"end":{"line":50,"column":35}},"loc":{"start":{"line":50,"column":44},"end":{"line":57,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":56,"column":9}},"line":51},"15":{"name":"updateOneBike","decl":{"start":{"line":58,"column":28},"end":{"line":58,"column":41}},"loc":{"start":{"line":58,"column":84},"end":{"line":65,"column":5}},"line":58},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":64,"column":9}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/bike.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,6DAAmC;AACnC,uDAA+B;AAE/B,IAAI,EAAoB,CAAC;AACzB;;;;GAIG;AACH,CAAC;;QACG,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;YACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;SAC/B,CAAC,CAAC;QAEH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACpB,EAAE,CAAC,GAAG,EAAE,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;CAAA,CAAC,EAAE,CAAC;AAEL,MAAM,SAAS,GAAG;IACd;;;;OAIG;IACH,YAAY,EAAE,SAAe,YAAY;;YACrC,IAAI,GAAG,GAAG,mBAAmB,CAAC;YAC9B,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE1B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,UAAU,EAAE,SAAe,UAAU,CAAC,MAAc;;YAChD,IAAI,GAAG,GAAG,kBAAkB,CAAC;YAC7B,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,aAAa,EAAE,SAAe,aAAa,CACvC,MAAc,EACd,QAAgB,EAChB,OAAe,EACf,MAAc,EACd,KAAa;;YAEb,IAAI,GAAG,GAAG,iCAAiC,CAAC;YAC5C,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;YACtE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,SAAS,CAAC","sourcesContent":["import { stat } from \"fs\";\nimport mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nlet db: mysql.Connection;\n/**\n * Main function to connect to database.\n * @async\n * @returns void\n */\n(async function () {\n    db = await mysql.createConnection({\n        host: config.DB_HOST,\n        user: config.DB_USER,\n        database: config.DB_NAME,\n        password: config.DB_PASSWORD,\n    });\n\n    process.on(\"exit\", () => {\n        db.end();\n    });\n})();\n\nconst bikeModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllBikes: async function showAllBikes() {\n        let sql = `CALL get_bikes();`;\n        let res;\n\n        res = await db.query(sql);\n\n        return res[0];\n    },\n    getOneBike: async function getOneBike(bikeId: string) {\n        let sql = `CALL get_bike(?)`;\n        let res;\n\n        res = await db.query(sql, [bikeId]);\n        return res[0];\n    },\n    updateOneBike: async function updateOneBike(\n        bikeId: number,\n        position: string,\n        battery: number,\n        status: number,\n        speed: number\n    ) {\n        let sql = `CALL update_bike(?, ?, ?, ?, ?)`;\n        let res;\n\n        res = await db.query(sql, [bikeId, position, battery, status, speed]);\n        return res[0];\n    },\n};\n\nexport default bikeModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b4d9924321e1ad5c12ce2d1537c2429052c23673","contentHash":"14a39c04af6705023ce9b70ab161075363a189dec8b7a2bc95f33ad8a3f5d4b1"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/rent.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/rent.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":38}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":57}},"18":{"start":{"line":30,"column":0},"end":{"line":42,"column":4}},"19":{"start":{"line":30,"column":34},"end":{"line":42,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":41,"column":5}},"21":{"start":{"line":32,"column":23},"end":{"line":32,"column":58}},"22":{"start":{"line":33,"column":27},"end":{"line":33,"column":63}},"23":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"24":{"start":{"line":35,"column":12},"end":{"line":35,"column":76}},"25":{"start":{"line":37,"column":8},"end":{"line":37,"column":46}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"27":{"start":{"line":55,"column":0},"end":{"line":69,"column":4}},"28":{"start":{"line":55,"column":38},"end":{"line":69,"column":2}},"29":{"start":{"line":56,"column":4},"end":{"line":68,"column":5}},"30":{"start":{"line":57,"column":22},"end":{"line":57,"column":68}},"31":{"start":{"line":58,"column":26},"end":{"line":58,"column":61}},"32":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"33":{"start":{"line":60,"column":12},"end":{"line":62,"column":68}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":45}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":43}},"36":{"start":{"line":82,"column":0},"end":{"line":96,"column":4}},"37":{"start":{"line":82,"column":43},"end":{"line":96,"column":2}},"38":{"start":{"line":83,"column":4},"end":{"line":95,"column":5}},"39":{"start":{"line":84,"column":27},"end":{"line":84,"column":79}},"40":{"start":{"line":85,"column":31},"end":{"line":85,"column":71}},"41":{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},"42":{"start":{"line":87,"column":12},"end":{"line":89,"column":73}},"43":{"start":{"line":91,"column":8},"end":{"line":91,"column":50}},"44":{"start":{"line":94,"column":8},"end":{"line":94,"column":43}},"45":{"start":{"line":109,"column":0},"end":{"line":119,"column":4}},"46":{"start":{"line":109,"column":44},"end":{"line":119,"column":2}},"47":{"start":{"line":110,"column":17},"end":{"line":110,"column":32}},"48":{"start":{"line":111,"column":17},"end":{"line":111,"column":30}},"49":{"start":{"line":112,"column":4},"end":{"line":118,"column":5}},"50":{"start":{"line":113,"column":22},"end":{"line":113,"column":72}},"51":{"start":{"line":114,"column":8},"end":{"line":114,"column":56}},"52":{"start":{"line":117,"column":8},"end":{"line":117,"column":43}},"53":{"start":{"line":132,"column":0},"end":{"line":141,"column":4}},"54":{"start":{"line":132,"column":39},"end":{"line":141,"column":2}},"55":{"start":{"line":133,"column":17},"end":{"line":133,"column":30}},"56":{"start":{"line":134,"column":4},"end":{"line":140,"column":5}},"57":{"start":{"line":135,"column":25},"end":{"line":135,"column":67}},"58":{"start":{"line":136,"column":8},"end":{"line":136,"column":79}},"59":{"start":{"line":139,"column":8},"end":{"line":139,"column":43}},"60":{"start":{"line":142,"column":0},"end":{"line":142,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":20},"end":{"line":30,"column":21}},"loc":{"start":{"line":30,"column":34},"end":{"line":42,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":68},"end":{"line":30,"column":69}},"loc":{"start":{"line":30,"column":81},"end":{"line":42,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":24},"end":{"line":55,"column":25}},"loc":{"start":{"line":55,"column":38},"end":{"line":69,"column":2}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":72},"end":{"line":55,"column":73}},"loc":{"start":{"line":55,"column":85},"end":{"line":69,"column":1}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":29},"end":{"line":82,"column":30}},"loc":{"start":{"line":82,"column":43},"end":{"line":96,"column":2}},"line":82},"13":{"name":"(anonymous_13)","decl":{"start":{"line":82,"column":77},"end":{"line":82,"column":78}},"loc":{"start":{"line":82,"column":90},"end":{"line":96,"column":1}},"line":82},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":30},"end":{"line":109,"column":31}},"loc":{"start":{"line":109,"column":44},"end":{"line":119,"column":2}},"line":109},"15":{"name":"(anonymous_15)","decl":{"start":{"line":109,"column":78},"end":{"line":109,"column":79}},"loc":{"start":{"line":109,"column":91},"end":{"line":119,"column":1}},"line":109},"16":{"name":"(anonymous_16)","decl":{"start":{"line":132,"column":25},"end":{"line":132,"column":26}},"loc":{"start":{"line":132,"column":39},"end":{"line":141,"column":2}},"line":132},"17":{"name":"(anonymous_17)","decl":{"start":{"line":132,"column":73},"end":{"line":132,"column":74}},"loc":{"start":{"line":132,"column":86},"end":{"line":141,"column":1}},"line":132}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"9":{"loc":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},{"start":{"line":59,"column":8},"end":{"line":63,"column":9}}],"line":59},"10":{"loc":{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},{"start":{"line":86,"column":8},"end":{"line":90,"column":9}}],"line":86}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/rent.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/rent.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, Router } from \"express\";\nconst router = Router();\n\nimport rentModel from \"../models/rent\";\n\ninterface RentInfo {\n    Id: number;\n    User_id: number;\n    Start: string;\n    StartTimeStamp: string;\n    Destination: number;\n    DestinationTimeStamp: string;\n    Bike_id: number;\n}\n\n/**\n * Rent ROUTE\n * /:\n *   get:\n *     summary: Display\n *     description: Render welcome page\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get(\"/rent\", async (req: Request, res: Response) => {\n    try {\n        let allRents = await rentModel.showAllRents();\n        let allRentsData = JSON.parse(JSON.stringify(allRents));\n        if (allRentsData[0].length === 0) {\n            return res.status(404).send(\"No rents currently in the system\");\n        }\n        return res.status(200).send(allRents);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/:id:\n *   get:\n *     summary: One rent\n *     description: Render rent by rentId\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get(\"/rent/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneRent = await rentModel.getOneRent(req.params.id);\n        let oneRentData = JSON.parse(JSON.stringify(oneRent));\n        if (oneRentData[0].length === 0) {\n            return res\n                .status(404)\n                .send(`No rent with Id ${req.params.id} was found`);\n        }\n        return res.status(200).send(oneRent);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/user/:id:\n *   get:\n *     summary: All rents by user\n *     description: Render rent by userId\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get(\"/rent/user/:id\", async (req: Request, res: Response) => {\n    try {\n        let rentByUserId = await rentModel.getRentsByUserId(req.params.id);\n\n        let rentByUserIdData = JSON.parse(JSON.stringify(rentByUserId));\n\n        if (rentByUserIdData[0].length === 0) {\n            return res\n                .status(404)\n                .send(`No rents for user Id ${req.params.id} was found`);\n        }\n        return res.status(200).send(rentByUserId);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/user/:id:\n *   get:\n *     summary: Create a new rent\n *     description: Create a active rent to user and taken bike\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post(\"/rent/user/:id\", async (req: Request, res: Response) => {\n    let bikeId = req.body.bikeId;\n    let userId = req.params.id;\n    try {\n        let newRent = await rentModel.createOneRent(userId, bikeId);\n\n        return res.status(200).send(`New rent created`);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Rent ROUTE\n *  /rent/user/:id:\n *   get:\n *     summary: Update active rent\n *     description: Update rent for bike and user\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post(\"/rent/:id\", async (req: Request, res: Response) => {\n    let rentId = req.params.id;\n    try {\n        let updateRent = await rentModel.updateOneRent(rentId);\n\n        return res.status(200).send(`Rent with id ${rentId} has been updated`);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f0612a033571ecd1da2f72787dfa99f9d48e76f3","contentHash":"6ceb6e2b9611f59e87133453830f53d9d35ae257a6ef5a85bf01a76a350a377f"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":23,"column":0},"end":{"line":35,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"22":{"start":{"line":36,"column":18},"end":{"line":77,"column":1}},"23":{"start":{"line":38,"column":8},"end":{"line":43,"column":11}},"24":{"start":{"line":39,"column":22},"end":{"line":39,"column":40}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":38}},"26":{"start":{"line":42,"column":12},"end":{"line":42,"column":26}},"27":{"start":{"line":46,"column":8},"end":{"line":51,"column":11}},"28":{"start":{"line":47,"column":22},"end":{"line":47,"column":40}},"29":{"start":{"line":49,"column":12},"end":{"line":49,"column":48}},"30":{"start":{"line":50,"column":12},"end":{"line":50,"column":26}},"31":{"start":{"line":54,"column":8},"end":{"line":59,"column":11}},"32":{"start":{"line":55,"column":22},"end":{"line":55,"column":49}},"33":{"start":{"line":57,"column":12},"end":{"line":57,"column":48}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":26}},"35":{"start":{"line":62,"column":8},"end":{"line":67,"column":11}},"36":{"start":{"line":63,"column":22},"end":{"line":63,"column":46}},"37":{"start":{"line":65,"column":12},"end":{"line":65,"column":56}},"38":{"start":{"line":66,"column":12},"end":{"line":66,"column":26}},"39":{"start":{"line":70,"column":8},"end":{"line":75,"column":11}},"40":{"start":{"line":71,"column":22},"end":{"line":71,"column":43}},"41":{"start":{"line":73,"column":12},"end":{"line":73,"column":48}},"42":{"start":{"line":74,"column":12},"end":{"line":74,"column":26}},"43":{"start":{"line":78,"column":0},"end":{"line":78,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":1},"end":{"line":23,"column":2}},"loc":{"start":{"line":23,"column":13},"end":{"line":35,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":34,"column":5}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":33},"end":{"line":33,"column":9}},"line":31},"11":{"name":"showAllRents","decl":{"start":{"line":37,"column":27},"end":{"line":37,"column":39}},"loc":{"start":{"line":37,"column":42},"end":{"line":44,"column":5}},"line":37},"12":{"name":"(anonymous_12)","decl":{"start":{"line":38,"column":47},"end":{"line":38,"column":48}},"loc":{"start":{"line":38,"column":60},"end":{"line":43,"column":9}},"line":38},"13":{"name":"getOneRent","decl":{"start":{"line":45,"column":25},"end":{"line":45,"column":35}},"loc":{"start":{"line":45,"column":44},"end":{"line":52,"column":5}},"line":45},"14":{"name":"(anonymous_14)","decl":{"start":{"line":46,"column":47},"end":{"line":46,"column":48}},"loc":{"start":{"line":46,"column":60},"end":{"line":51,"column":9}},"line":46},"15":{"name":"getRentsByUserId","decl":{"start":{"line":53,"column":31},"end":{"line":53,"column":47}},"loc":{"start":{"line":53,"column":56},"end":{"line":60,"column":5}},"line":53},"16":{"name":"(anonymous_16)","decl":{"start":{"line":54,"column":47},"end":{"line":54,"column":48}},"loc":{"start":{"line":54,"column":60},"end":{"line":59,"column":9}},"line":54},"17":{"name":"createOneRent","decl":{"start":{"line":61,"column":28},"end":{"line":61,"column":41}},"loc":{"start":{"line":61,"column":58},"end":{"line":68,"column":5}},"line":61},"18":{"name":"(anonymous_18)","decl":{"start":{"line":62,"column":47},"end":{"line":62,"column":48}},"loc":{"start":{"line":62,"column":60},"end":{"line":67,"column":9}},"line":62},"19":{"name":"createOneRent","decl":{"start":{"line":69,"column":28},"end":{"line":69,"column":41}},"loc":{"start":{"line":69,"column":50},"end":{"line":76,"column":5}},"line":69},"20":{"name":"(anonymous_20)","decl":{"start":{"line":70,"column":47},"end":{"line":70,"column":48}},"loc":{"start":{"line":70,"column":60},"end":{"line":75,"column":9}},"line":70}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/rent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6DAAmC;AACnC,uDAA+B;AAE/B,IAAI,EAAoB,CAAC;AACzB;;;;GAIG;AACH,CAAC;;QACG,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;YACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;SAC/B,CAAC,CAAC;QAEH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACpB,EAAE,CAAC,GAAG,EAAE,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;CAAA,CAAC,EAAE,CAAC;AAEL,MAAM,SAAS,GAAG;IACd,YAAY,EAAE,SAAe,YAAY;;YACrC,IAAI,GAAG,GAAG,kBAAkB,CAAC;YAC7B,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE1B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,UAAU,EAAE,SAAe,UAAU,CAAC,MAAc;;YAChD,IAAI,GAAG,GAAG,kBAAkB,CAAC;YAC7B,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,gBAAgB,EAAE,SAAe,gBAAgB,CAAC,MAAc;;YAC5D,IAAI,GAAG,GAAG,2BAA2B,CAAC;YACtC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,aAAa,EAAE,SAAe,aAAa,CAAC,MAAc,EAAE,MAAc;;YACtE,IAAI,GAAG,GAAG,wBAAwB,CAAC;YACnC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YAC5C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,aAAa,EAAE,SAAe,aAAa,CAAC,MAAc;;YACtD,IAAI,GAAG,GAAG,qBAAqB,CAAC;YAChC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,SAAS,CAAC","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nlet db: mysql.Connection;\n/**\n * Main function to connect to database.\n * @async\n * @returns void\n */\n(async function () {\n    db = await mysql.createConnection({\n        host: config.DB_HOST,\n        user: config.DB_USER,\n        database: config.DB_NAME,\n        password: config.DB_PASSWORD,\n    });\n\n    process.on(\"exit\", () => {\n        db.end();\n    });\n})();\n\nconst rentModel = {\n    showAllRents: async function showAllRents() {\n        let sql = `CALL get_rents()`;\n        let res;\n\n        res = await db.query(sql);\n\n        return res[0];\n    },\n    getOneRent: async function getOneRent(rentId: string) {\n        let sql = `CALL get_rent(?)`;\n        let res;\n\n        res = await db.query(sql, [rentId]);\n        return res[0];\n    },\n    getRentsByUserId: async function getRentsByUserId(userId: string) {\n        let sql = `CALL get_rents_by_user(?)`;\n        let res;\n\n        res = await db.query(sql, [userId]);\n        return res[0];\n    },\n    createOneRent: async function createOneRent(userId: string, bikeId: string) {\n        let sql = `CALL create_rent(?, ?)`;\n        let res;\n\n        res = await db.query(sql, [userId, bikeId]);\n        return res[0];\n    },\n    updateOneRent: async function createOneRent(rentId: string) {\n        let sql = `CALL update_rent(?)`;\n        let res;\n\n        res = await db.query(sql, [rentId]);\n        return res[0];\n    },\n};\n\nexport default rentModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"878722196ec7f0413765300b0aa24bbdf8dca8d9","contentHash":"b41f34fd2aa09e92df623643efe009578bb7d1978fa7eb317781a3bd7bc94802"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/admin.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/admin.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":16},"end":{"line":16,"column":59}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":30,"column":0},"end":{"line":42,"column":4}},"19":{"start":{"line":30,"column":35},"end":{"line":42,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":41,"column":5}},"21":{"start":{"line":32,"column":24},"end":{"line":32,"column":61}},"22":{"start":{"line":33,"column":28},"end":{"line":33,"column":65}},"23":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"24":{"start":{"line":35,"column":12},"end":{"line":35,"column":77}},"25":{"start":{"line":37,"column":8},"end":{"line":37,"column":47}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":36}},"27":{"start":{"line":55,"column":0},"end":{"line":69,"column":4}},"28":{"start":{"line":55,"column":39},"end":{"line":69,"column":2}},"29":{"start":{"line":56,"column":4},"end":{"line":68,"column":5}},"30":{"start":{"line":57,"column":23},"end":{"line":57,"column":71}},"31":{"start":{"line":58,"column":27},"end":{"line":58,"column":63}},"32":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"33":{"start":{"line":60,"column":12},"end":{"line":62,"column":68}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":46}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":43}},"36":{"start":{"line":83,"column":0},"end":{"line":103,"column":4}},"37":{"start":{"line":83,"column":36},"end":{"line":103,"column":2}},"38":{"start":{"line":84,"column":4},"end":{"line":102,"column":5}},"39":{"start":{"line":85,"column":26},"end":{"line":92,"column":9}},"40":{"start":{"line":93,"column":23},"end":{"line":93,"column":187}},"41":{"start":{"line":94,"column":8},"end":{"line":98,"column":56}},"42":{"start":{"line":101,"column":8},"end":{"line":101,"column":43}},"43":{"start":{"line":104,"column":0},"end":{"line":104,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":21},"end":{"line":30,"column":22}},"loc":{"start":{"line":30,"column":35},"end":{"line":42,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":69},"end":{"line":30,"column":70}},"loc":{"start":{"line":30,"column":82},"end":{"line":42,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":25},"end":{"line":55,"column":26}},"loc":{"start":{"line":55,"column":39},"end":{"line":69,"column":2}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":73},"end":{"line":55,"column":74}},"loc":{"start":{"line":55,"column":86},"end":{"line":69,"column":1}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":83,"column":22},"end":{"line":83,"column":23}},"loc":{"start":{"line":83,"column":36},"end":{"line":103,"column":2}},"line":83},"13":{"name":"(anonymous_13)","decl":{"start":{"line":83,"column":70},"end":{"line":83,"column":71}},"loc":{"start":{"line":83,"column":83},"end":{"line":103,"column":1}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"9":{"loc":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},{"start":{"line":59,"column":8},"end":{"line":63,"column":9}}],"line":59}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/admin.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/admin.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, Router } from \"express\";\nimport adminModel from \"../models/admin\";\nconst router = Router();\n\ninterface AdminInfo {\n    FirstName: string;\n    LastName: string;\n    PhoneNumber: string;\n    EmailAdress: string;\n    Authority: number;\n    Password: string;\n}\n\n/**\n * Admin ROUTE\n * /:\n *   get:\n *     summary: Display all admins\n *     description: Render admin list\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/admin\", async (req: Request, res: Response) => {\n    try {\n        let allAdmins = await adminModel.showAllAdmins();\n\n        let allAdminsData = JSON.parse(JSON.stringify(allAdmins));\n\n        if (allAdminsData[0].length === 0) {\n            return res.status(404).send(\"No admins currently in the system\");\n        }\n        return res.status(200).send(allAdmins);\n    } catch (error) {\n        res.status(404).send(error);\n    }\n});\n\n/**\n * Admin ROUTE\n *  /admin/:id:\n *   get:\n *     summary: One admin\n *     description: Render admin by adminId\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.get(\"/admin/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneAdmin = await adminModel.getOneAdmin(req.params.id);\n        let oneAdminData = JSON.parse(JSON.stringify(oneAdmin));\n        if (oneAdminData[0].length === 0) {\n            return res\n                .status(404)\n                .send(`No admin for Id ${req.params.id} was found`);\n        }\n        return res.status(200).send(oneAdmin);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Admin ROUTE\n *  /admin/:id:\n *   get:\n *     summary: Create one admin\n *     description: Create Admin with information\n *     { firstName, lastName,phoneNumber, emailAdress }\n *  @param {Request}  req  The incoming request.\n *  @param {Response} res  The outgoing response.\n *  @param {Function} next Next to call in chain of middleware.\n *\n * @returns {Response}\n */\nrouter.post(\"/admin\", async (req: Request, res: Response) => {\n    try {\n        const adminInfo = {\n            firstName: req.body.firstName,\n            lastName: req.body.lastName,\n            phoneNumber: req.body.phoneNumber,\n            emailAdress: req.body.emailAdress,\n            authority: req.body.authority,\n            password: req.body.password,\n        };\n\n        let newAdmin = await adminModel.createOneAdmin(\n            adminInfo.firstName,\n            adminInfo.lastName,\n            adminInfo.phoneNumber,\n            adminInfo.emailAdress,\n            adminInfo.authority,\n            adminInfo.password\n        );\n\n        res.status(201).send(\n            `Admin has been created with the following information:\\n\n                firstName: ${adminInfo.firstName},\n                lastName: ${adminInfo.lastName}, \n                phoneNumber: ${adminInfo.phoneNumber}, \n                emailAdress: ${adminInfo.emailAdress}`\n        );\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2af0c7787632162850396ad47e7ab57da6bdc2d9","contentHash":"e1cecc30cb7a1b414107c4097b494583da62e0a9a3d388b8e6278d5a118d7d8b"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":23,"column":0},"end":{"line":35,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"22":{"start":{"line":36,"column":19},"end":{"line":73,"column":1}},"23":{"start":{"line":43,"column":8},"end":{"line":48,"column":11}},"24":{"start":{"line":44,"column":22},"end":{"line":44,"column":42}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},"27":{"start":{"line":51,"column":8},"end":{"line":56,"column":11}},"28":{"start":{"line":52,"column":22},"end":{"line":52,"column":41}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":49}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":26}},"31":{"start":{"line":59,"column":8},"end":{"line":71,"column":11}},"32":{"start":{"line":60,"column":22},"end":{"line":60,"column":59}},"33":{"start":{"line":62,"column":12},"end":{"line":69,"column":15}},"34":{"start":{"line":70,"column":12},"end":{"line":70,"column":26}},"35":{"start":{"line":74,"column":0},"end":{"line":74,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":1},"end":{"line":23,"column":2}},"loc":{"start":{"line":23,"column":13},"end":{"line":35,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":34,"column":5}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":33},"end":{"line":33,"column":9}},"line":31},"11":{"name":"showAllAdmins","decl":{"start":{"line":42,"column":28},"end":{"line":42,"column":41}},"loc":{"start":{"line":42,"column":44},"end":{"line":49,"column":5}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":47},"end":{"line":43,"column":48}},"loc":{"start":{"line":43,"column":60},"end":{"line":48,"column":9}},"line":43},"13":{"name":"getOneAdmin","decl":{"start":{"line":50,"column":26},"end":{"line":50,"column":37}},"loc":{"start":{"line":50,"column":47},"end":{"line":57,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":56,"column":9}},"line":51},"15":{"name":"createOneAdmin","decl":{"start":{"line":58,"column":29},"end":{"line":58,"column":43}},"loc":{"start":{"line":58,"column":112},"end":{"line":72,"column":5}},"line":58},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":71,"column":9}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/admin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6DAAmC;AACnC,uDAA+B;AAE/B,IAAI,EAAoB,CAAC;AACzB;;;;GAIG;AACH,CAAC;;QACG,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;YACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;SAC/B,CAAC,CAAC;QAEH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACpB,EAAE,CAAC,GAAG,EAAE,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;CAAA,CAAC,EAAE,CAAC;AAEL,MAAM,UAAU,GAAG;IACf;;;;OAIG;IACH,aAAa,EAAE,SAAe,aAAa;;YACvC,IAAI,GAAG,GAAG,oBAAoB,CAAC;YAC/B,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE1B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,WAAW,EAAE,SAAe,WAAW,CAAC,OAAe;;YACnD,IAAI,GAAG,GAAG,mBAAmB,CAAC;YAC9B,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YACrC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,cAAc,EAAE,SAAe,cAAc,CACzC,SAAiB,EACjB,QAAgB,EAChB,WAAmB,EACnB,WAAmB,EACnB,SAAiB,EACjB,QAAgB;;YAEhB,IAAI,GAAG,GAAG,qCAAqC,CAAC;YAChD,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;gBACtB,SAAS;gBACT,QAAQ;gBACR,WAAW;gBACX,WAAW;gBACX,SAAS;gBACT,QAAQ;aACX,CAAC,CAAC;YACH,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,UAAU,CAAC","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nlet db: mysql.Connection;\n/**\n * Main function to connect to database.\n * @async\n * @returns void\n */\n(async function () {\n    db = await mysql.createConnection({\n        host: config.DB_HOST,\n        user: config.DB_USER,\n        database: config.DB_NAME,\n        password: config.DB_PASSWORD,\n    });\n\n    process.on(\"exit\", () => {\n        db.end();\n    });\n})();\n\nconst adminModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllAdmins: async function showAllAdmins() {\n        let sql = `CALL get_admins();`;\n        let res;\n\n        res = await db.query(sql);\n\n        return res[0];\n    },\n    getOneAdmin: async function getOneAdmin(adminId: string) {\n        let sql = `CALL get_admin(?)`;\n        let res;\n\n        res = await db.query(sql, [adminId]);\n        return res[0];\n    },\n    createOneAdmin: async function createOneAdmin(\n        firstName: string,\n        lastName: string,\n        phoneNumber: number,\n        emailAdress: string,\n        authority: number,\n        password: string,\n    ) {\n        let sql = `CALL create_admin(?, ?, ?, ?, ?, ?)`;\n        let res;\n\n        res = await db.query(sql, [\n            firstName,\n            lastName,\n            phoneNumber,\n            emailAdress,\n            authority,\n            password,\n        ]);\n        return res[0];\n    },\n};\n\nexport default adminModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c99890502ca921c7bd894e4a3ab243d93897c830","contentHash":"826699e03ad8f0c91365181e92001494a9db68237807d15abcf50a859c092e8d"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/invoice.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/invoice.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":63}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":30,"column":0},"end":{"line":42,"column":4}},"19":{"start":{"line":30,"column":37},"end":{"line":42,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":41,"column":5}},"21":{"start":{"line":32,"column":26},"end":{"line":32,"column":67}},"22":{"start":{"line":33,"column":30},"end":{"line":33,"column":69}},"23":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"24":{"start":{"line":35,"column":12},"end":{"line":35,"column":79}},"25":{"start":{"line":37,"column":8},"end":{"line":37,"column":49}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"27":{"start":{"line":55,"column":0},"end":{"line":69,"column":4}},"28":{"start":{"line":55,"column":41},"end":{"line":69,"column":2}},"29":{"start":{"line":56,"column":4},"end":{"line":68,"column":5}},"30":{"start":{"line":57,"column":25},"end":{"line":57,"column":77}},"31":{"start":{"line":58,"column":29},"end":{"line":58,"column":67}},"32":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"33":{"start":{"line":60,"column":12},"end":{"line":62,"column":75}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":48}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":43}},"36":{"start":{"line":82,"column":0},"end":{"line":96,"column":4}},"37":{"start":{"line":82,"column":46},"end":{"line":96,"column":2}},"38":{"start":{"line":83,"column":4},"end":{"line":95,"column":5}},"39":{"start":{"line":84,"column":27},"end":{"line":84,"column":85}},"40":{"start":{"line":85,"column":31},"end":{"line":85,"column":71}},"41":{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},"42":{"start":{"line":87,"column":12},"end":{"line":89,"column":95}},"43":{"start":{"line":91,"column":8},"end":{"line":91,"column":50}},"44":{"start":{"line":94,"column":8},"end":{"line":94,"column":43}},"45":{"start":{"line":110,"column":0},"end":{"line":128,"column":4}},"46":{"start":{"line":110,"column":47},"end":{"line":128,"column":2}},"47":{"start":{"line":111,"column":4},"end":{"line":127,"column":5}},"48":{"start":{"line":112,"column":28},"end":{"line":117,"column":9}},"49":{"start":{"line":118,"column":27},"end":{"line":118,"column":147}},"50":{"start":{"line":119,"column":8},"end":{"line":123,"column":48}},"51":{"start":{"line":126,"column":8},"end":{"line":126,"column":43}},"52":{"start":{"line":141,"column":0},"end":{"line":151,"column":4}},"53":{"start":{"line":141,"column":49},"end":{"line":151,"column":2}},"54":{"start":{"line":142,"column":4},"end":{"line":150,"column":5}},"55":{"start":{"line":143,"column":24},"end":{"line":143,"column":47}},"56":{"start":{"line":144,"column":21},"end":{"line":144,"column":36}},"57":{"start":{"line":145,"column":31},"end":{"line":145,"column":93}},"58":{"start":{"line":146,"column":8},"end":{"line":146,"column":93}},"59":{"start":{"line":149,"column":8},"end":{"line":149,"column":43}},"60":{"start":{"line":164,"column":0},"end":{"line":174,"column":4}},"61":{"start":{"line":164,"column":49},"end":{"line":174,"column":2}},"62":{"start":{"line":165,"column":4},"end":{"line":173,"column":5}},"63":{"start":{"line":166,"column":24},"end":{"line":166,"column":47}},"64":{"start":{"line":167,"column":21},"end":{"line":167,"column":36}},"65":{"start":{"line":168,"column":31},"end":{"line":168,"column":93}},"66":{"start":{"line":169,"column":8},"end":{"line":169,"column":93}},"67":{"start":{"line":172,"column":8},"end":{"line":172,"column":43}},"68":{"start":{"line":175,"column":0},"end":{"line":175,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},"loc":{"start":{"line":30,"column":37},"end":{"line":42,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":71},"end":{"line":30,"column":72}},"loc":{"start":{"line":30,"column":84},"end":{"line":42,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":27},"end":{"line":55,"column":28}},"loc":{"start":{"line":55,"column":41},"end":{"line":69,"column":2}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":75},"end":{"line":55,"column":76}},"loc":{"start":{"line":55,"column":88},"end":{"line":69,"column":1}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":32},"end":{"line":82,"column":33}},"loc":{"start":{"line":82,"column":46},"end":{"line":96,"column":2}},"line":82},"13":{"name":"(anonymous_13)","decl":{"start":{"line":82,"column":80},"end":{"line":82,"column":81}},"loc":{"start":{"line":82,"column":93},"end":{"line":96,"column":1}},"line":82},"14":{"name":"(anonymous_14)","decl":{"start":{"line":110,"column":33},"end":{"line":110,"column":34}},"loc":{"start":{"line":110,"column":47},"end":{"line":128,"column":2}},"line":110},"15":{"name":"(anonymous_15)","decl":{"start":{"line":110,"column":81},"end":{"line":110,"column":82}},"loc":{"start":{"line":110,"column":94},"end":{"line":128,"column":1}},"line":110},"16":{"name":"(anonymous_16)","decl":{"start":{"line":141,"column":35},"end":{"line":141,"column":36}},"loc":{"start":{"line":141,"column":49},"end":{"line":151,"column":2}},"line":141},"17":{"name":"(anonymous_17)","decl":{"start":{"line":141,"column":83},"end":{"line":141,"column":84}},"loc":{"start":{"line":141,"column":96},"end":{"line":151,"column":1}},"line":141},"18":{"name":"(anonymous_18)","decl":{"start":{"line":164,"column":35},"end":{"line":164,"column":36}},"loc":{"start":{"line":164,"column":49},"end":{"line":174,"column":2}},"line":164},"19":{"name":"(anonymous_19)","decl":{"start":{"line":164,"column":83},"end":{"line":164,"column":84}},"loc":{"start":{"line":164,"column":96},"end":{"line":174,"column":1}},"line":164}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"9":{"loc":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},{"start":{"line":59,"column":8},"end":{"line":63,"column":9}}],"line":59},"10":{"loc":{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":90,"column":9}},{"start":{"line":86,"column":8},"end":{"line":90,"column":9}}],"line":86}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/invoice.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/invoice.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, Router } from \"express\";\nimport invoiceModel from \"../models/invoice\";\nconst router = Router();\n\ninterface InvoiceInfo {\n    RentId: number;\n    UserId: number;\n    Amount: number;\n    Status: number;\n}\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Display all Invoices\n *     description: Render list of invoices\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/invoice\", async (req: Request, res: Response) => {\n    try {\n        let allInvoices = await invoiceModel.showAllInvoices();\n\n        let allInvoicesData = JSON.parse(JSON.stringify(allInvoices));\n        if (allInvoicesData[0].length === 0) {\n            return res.status(404).send(\"No Invoices currently in the system\");\n        }\n        return res.status(200).send(allInvoices);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Display information for one invoice\n *     description: Render a specific invoice\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/invoice/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneInvoice = await invoiceModel.getOneInvoice(req.params.id);\n\n        let oneInvoiceData = JSON.parse(JSON.stringify(oneInvoice));\n        if (oneInvoiceData[0].length === 0) {\n            return res\n                .status(404)\n                .send(`No Invoice with id ${req.params.id} in the system`);\n        }\n        return res.status(200).send(oneInvoice);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Display all invoices for a user\n *     description: Render all invoices for a user\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/invoice/user/:id\", async (req: Request, res: Response) => {\n    try {\n        let userInvoices = await invoiceModel.getInvoicesByUserId(\n            req.params.id\n        );\n\n        let userInvoicesData = JSON.parse(JSON.stringify(userInvoices));\n        if (userInvoicesData[0].length === 0) {\n            return res\n                .status(404)\n                .send(\n                    `User with id ${req.params.id} currently has no invoices in the system`\n                );\n        }\n        return res.status(200).send(userInvoices);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Create a invoice for a user\n *     description: Create a invoice for a user with information\n *     { Rent_id, User_id, PhoneNumber, Amount, Status }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/invoice/user/:id\", async (req: Request, res: Response) => {\n    try {\n        const invoiceInfo = {\n            rentId: req.body.rentId,\n            userId: parseInt(req.params.id),\n            amount: req.body.amount,\n            status: req.body.status,\n        };\n\n        const newInvoice = await invoiceModel.createOneInvoice(\n            invoiceInfo.rentId,\n            invoiceInfo.userId,\n            invoiceInfo.amount,\n            invoiceInfo.status\n        );\n\n        res.status(201).send(\n            `New Invoice has been created with information:\\n\n                RentId: ${invoiceInfo.rentId},\n                UserId: ${invoiceInfo.userId}, \n                Amount: ${invoiceInfo.amount}, \n                Status: ${invoiceInfo.status}`\n        );\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   get:\n *     summary: Update invoice status\n *     description: Update an  status invoice\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/invoice/status/:id\", async (req: Request, res: Response) => {\n    try {\n        let invoiceId = parseInt(req.params.id);\n        let status = req.body.status;\n\n        let newInvoiceStatus = await invoiceModel.updateInvoiceStatus(invoiceId, status);\n\n        res.status(201).send(\n            `Invoice with id ${invoiceId} has changed status to ${status}`\n        );\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Invoice ROUTE\n * /:\n *   post:\n *     summary: Update invoice amount\n *     description: Update an invoice amount\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/invoice/amount/:id\", async (req: Request, res: Response) => {\n    try {\n        let invoiceId = parseInt(req.params.id);\n        let amount = req.body.amount;\n\n        let newInvoiceAmount = await invoiceModel.updateInvoiceAmount(invoiceId, amount);\n\n        res.status(201).send(\n            `Invoice with id ${invoiceId} has changed amount to ${amount}`\n        );\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c75c3ac5b9fcf188c96e8d434fb72df07751132e","contentHash":"e5e0aabe9ed532526c758a6fa9f3c5ba9715c6cc7c9019e18ebb5cf967305709"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":23,"column":0},"end":{"line":35,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"22":{"start":{"line":36,"column":21},"end":{"line":90,"column":1}},"23":{"start":{"line":43,"column":8},"end":{"line":48,"column":11}},"24":{"start":{"line":44,"column":22},"end":{"line":44,"column":44}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},"27":{"start":{"line":51,"column":8},"end":{"line":56,"column":11}},"28":{"start":{"line":52,"column":22},"end":{"line":52,"column":43}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":51}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":26}},"31":{"start":{"line":59,"column":8},"end":{"line":64,"column":11}},"32":{"start":{"line":60,"column":22},"end":{"line":60,"column":52}},"33":{"start":{"line":62,"column":12},"end":{"line":62,"column":48}},"34":{"start":{"line":63,"column":12},"end":{"line":63,"column":26}},"35":{"start":{"line":67,"column":8},"end":{"line":72,"column":11}},"36":{"start":{"line":68,"column":22},"end":{"line":68,"column":55}},"37":{"start":{"line":70,"column":12},"end":{"line":70,"column":72}},"38":{"start":{"line":71,"column":12},"end":{"line":71,"column":26}},"39":{"start":{"line":75,"column":8},"end":{"line":80,"column":11}},"40":{"start":{"line":76,"column":22},"end":{"line":76,"column":56}},"41":{"start":{"line":78,"column":12},"end":{"line":78,"column":59}},"42":{"start":{"line":79,"column":12},"end":{"line":79,"column":26}},"43":{"start":{"line":83,"column":8},"end":{"line":88,"column":11}},"44":{"start":{"line":84,"column":22},"end":{"line":84,"column":56}},"45":{"start":{"line":86,"column":12},"end":{"line":86,"column":59}},"46":{"start":{"line":87,"column":12},"end":{"line":87,"column":26}},"47":{"start":{"line":91,"column":0},"end":{"line":91,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":1},"end":{"line":23,"column":2}},"loc":{"start":{"line":23,"column":13},"end":{"line":35,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":34,"column":5}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":33},"end":{"line":33,"column":9}},"line":31},"11":{"name":"showAllInvoices","decl":{"start":{"line":42,"column":30},"end":{"line":42,"column":45}},"loc":{"start":{"line":42,"column":48},"end":{"line":49,"column":5}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":47},"end":{"line":43,"column":48}},"loc":{"start":{"line":43,"column":60},"end":{"line":48,"column":9}},"line":43},"13":{"name":"getOneInvoice","decl":{"start":{"line":50,"column":28},"end":{"line":50,"column":41}},"loc":{"start":{"line":50,"column":53},"end":{"line":57,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":56,"column":9}},"line":51},"15":{"name":"getOneInvoice","decl":{"start":{"line":58,"column":34},"end":{"line":58,"column":47}},"loc":{"start":{"line":58,"column":56},"end":{"line":65,"column":5}},"line":58},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":64,"column":9}},"line":59},"17":{"name":"createOneInvoice","decl":{"start":{"line":66,"column":31},"end":{"line":66,"column":47}},"loc":{"start":{"line":66,"column":80},"end":{"line":73,"column":5}},"line":66},"18":{"name":"(anonymous_18)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":60},"end":{"line":72,"column":9}},"line":67},"19":{"name":"updateInvoiceStatus","decl":{"start":{"line":74,"column":34},"end":{"line":74,"column":53}},"loc":{"start":{"line":74,"column":73},"end":{"line":81,"column":5}},"line":74},"20":{"name":"(anonymous_20)","decl":{"start":{"line":75,"column":47},"end":{"line":75,"column":48}},"loc":{"start":{"line":75,"column":60},"end":{"line":80,"column":9}},"line":75},"21":{"name":"updateInvoiceAmount","decl":{"start":{"line":82,"column":34},"end":{"line":82,"column":53}},"loc":{"start":{"line":82,"column":73},"end":{"line":89,"column":5}},"line":82},"22":{"name":"(anonymous_22)","decl":{"start":{"line":83,"column":47},"end":{"line":83,"column":48}},"loc":{"start":{"line":83,"column":60},"end":{"line":88,"column":9}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/invoice.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6DAAmC;AACnC,uDAA+B;AAE/B,IAAI,EAAoB,CAAC;AACzB;;;;GAIG;AACH,CAAC;;QACG,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;YACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;SAC/B,CAAC,CAAC;QAEH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACpB,EAAE,CAAC,GAAG,EAAE,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;CAAA,CAAC,EAAE,CAAC;AAEL,MAAM,YAAY,GAAG;IACjB;;;;OAIG;IACH,eAAe,EAAE,SAAe,eAAe;;YAC3C,IAAI,GAAG,GAAG,sBAAsB,CAAC;YACjC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE1B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,aAAa,EAAE,SAAe,aAAa,CAAC,SAAiB;;YACzD,IAAI,GAAG,GAAG,qBAAqB,CAAC;YAChC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;YACvC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,mBAAmB,EAAE,SAAe,aAAa,CAAC,MAAc;;YAC5D,IAAI,GAAG,GAAG,8BAA8B,CAAC;YACzC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,gBAAgB,EAAE,SAAe,gBAAgB,CAC7C,MAAc,EACd,MAAc,EACd,MAAc,EACd,MAAc;;YAEd,IAAI,GAAG,GAAG,iCAAiC,CAAC;YAC5C,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YAC5D,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,mBAAmB,EAAE,SAAe,mBAAmB,CACnD,SAAiB,EACjB,MAAc;;YAEd,IAAI,GAAG,GAAG,kCAAkC,CAAC;YAC7C,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YAC/C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,mBAAmB,EAAE,SAAe,mBAAmB,CACnD,SAAiB,EACjB,MAAc;;YAEd,IAAI,GAAG,GAAG,kCAAkC,CAAC;YAC7C,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YAC/C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nlet db: mysql.Connection;\n/**\n * Main function to connect to database.\n * @async\n * @returns void\n */\n(async function () {\n    db = await mysql.createConnection({\n        host: config.DB_HOST,\n        user: config.DB_USER,\n        database: config.DB_NAME,\n        password: config.DB_PASSWORD,\n    });\n\n    process.on(\"exit\", () => {\n        db.end();\n    });\n})();\n\nconst invoiceModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllInvoices: async function showAllInvoices() {\n        let sql = `CALL get_invoices();`;\n        let res;\n\n        res = await db.query(sql);\n\n        return res[0];\n    },\n    getOneInvoice: async function getOneInvoice(invoiceId: string) {\n        let sql = `CALL get_invoice(?)`;\n        let res;\n\n        res = await db.query(sql, [invoiceId]);\n        return res[0];\n    },\n    getInvoicesByUserId: async function getOneInvoice(userId: string) {\n        let sql = `CALL get_invoices_by_user(?)`;\n        let res;\n\n        res = await db.query(sql, [userId]);\n        return res[0];\n    },\n    createOneInvoice: async function createOneInvoice(\n        rentId: number,\n        userId: number,\n        amount: number,\n        status: number\n    ) {\n        let sql = `CALL create_invoice(?, ?, ?, ?)`;\n        let res;\n\n        res = await db.query(sql, [rentId, userId, amount, status]);\n        return res[0];\n    },\n    updateInvoiceStatus: async function updateInvoiceStatus(\n        invoiceId: number,\n        status: number\n    ) {\n        let sql = `CALL update_invoice_status(?, ?)`;\n        let res;\n\n        res = await db.query(sql, [invoiceId, status]);\n        return res[0];\n    },\n    updateInvoiceAmount: async function updateInvoiceAmount(\n        invoiceId: number,\n        amount: number\n    ) {\n        let sql = `CALL update_invoice_amount(?, ?)`;\n        let res;\n\n        res = await db.query(sql, [invoiceId, amount]);\n        return res[0];\n    },\n};\n\nexport default invoiceModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7d062019e2bbc046ad6541d2c9a9dde57bfbb125","contentHash":"b74d1922fb2012103274e50353fda6a7a7833baf28c1d397a319bd71d58fd084"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/geofence.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/geofence.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":65}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":30,"column":0},"end":{"line":42,"column":4}},"19":{"start":{"line":30,"column":38},"end":{"line":42,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":41,"column":5}},"21":{"start":{"line":32,"column":27},"end":{"line":32,"column":70}},"22":{"start":{"line":33,"column":31},"end":{"line":33,"column":71}},"23":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"24":{"start":{"line":35,"column":12},"end":{"line":35,"column":80}},"25":{"start":{"line":37,"column":8},"end":{"line":37,"column":50}},"26":{"start":{"line":40,"column":8},"end":{"line":40,"column":43}},"27":{"start":{"line":55,"column":0},"end":{"line":69,"column":4}},"28":{"start":{"line":55,"column":42},"end":{"line":69,"column":2}},"29":{"start":{"line":56,"column":4},"end":{"line":68,"column":5}},"30":{"start":{"line":57,"column":26},"end":{"line":57,"column":80}},"31":{"start":{"line":58,"column":30},"end":{"line":58,"column":69}},"32":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"33":{"start":{"line":60,"column":12},"end":{"line":62,"column":76}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":49}},"35":{"start":{"line":67,"column":8},"end":{"line":67,"column":43}},"36":{"start":{"line":83,"column":0},"end":{"line":101,"column":4}},"37":{"start":{"line":83,"column":39},"end":{"line":101,"column":2}},"38":{"start":{"line":84,"column":4},"end":{"line":100,"column":5}},"39":{"start":{"line":85,"column":29},"end":{"line":89,"column":9}},"40":{"start":{"line":90,"column":29},"end":{"line":90,"column":135}},"41":{"start":{"line":91,"column":8},"end":{"line":96,"column":11}},"42":{"start":{"line":99,"column":8},"end":{"line":99,"column":43}},"43":{"start":{"line":114,"column":0},"end":{"line":126,"column":4}},"44":{"start":{"line":114,"column":55},"end":{"line":126,"column":2}},"45":{"start":{"line":115,"column":4},"end":{"line":125,"column":5}},"46":{"start":{"line":116,"column":27},"end":{"line":116,"column":40}},"47":{"start":{"line":117,"column":28},"end":{"line":117,"column":48}},"48":{"start":{"line":118,"column":32},"end":{"line":118,"column":99}},"49":{"start":{"line":119,"column":8},"end":{"line":121,"column":91}},"50":{"start":{"line":124,"column":8},"end":{"line":124,"column":43}},"51":{"start":{"line":139,"column":0},"end":{"line":151,"column":4}},"52":{"start":{"line":139,"column":48},"end":{"line":151,"column":2}},"53":{"start":{"line":140,"column":4},"end":{"line":150,"column":5}},"54":{"start":{"line":141,"column":27},"end":{"line":141,"column":40}},"55":{"start":{"line":142,"column":21},"end":{"line":142,"column":34}},"56":{"start":{"line":143,"column":25},"end":{"line":143,"column":78}},"57":{"start":{"line":144,"column":8},"end":{"line":146,"column":77}},"58":{"start":{"line":149,"column":8},"end":{"line":149,"column":43}},"59":{"start":{"line":164,"column":0},"end":{"line":176,"column":4}},"60":{"start":{"line":164,"column":48},"end":{"line":176,"column":2}},"61":{"start":{"line":165,"column":4},"end":{"line":175,"column":5}},"62":{"start":{"line":166,"column":27},"end":{"line":166,"column":40}},"63":{"start":{"line":167,"column":21},"end":{"line":167,"column":34}},"64":{"start":{"line":168,"column":25},"end":{"line":168,"column":78}},"65":{"start":{"line":169,"column":8},"end":{"line":171,"column":77}},"66":{"start":{"line":174,"column":8},"end":{"line":174,"column":43}},"67":{"start":{"line":189,"column":0},"end":{"line":200,"column":4}},"68":{"start":{"line":189,"column":45},"end":{"line":200,"column":2}},"69":{"start":{"line":190,"column":4},"end":{"line":199,"column":5}},"70":{"start":{"line":191,"column":27},"end":{"line":191,"column":40}},"71":{"start":{"line":192,"column":31},"end":{"line":192,"column":85}},"72":{"start":{"line":193,"column":8},"end":{"line":195,"column":79}},"73":{"start":{"line":198,"column":8},"end":{"line":198,"column":43}},"74":{"start":{"line":201,"column":0},"end":{"line":201,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":24},"end":{"line":30,"column":25}},"loc":{"start":{"line":30,"column":38},"end":{"line":42,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":72},"end":{"line":30,"column":73}},"loc":{"start":{"line":30,"column":85},"end":{"line":42,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":28},"end":{"line":55,"column":29}},"loc":{"start":{"line":55,"column":42},"end":{"line":69,"column":2}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":55,"column":76},"end":{"line":55,"column":77}},"loc":{"start":{"line":55,"column":89},"end":{"line":69,"column":1}},"line":55},"12":{"name":"(anonymous_12)","decl":{"start":{"line":83,"column":25},"end":{"line":83,"column":26}},"loc":{"start":{"line":83,"column":39},"end":{"line":101,"column":2}},"line":83},"13":{"name":"(anonymous_13)","decl":{"start":{"line":83,"column":73},"end":{"line":83,"column":74}},"loc":{"start":{"line":83,"column":86},"end":{"line":101,"column":1}},"line":83},"14":{"name":"(anonymous_14)","decl":{"start":{"line":114,"column":41},"end":{"line":114,"column":42}},"loc":{"start":{"line":114,"column":55},"end":{"line":126,"column":2}},"line":114},"15":{"name":"(anonymous_15)","decl":{"start":{"line":114,"column":89},"end":{"line":114,"column":90}},"loc":{"start":{"line":114,"column":102},"end":{"line":126,"column":1}},"line":114},"16":{"name":"(anonymous_16)","decl":{"start":{"line":139,"column":34},"end":{"line":139,"column":35}},"loc":{"start":{"line":139,"column":48},"end":{"line":151,"column":2}},"line":139},"17":{"name":"(anonymous_17)","decl":{"start":{"line":139,"column":82},"end":{"line":139,"column":83}},"loc":{"start":{"line":139,"column":95},"end":{"line":151,"column":1}},"line":139},"18":{"name":"(anonymous_18)","decl":{"start":{"line":164,"column":34},"end":{"line":164,"column":35}},"loc":{"start":{"line":164,"column":48},"end":{"line":176,"column":2}},"line":164},"19":{"name":"(anonymous_19)","decl":{"start":{"line":164,"column":82},"end":{"line":164,"column":83}},"loc":{"start":{"line":164,"column":95},"end":{"line":176,"column":1}},"line":164},"20":{"name":"(anonymous_20)","decl":{"start":{"line":189,"column":31},"end":{"line":189,"column":32}},"loc":{"start":{"line":189,"column":45},"end":{"line":200,"column":2}},"line":189},"21":{"name":"(anonymous_21)","decl":{"start":{"line":189,"column":79},"end":{"line":189,"column":80}},"loc":{"start":{"line":189,"column":92},"end":{"line":200,"column":1}},"line":189}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"9":{"loc":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},{"start":{"line":59,"column":8},"end":{"line":63,"column":9}}],"line":59}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/geofence.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/geofence.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, Router } from \"express\";\nimport geofenceModel from \"../models/geofence\";\nconst router = Router();\n\ninterface GeofenceInfo {\n    Coordinates: string;\n    Info: string;\n    Type: number;\n}\n\n/**\n * Geofence ROUTE\n * /:\n *   get:\n *     summary: Display all geofences\n *     description: Render list of all geofences\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/geofence\", async (req: Request, res: Response) => {\n    try {\n        let allGeofences = await geofenceModel.showAllGeofences();\n        let allGeofencesData = JSON.parse(JSON.stringify(allGeofences));\n        if (allGeofencesData[0].length === 0) {\n            return res.status(404).send(\"No geofences currently in the system\");\n        }\n        return res.status(200).send(allGeofences);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   get:\n *     summary: Display information for one geofence\n *     description: Render a specific geofence\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/geofence/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneGeofence = await geofenceModel.getOneGeofence(req.params.id);\n\n        let oneGeofenceData = JSON.parse(JSON.stringify(oneGeofence));\n        if (oneGeofenceData[0].length === 0) {\n            return res\n                .status(404)\n                .send(`No geofence with id ${req.params.id} in the system`);\n        }\n        return res.status(200).send(oneGeofence);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   get:\n *     summary: Create one geofence\n *     description: Create one geofence with information:\n * { coordinates, info , type }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/geofence\", async (req: Request, res: Response) => {\n    try {\n        const geofenceInfo = {\n            coordinates: req.body.coordinates,\n            info: req.body.info,\n            type: req.body.type,\n        };\n\n        const _newGeofence = await geofenceModel.createOneGeofence(\n            geofenceInfo.coordinates,\n            geofenceInfo.info,\n            geofenceInfo.type\n        );\n\n        return res.status(200)\n            .send(`A new geofence has been created with info:\\n\n        Coordinates: ${geofenceInfo.coordinates},\n        Info: ${geofenceInfo.info},\n        Type: ${geofenceInfo.type}\n        `);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   post:\n *     summary: Update coordinates for one geofence\n *     description: Update one geofence with information: { coordinates }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\n    \"/geofence/coordinates/:id\",\n    async (req: Request, res: Response) => {\n        try {\n            const geofenceId = req.params.id;\n            const coordinates = req.body.coordinates;\n\n            const _newCoordinates = await geofenceModel.updateCoordinates(\n                geofenceId,\n                coordinates\n            );\n\n            return res\n                .status(200)\n                .send(\n                    `Geofence with id has been updated with new coordinates ${coordinates}`\n                );\n        } catch (error) {\n            return res.status(404).send(error);\n        }\n    }\n);\n\n/**\n * Geofence ROUTE\n * /:\n *   post:\n *     summary: Update info for one geofence\n *     description: Update one geofence with information: { info }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/geofence/info/:id\", async (req: Request, res: Response) => {\n    try {\n        const geofenceId = req.params.id;\n        const info = req.body.info;\n\n        const _newInfo = await geofenceModel.updateInfo(geofenceId, info);\n\n        return res\n            .status(200)\n            .send(`Geofence with id has been updated with new info ${info}`);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   post:\n *     summary: Update type for one geofence\n *     description: Update one geofence with information: { type }\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/geofence/type/:id\", async (req: Request, res: Response) => {\n    try {\n        const geofenceId = req.params.id;\n        const type = req.body.type;\n\n        const _newType = await geofenceModel.updateType(geofenceId, type);\n\n        return res\n            .status(200)\n            .send(`Geofence with id has been updated with new type ${type}`);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Geofence ROUTE\n * /:\n *   post:\n *     summary: Delete one geofence\n *     description: Delete a geofence with its id\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.delete(\"/geofence/:id\", async (req: Request, res: Response) => {\n    try {\n        const geofenceId = req.params.id;\n\n        const deleteGeofence = await geofenceModel.deleteOneGeofence(geofenceId);\n\n        return res\n            .status(200)\n            .send(`Geofence with id ${geofenceId} has been deleted (Type 40)`);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"adb2893eaf6573bd3615300900167632088f56d6","contentHash":"7453bedebdf035f85da76b17301d9eeb34240a61e7a8602e7d845d0e8df4ba39"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":23,"column":0},"end":{"line":35,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"22":{"start":{"line":36,"column":22},"end":{"line":98,"column":1}},"23":{"start":{"line":43,"column":8},"end":{"line":48,"column":11}},"24":{"start":{"line":44,"column":22},"end":{"line":44,"column":45}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},"27":{"start":{"line":51,"column":8},"end":{"line":56,"column":11}},"28":{"start":{"line":52,"column":22},"end":{"line":52,"column":44}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":52}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":26}},"31":{"start":{"line":59,"column":8},"end":{"line":64,"column":11}},"32":{"start":{"line":60,"column":22},"end":{"line":60,"column":53}},"33":{"start":{"line":62,"column":12},"end":{"line":62,"column":65}},"34":{"start":{"line":63,"column":12},"end":{"line":63,"column":26}},"35":{"start":{"line":67,"column":8},"end":{"line":72,"column":11}},"36":{"start":{"line":68,"column":22},"end":{"line":68,"column":62}},"37":{"start":{"line":70,"column":12},"end":{"line":70,"column":65}},"38":{"start":{"line":71,"column":12},"end":{"line":71,"column":26}},"39":{"start":{"line":75,"column":8},"end":{"line":80,"column":11}},"40":{"start":{"line":76,"column":22},"end":{"line":76,"column":55}},"41":{"start":{"line":78,"column":12},"end":{"line":78,"column":58}},"42":{"start":{"line":79,"column":12},"end":{"line":79,"column":26}},"43":{"start":{"line":83,"column":8},"end":{"line":88,"column":11}},"44":{"start":{"line":84,"column":22},"end":{"line":84,"column":55}},"45":{"start":{"line":86,"column":12},"end":{"line":86,"column":58}},"46":{"start":{"line":87,"column":12},"end":{"line":87,"column":26}},"47":{"start":{"line":91,"column":8},"end":{"line":96,"column":11}},"48":{"start":{"line":92,"column":22},"end":{"line":92,"column":47}},"49":{"start":{"line":94,"column":12},"end":{"line":94,"column":52}},"50":{"start":{"line":95,"column":12},"end":{"line":95,"column":26}},"51":{"start":{"line":99,"column":0},"end":{"line":99,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":1},"end":{"line":23,"column":2}},"loc":{"start":{"line":23,"column":13},"end":{"line":35,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":34,"column":5}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":33},"end":{"line":33,"column":9}},"line":31},"11":{"name":"showAllGeofences","decl":{"start":{"line":42,"column":31},"end":{"line":42,"column":47}},"loc":{"start":{"line":42,"column":50},"end":{"line":49,"column":5}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":47},"end":{"line":43,"column":48}},"loc":{"start":{"line":43,"column":60},"end":{"line":48,"column":9}},"line":43},"13":{"name":"getOneGeofence","decl":{"start":{"line":50,"column":29},"end":{"line":50,"column":43}},"loc":{"start":{"line":50,"column":56},"end":{"line":57,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":56,"column":9}},"line":51},"15":{"name":"createOneGeofence","decl":{"start":{"line":58,"column":32},"end":{"line":58,"column":49}},"loc":{"start":{"line":58,"column":75},"end":{"line":65,"column":5}},"line":58},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":64,"column":9}},"line":59},"17":{"name":"updateCoordinates","decl":{"start":{"line":66,"column":32},"end":{"line":66,"column":49}},"loc":{"start":{"line":66,"column":75},"end":{"line":73,"column":5}},"line":66},"18":{"name":"(anonymous_18)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":60},"end":{"line":72,"column":9}},"line":67},"19":{"name":"updateInfo","decl":{"start":{"line":74,"column":25},"end":{"line":74,"column":35}},"loc":{"start":{"line":74,"column":54},"end":{"line":81,"column":5}},"line":74},"20":{"name":"(anonymous_20)","decl":{"start":{"line":75,"column":47},"end":{"line":75,"column":48}},"loc":{"start":{"line":75,"column":60},"end":{"line":80,"column":9}},"line":75},"21":{"name":"updateType","decl":{"start":{"line":82,"column":25},"end":{"line":82,"column":35}},"loc":{"start":{"line":82,"column":54},"end":{"line":89,"column":5}},"line":82},"22":{"name":"(anonymous_22)","decl":{"start":{"line":83,"column":47},"end":{"line":83,"column":48}},"loc":{"start":{"line":83,"column":60},"end":{"line":88,"column":9}},"line":83},"23":{"name":"deleteOneGeofence","decl":{"start":{"line":90,"column":32},"end":{"line":90,"column":49}},"loc":{"start":{"line":90,"column":62},"end":{"line":97,"column":5}},"line":90},"24":{"name":"(anonymous_24)","decl":{"start":{"line":91,"column":47},"end":{"line":91,"column":48}},"loc":{"start":{"line":91,"column":60},"end":{"line":96,"column":9}},"line":91}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/geofence.ts"],"names":[],"mappings":"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","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nlet db: mysql.Connection;\n/**\n * Main function to connect to database.\n * @async\n * @returns void\n */\n(async function () {\n    db = await mysql.createConnection({\n        host: config.DB_HOST,\n        user: config.DB_USER,\n        database: config.DB_NAME,\n        password: config.DB_PASSWORD,\n    });\n\n    process.on(\"exit\", () => {\n        db.end();\n    });\n})();\n\nconst geofenceModel = {\n    /**\n     * Function to show all stations\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllGeofences: async function showAllGeofences() {\n        let sql = `CALL get_geofences();`;\n        let res;\n\n        res = await db.query(sql);\n\n        return res[0];\n    },\n    getOneGeofence: async function getOneGeofence(geofenceId: string) {\n        let sql = `CALL get_geofence(?)`;\n        let res;\n\n        res = await db.query(sql, [geofenceId]);\n        return res[0];\n    },\n    createOneGeofence: async function createOneGeofence(\n        coordinates: string,\n        info: string,\n        type: number\n    ) {\n        let sql = `CALL create_geofence(?, ? ,?)`;\n        let res;\n\n        res = await db.query(sql, [coordinates, info, type]);\n        return res[0];\n    },\n    updateCoordinates: async function updateCoordinates(\n        geofenceId: string,\n        coordinates: string\n    ) {\n        let sql = `CALL update_geofence_coordinates(?, ?)`;\n        let res;\n\n        res = await db.query(sql, [geofenceId, coordinates]);\n        return res[0];\n    },\n    updateInfo: async function updateInfo(geofenceId: string, info: string) {\n        let sql = `CALL update_geofence_info(?, ?)`;\n        let res;\n\n        res = await db.query(sql, [geofenceId, info]);\n        return res[0];\n    },\n    updateType: async function updateType(geofenceId: string, type: number) {\n        let sql = `CALL update_geofence_type(?, ?)`;\n        let res;\n\n        res = await db.query(sql, [geofenceId, type]);\n        return res[0];\n    },\n    deleteOneGeofence: async function deleteOneGeofence(geofenceId: string) {\n        let sql = `CALL delete_geofence(?)`;\n        let res;\n\n        res = await db.query(sql, [geofenceId]);\n        return res[0];\n    },\n};\n\nexport default geofenceModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9918ca0fe06000c772132a07b258019f9b675755","contentHash":"d83fd0e5532a8a27b7f817ce67e1e0655278eeb211bdc0d8dceb89124aab55a1"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/charger.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/charger.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":65}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":38}},"18":{"start":{"line":30,"column":0},"end":{"line":38,"column":4}},"19":{"start":{"line":30,"column":37},"end":{"line":38,"column":2}},"20":{"start":{"line":31,"column":4},"end":{"line":37,"column":5}},"21":{"start":{"line":32,"column":26},"end":{"line":32,"column":68}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":49}},"23":{"start":{"line":36,"column":8},"end":{"line":36,"column":43}},"24":{"start":{"line":51,"column":0},"end":{"line":59,"column":4}},"25":{"start":{"line":51,"column":41},"end":{"line":59,"column":2}},"26":{"start":{"line":52,"column":4},"end":{"line":58,"column":5}},"27":{"start":{"line":53,"column":25},"end":{"line":53,"column":78}},"28":{"start":{"line":54,"column":8},"end":{"line":54,"column":48}},"29":{"start":{"line":57,"column":8},"end":{"line":57,"column":43}},"30":{"start":{"line":72,"column":0},"end":{"line":84,"column":4}},"31":{"start":{"line":72,"column":42},"end":{"line":84,"column":2}},"32":{"start":{"line":73,"column":4},"end":{"line":83,"column":5}},"33":{"start":{"line":74,"column":26},"end":{"line":74,"column":39}},"34":{"start":{"line":75,"column":21},"end":{"line":75,"column":36}},"35":{"start":{"line":76,"column":24},"end":{"line":76,"column":80}},"36":{"start":{"line":77,"column":8},"end":{"line":79,"column":87}},"37":{"start":{"line":82,"column":8},"end":{"line":82,"column":43}},"38":{"start":{"line":85,"column":0},"end":{"line":85,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},"loc":{"start":{"line":30,"column":37},"end":{"line":38,"column":2}},"line":30},"9":{"name":"(anonymous_9)","decl":{"start":{"line":30,"column":71},"end":{"line":30,"column":72}},"loc":{"start":{"line":30,"column":84},"end":{"line":38,"column":1}},"line":30},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":27},"end":{"line":51,"column":28}},"loc":{"start":{"line":51,"column":41},"end":{"line":59,"column":2}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":75},"end":{"line":51,"column":76}},"loc":{"start":{"line":51,"column":88},"end":{"line":59,"column":1}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":72,"column":28},"end":{"line":72,"column":29}},"loc":{"start":{"line":72,"column":42},"end":{"line":84,"column":2}},"line":72},"13":{"name":"(anonymous_13)","decl":{"start":{"line":72,"column":76},"end":{"line":72,"column":77}},"loc":{"start":{"line":72,"column":89},"end":{"line":84,"column":1}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/charger.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/routes/charger.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAAoD;AACpD,kEAA8C;AAC9C,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IACzD,IAAI;QACA,IAAI,WAAW,GAAG,MAAM,kBAAY,CAAC,eAAe,EAAE,CAAC;QACvD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC5C;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7D,IAAI;QACA,IAAI,UAAU,GAAG,MAAM,kBAAY,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3C;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH;;;;;;;;;;;GAWG;AACH,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC9D,IAAI;QACA,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QAChC,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAE7B,IAAI,SAAS,GAAG,MAAM,kBAAY,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACnE,OAAO,GAAG;aACL,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CACD,mBAAmB,GAAG,CAAC,MAAM,CAAC,EAAE,0BAA0B,MAAM,GAAG,CACtE,CAAC;KACT;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtC;AACL,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Request, Response, Router } from \"express\";\nimport chargerModel from \"../models/chargers\";\nconst router = Router();\n\n/**\n * Charger ROUTE\n * /:\n *   get:\n *     summary: Display all chargers\n *     description: Render list of all chargers\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/charger\", async (req: Request, res: Response) => {\n    try {\n        let allChargers = await chargerModel.showAllChargers();\n        return res.status(200).send(allChargers);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Charger ROUTE\n * /:\n *   get:\n *     summary: Display information for one charger\n *     description: Render a specific charger\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.get(\"/charger/:id\", async (req: Request, res: Response) => {\n    try {\n        let oneCharger = await chargerModel.getOneCharger(req.params.id);\n        return res.status(200).send(oneCharger);\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\n/**\n * Charger ROUTE\n * /:\n *   post:\n *     summary: Change status of one charger\n *     description: Update a status for one charger\n * @param {Request}  req  The incoming request.\n * @param {Response} res  The outgoing response.\n * @param {Function} next Next to call in chain of middleware.\n *\n * @returns {void}\n */\nrouter.post(\"/charger/:id\", async (req: Request, res: Response) => {\n    try {\n        const chargerID = req.params.id;\n        let status = req.body.status;\n\n        let newStatus = await chargerModel.updateStatus(chargerID, status);\n        return res\n            .status(200)\n            .send(\n                `Charger with id ${req.params.id} has changed status to ${status} `\n            );\n    } catch (error) {\n        return res.status(404).send(error);\n    }\n});\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0bc7d5083d89c84c3d10fab93c5e80965a8ab7dc","contentHash":"3228ced7a8f7dba2fd39e6ab7a3aa602bf0db6fe52f70dc064183f22c239fe15"},"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts":{"path":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":18},"end":{"line":15,"column":60}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":54}},"17":{"start":{"line":23,"column":0},"end":{"line":35,"column":5}},"18":{"start":{"line":24,"column":4},"end":{"line":34,"column":7}},"19":{"start":{"line":25,"column":8},"end":{"line":30,"column":11}},"20":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":21}},"22":{"start":{"line":36,"column":21},"end":{"line":66,"column":1}},"23":{"start":{"line":43,"column":8},"end":{"line":48,"column":11}},"24":{"start":{"line":44,"column":22},"end":{"line":44,"column":44}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":38}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":26}},"27":{"start":{"line":51,"column":8},"end":{"line":56,"column":11}},"28":{"start":{"line":52,"column":22},"end":{"line":52,"column":43}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":51}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":26}},"31":{"start":{"line":59,"column":8},"end":{"line":64,"column":11}},"32":{"start":{"line":60,"column":22},"end":{"line":60,"column":56}},"33":{"start":{"line":62,"column":12},"end":{"line":62,"column":59}},"34":{"start":{"line":63,"column":12},"end":{"line":63,"column":26}},"35":{"start":{"line":67,"column":0},"end":{"line":67,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":1},"end":{"line":23,"column":2}},"loc":{"start":{"line":23,"column":13},"end":{"line":35,"column":1}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":43},"end":{"line":24,"column":44}},"loc":{"start":{"line":24,"column":56},"end":{"line":34,"column":5}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"loc":{"start":{"line":31,"column":33},"end":{"line":33,"column":9}},"line":31},"11":{"name":"showAllChargers","decl":{"start":{"line":42,"column":30},"end":{"line":42,"column":45}},"loc":{"start":{"line":42,"column":48},"end":{"line":49,"column":5}},"line":42},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":47},"end":{"line":43,"column":48}},"loc":{"start":{"line":43,"column":60},"end":{"line":48,"column":9}},"line":43},"13":{"name":"getOneCharger","decl":{"start":{"line":50,"column":28},"end":{"line":50,"column":41}},"loc":{"start":{"line":50,"column":53},"end":{"line":57,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":51,"column":47},"end":{"line":51,"column":48}},"loc":{"start":{"line":51,"column":60},"end":{"line":56,"column":9}},"line":51},"15":{"name":"updateStatus","decl":{"start":{"line":58,"column":27},"end":{"line":58,"column":39}},"loc":{"start":{"line":58,"column":59},"end":{"line":65,"column":5}},"line":58},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":47},"end":{"line":59,"column":48}},"loc":{"start":{"line":59,"column":60},"end":{"line":64,"column":9}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts","sources":["/Users/frida/Kod/BTH/dbwebb-kurser/VTeam/Spark-backend/Spark-API-v1/src/models/chargers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,6DAAmC;AACnC,uDAA+B;AAE/B,IAAI,EAAoB,CAAC;AACzB;;;;GAIG;AACH,CAAC;;QACG,EAAE,GAAG,MAAM,iBAAK,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,IAAI,EAAE,gBAAM,CAAC,OAAO;YACpB,QAAQ,EAAE,gBAAM,CAAC,OAAO;YACxB,QAAQ,EAAE,gBAAM,CAAC,WAAW;SAC/B,CAAC,CAAC;QAEH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE;YACpB,EAAE,CAAC,GAAG,EAAE,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;CAAA,CAAC,EAAE,CAAC;AAEL,MAAM,YAAY,GAAG;IACjB;;;;OAIG;IACH,eAAe,EAAE,SAAe,eAAe;;YAC3C,IAAI,GAAG,GAAG,sBAAsB,CAAC;YACjC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE1B,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,aAAa,EAAE,SAAe,aAAa,CAAC,SAAiB;;YACzD,IAAI,GAAG,GAAG,qBAAqB,CAAC;YAChC,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;YACvC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;IACD,YAAY,EAAE,SAAe,YAAY,CACrC,SAAiB,EACjB,MAAc;;YAEd,IAAI,GAAG,GAAG,kCAAkC,CAAC;YAC7C,IAAI,GAAG,CAAC;YAER,GAAG,GAAG,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;YAC/C,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;KAAA;CACJ,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import mysql from \"mysql2/promise\";\nimport config from \"../config\";\n\nlet db: mysql.Connection;\n/**\n * Main function to connect to database.\n * @async\n * @returns void\n */\n(async function () {\n    db = await mysql.createConnection({\n        host: config.DB_HOST,\n        user: config.DB_USER,\n        database: config.DB_NAME,\n        password: config.DB_PASSWORD,\n    });\n\n    process.on(\"exit\", () => {\n        db.end();\n    });\n})();\n\nconst chargerModel = {\n    /**\n     * Function to show all chargers\n     * @async\n     * @returns {RowDataPacket} Resultset from the query.\n     */\n    showAllChargers: async function showAllChargers() {\n        let sql = `CALL get_chargers();`;\n        let res;\n\n        res = await db.query(sql);\n\n        return res[0];\n    },\n    getOneCharger: async function getOneCharger(chargerId: string) {\n        let sql = `CALL get_charger(?)`;\n        let res;\n\n        res = await db.query(sql, [chargerId]);\n        return res[0];\n    },\n    updateStatus: async function updateStatus(\n        chargerId: string,\n        status: string\n    ) {\n        let sql = `CALL update_charger_status(?, ?)`;\n        let res;\n\n        res = await db.query(sql, [chargerId, status]);\n        return res[0];\n    },\n};\n\nexport default chargerModel;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f3e4d304e300d4154e452ea924e986fb6857f3e8","contentHash":"983cb1f8ab6be11e0c31da677c660095a4057d7d5e3c6b3c7664f40594599136"}}